"use strict";function datePickerDirective(){return{template:'<div class="md-datepicker-input-container" style="padding-bottom: 0; outline: none; cursor: pointer;" ng-class="{\'md-datepicker-focused\': ctrl.isFocused}" layout="row" ng-click="ctrl.openCalendarPane($event)"><input class="md-datepicker-input" style="margin-top: 10px;font-size: inherit;min-width:130px; cursor: pointer;" ng-disabled="true" aria-haspopup="true" ng-focus="ctrl.setFocused(true)" ng-blur="ctrl.setFocused(false)"></div><md-button class="md-datepicker-button md-icon-button" aria-label="date picker" type="button" tabindex="-1" aria-hidden="true" ng-click="ctrl.openCalendarPane($event)"><i class="zmdi zmdi-calendar zmdi-hc-2x" style="color: rgb(158, 158, 158);"></i></md-button><div class="md-datepicker-calendar-pane md-whiteframe-z1"><div class="md-datepicker-input-mask"><div class="md-datepicker-input-mask-opaque"></div></div><div class="md-datepicker-calendar"><md-calendar role="dialog" aria-label="{{::ctrl.dateLocale.msgCalendar}}" md-min-date="ctrl.minDate" md-max-date="ctrl.maxDate"md-date-filter="ctrl.dateFilter"ng-model="ctrl.date" ng-if="ctrl.isCalendarOpen"></md-calendar></div></div>',require:["ngModel","mdDatepickerCustom"],scope:{minDate:"=mdMinDate",maxDate:"=mdMaxDate",placeholder:"@mdPlaceholder",dateFilter:"=mdDateFilter"},controller:DatePickerCtrl,controllerAs:"ctrl",bindToController:!0,link:function(e,n,t,o){var a=o[0],i=o[1],r=o[2];if(r)throw Error("md-datepicker should not be placed inside md-input-container.");i.configureNgModel(a)}}}function DatePickerCtrl(e,n,t,o,a,i,r,l,s,c,d,u){this.$compile=o,this.$timeout=a,this.$window=i,this.dateLocale=c,this.dateUtil=d,this.$mdConstant=r,this.$mdUtil=s,this.$$rAF=u,this.documentElement=angular.element(document.documentElement),this.ngModelCtrl=null,this.inputElement=n[0].querySelector("input"),this.ngInputElement=angular.element(this.inputElement),this.inputContainer=n[0].querySelector(".md-datepicker-input-container"),this.calendarPane=n[0].querySelector(".md-datepicker-calendar-pane"),this.calendarButton=n[0].querySelector(".md-datepicker-button"),this.inputMask=n[0].querySelector(".md-datepicker-input-mask-opaque"),this.$element=n,this.$attrs=t,this.$scope=e,this.date=null,this.isFocused=!1,this.isDisabled,this.setDisabled(n[0].disabled||angular.isString(t.disabled)),this.isCalendarOpen=!1,this.calendarPaneOpenedFrom=null,this.calendarPane.id="md-date-pane"+s.nextUid(),l(n),this.bodyClickHandler=angular.bind(this,this.handleBodyClick),this.windowResizeHandler=s.debounce(angular.bind(this,this.closeCalendarPane),100),t.tabindex||n.attr("tabindex","-1"),this.installPropertyInterceptors(),this.attachChangeListeners(),this.attachInteractionListeners();var m=this;e.$on("$destroy",function(){m.detachCalendarPane()})}function JhiMetricsMonitoringController(e,n,t){function o(){i.updatingMetrics=!0,n.getMetrics().then(function(e){i.metrics=e,i.updatingMetrics=!1},function(e){i.metrics=e.data,i.updatingMetrics=!1})}function a(){n.threadDump().then(function(e){t.show({templateUrl:"js/metrics/metrics.modal.html",controller:"JhiMetricsMonitoringModalController",controllerAs:"vm",parent:angular.element(document.body),locals:{},bindToController:!0,escapeToClose:!1,fullscreen:!0}).then(function(e){},function(){})})}var i=this;i.cachesStats={},i.metrics={},i.refresh=o,i.refreshThreadDumpData=a,i.servicesStats={},i.updatingMetrics=!0,i.refresh(),e.$watch("vm.metrics",function(e){i.servicesStats={},i.cachesStats={},angular.forEach(e.timers,function(e,n){(-1!==n.indexOf("web.controller")||-1!==n.indexOf("gateway_server"))&&(i.servicesStats[n]=e)})})}function JhiMetricsMonitoringModalController(e,n){function t(e){return"RUNNABLE"===e?"label-success":"WAITING"===e?"label-info":"TIMED_WAITING"===e?"label-warning":"BLOCKED"===e?"label-danger":void 0}var o=this;o.cancel=e.cancel,o.getLabelClass=t,o.threadDump=[],o.threadDumpAll=0,o.threadDumpBlocked=0,o.threadDumpRunnable=0,o.threadDumpTimedWaiting=0,o.threadDumpWaiting=0,n.threadDump().then(function(e){o.threadDump=e.data,angular.forEach(e.data,function(e){"RUNNABLE"===e.threadState?o.threadDumpRunnable+=1:"WAITING"===e.threadState?o.threadDumpWaiting+=1:"TIMED_WAITING"===e.threadState?o.threadDumpTimedWaiting+=1:"BLOCKED"===e.threadState&&(o.threadDumpBlocked+=1)})}),o.threadDumpAll=o.threadDumpRunnable+o.threadDumpWaiting+o.threadDumpTimedWaiting+o.threadDumpBlocked}function JhiMetricsService(e,n){function t(){return e.get(n+"/metrics/").then(function(e){return e.data})}function o(){return e.get(n+"/dump")}return{getMetrics:t,threadDump:o}}angular.module("ilWebClient",["ngMaterial","material.components.expansionPanels","ui.router","md.data.table","config","messages","restangular","ngMessages","angularMoment","ngSanitize","NotificationModule","ngFileUpload","ngIdle","angular-inview","as.sortable","ngCookies","angular-date-picker-polyfill","mgo-angular-wizard","cl-paging"]),angular.module("ilWebClient").config(["$stateProvider","$urlRouterProvider","RestangularProvider","API_URL","$httpProvider","ROLES","COMPONENTS","$compileProvider",function(e,n,t,o,a,i,r,l){l.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|itms-services):/),n.otherwise("/login"),a.interceptors.push("authInterceptor"),a.defaults.withCredentials=!0,window.onkeydown=function(e){8==e.which&&-1==["text","textarea","search","email","password","url","number"].indexOf(e.target.type)&&e.preventDefault()},e.state("resetPassword",{url:"/resetPassword?token",views:{main:{templateUrl:"js/password-management/password-management.html",controller:"PasswordManagementController"}}}).state("register",{url:"/register?token",views:{main:{templateUrl:"js/password-management/password-management.html",controller:"PasswordManagementController"}}}).state("login",{url:"/login",views:{main:{templateUrl:"js/login/login.html",controller:"LoginController"}}}).state("main.user",{url:"/user",authenticate:!0,acceptedRoles:[i.SAD,i.HAD,i.HCL,i.PER],views:{"content@main":{templateUrl:"js/user/user.html",controller:"UserController"}}}).state("main.gateway",{url:"/gateway",authenticate:!0,acceptedRoles:[i.SAD],views:{"content@main":{templateUrl:"js/gateway/gateway.html",controller:"GatewayController"}}}).state("main.dictionary",{url:"/dictionary",authenticate:!0,acceptedRoles:[i.SAD,i.HAD],views:{"content@main":{templateUrl:"js/dictionary/dictionary.html",controller:"DictionaryController"}}}).state("main.flow",{url:"/flow",requiredComponents:[r.PTRAK],authenticate:!0,acceptedRoles:[i.SAD,i.HAD],views:{"content@main":{templateUrl:"js/flow/flow.html",controller:"FlowController"}}}).state("main.beacon",{url:"/beacon",authenticate:!0,acceptedRoles:[i.SAD,i.HAD],views:{"content@main":{templateUrl:"js/beacon/beacon.html",controller:"BeaconController"}}}).state("main.room",{url:"/room",authenticate:!0,acceptedRoles:[i.SAD,i.HAD],views:{"content@main":{templateUrl:"js/room/room.html",controller:"RoomController"}}}).state("main.floor",{url:"/floor",authenticate:!0,acceptedRoles:[i.SAD,i.HAD],views:{"content@main":{templateUrl:"js/floor/floor.html",controller:"FloorController"}}}).state("main.editFloor",{url:"/edit-floor?floor",authenticate:!0,acceptedRoles:[i.SAD,i.HAD],views:{"content@main":{templateUrl:"js/floor/create.html",controller:"FloorEditController"}},params:{floor:""}}).state("main.survey",{url:"/survey",authenticate:!0,requiredComponents:[r.PTRAK],acceptedRoles:[i.SAD],views:{"content@main":{templateUrl:"js/survey/survey.html",controller:"SurveyController"}}}).state("main.metrics",{url:"/metrics",authenticate:!0,acceptedRoles:[i.SAD],views:{"content@main":{templateUrl:"js/metrics/metrics.html",controller:"MetricsController",controllerAs:"vm"}}}),t.setBaseUrl(o)}]).factory("authInterceptor",["$q","$window","$injector",function(e,n,t){return{request:function(e){e.headers=e.headers||{};var t=n.localStorage.getItem("token");return t&&(e.headers["X-Auth-Token"]=t),e},responseError:function(o){return 401==o.status&&(n.localStorage.clear(),n.localStorage.setItem("notify-token-expired",!0),n.location.replace("#/login")),-1==o.status&&n.navigator.onLine&&t.get("NotificationService").show("You are experiencing network issues. Some requests may fail.","error"),n.navigator.onLine||t.get("NotificationService").show("You appear to be offline please check your internet connection","error"),e.reject(o)}}}]).config(["IdleProvider","KeepaliveProvider",function(e,n){e.idle(600),e.timeout(1200),n.interval(300),n.http("/api/heartbeat/")}]).run(["Idle",function(e){e.watch(),Array.prototype.indexOf||(Array.prototype.indexOf=function(e){var n=this.length>>>0,t=Number(arguments[1])||0;for(t=0>t?Math.ceil(t):Math.floor(t),0>t&&(t+=n);n>t;t++)if(t in this&&this[t]===e)return t;return-1})}]).config(["TitleProvider",function(e){e.enabled(!1)}]).run(["$rootScope","$state","UserService","$window","NotificationService",function(e,n,t,o,a){e.getTitle=function(){return o.localStorage.getItem("title")},e.$on("$stateChangeStart",function(e,i,r,l,s){if(i.authenticate&&!t.isAuthenticated()&&(o.localStorage.clear(),n.transitionTo("login"),e.preventDefault()),i.requiredComponents){var c=t.getHospitalPermissions(),d=i.requiredComponents.filter(function(e){return c[e]});if(0===d.length)return n.transitionTo("main"),a.show("You don't have this functionality attached to your hospital's component","error"),void e.preventDefault()}if(i.acceptedRoles){var u=t.getRolesArray(),m=i.acceptedRoles.filter(function(e){return u.indexOf(e)>-1});0===m.length&&(o.localStorage.clear(),n.transitionTo("login"),e.preventDefault())}})}]);var devOrigin="http://localhost:3000",devServer="https://hospital1-qa.intelligentlocations.io";angular.module("config",[]).constant("API_URL",devServer+"/api").constant("SOCKET_URL",devServer+"/api/websocket/connect").constant("SOCKET_TOPICS",{ALLOCATION:"/api/topic/beacon_allocation/",ALLOCATION_ASSETS:"/api/topic/beacon_allocation/ASSET/",ALLOCATION_PATIENTS:"/api/topic/beacon_allocation/PATIENT/",ALLOCATION_COUNT:"/api/topic/beacon/count/",GATEWAY:"/api/topic/gateway/"}).constant("ROLES",{SAD:"Super Admin",HAD:"Hospital Admin",HCL:"Hospital Clerk",PER:"Personnel",GPER:"Generic Personnel"}).constant("GATEWAY_STATUSES",{CHANGING_TENANT:"CHANGING TENANT",PENDING:"PENDING",RESTARTING:"RESTARTING",UNAVAILABLE:"UNAVAILABLE",NO_SIGNAL:"NO SIGNAL",DISABLED:"DISABLED",RUNNING:"RUNNING",UNFLASHED:"UNFLASHED"}).constant("GATEWAY_BT_STATUSES",{PENDING:"PENDING",UP:"UP",DOWN:"DOWN",HW_FAIL:"HW FAIL",UNKNOWN:"UNKNOWN"}).constant("COMPONENTS",{ATRAK:"atrak",PTRAK:"ptrak"}).constant("FEATURE_TYPES",{ROOM:"ROOM"}),angular.module("messages",[]).constant("MSG",{FORM_UPDATE_DISCLAIMER:"* All references will be updated",DEFAULT_FILE_UPLOAD_ERR:"File upload failed",USER_ACC_LOCKED:"Your account has been locked after several failed login attempts. Try again later or reset your password.",REQUEST_TIMEOUT:"The server is unreachable right now. Please make sure you have an active internet connection",URL_CHECK_FAILED:"There seems to be an issue with your URL",EMAIL_SENT_CONFIRMATION:"We have sent you an email with instructions to reset your password",PWD_SET_CONFIRMATION:"Password set successfully",PWD_SET_ERR:"We will send you an email with instructions to reset your password if the provided email address is registered into our system"}),angular.module("templates",[]).run(["$templateCache",function(e){e.put("js/beacon/beacon-selection.html",'<md-dialog flex="30" flex-md="40">\n    <ng-form name="form">\n        <div layout="column" layout-padding layout-margin>\n            <md-dialog-content layout-padding>\n                <div layout="row" layout-wrap ng-if="ROLES.SAD">\n                    <md-autocomplete\n                            flex="100"\n                            layout-align="center none"\n                            md-no-cache="true"\n                            md-selected-item="model.hospital"\n                            md-search-text="searchTextHospitals"\n                            md-items="option in querySearch(searchTextHospitals, hospitals, \'name\')"\n                            md-item-text="option.name"\n                            md-min-length="0"\n                            required="true"\n                            md-floating-label="Hospital">\n                        <md-item-template>\n                            <span md-highlight-flags="^i">{{option.name}}</span>\n                        </md-item-template>\n                        <md-not-found>\n                            No hospitals found\n                        </md-not-found>\n                    </md-autocomplete>\n                </div>\n            </md-dialog-content>\n        </div>\n\n        <md-dialog-actions>\n            <md-button class="md-warn" ng-click="close()">Cancel</md-button>\n            <md-button class="md-primary" ng-disabled="form.$invalid" ng-click="proceed()">Next</md-button>\n        </md-dialog-actions>\n    </ng-form>\n</md-dialog>'),e.put("js/beacon/beacon.html",'<crud-list\n        resource="beacon"\n        columns="columns"\n        filter-config="filterConfig"\n        create-form-url="js/beacon/create.html"\n        form-options="formOptions"\n        intermediate-template="js/beacon/beacon-selection.html"\n        intermediate-controller="BeaconIntermediaryController"\n        actions="actions"></crud-list>'),e.put("js/beacon/create.html",'<md-dialog flex="40" flex-md="55" flex-sm="100" flex-xs="100" layout-padding>\n    <form name="form">\n        <md-dialog-content>\n            <div layout="column" layout-padding layout-margin>\n                <div layout="row" layout-wrap>\n                    <md-input-container flex="auto">\n                        <label>Select protocol</label>\n                        <md-select ng-model="model.beaconType">\n                            <md-option disabled ng-if="beaconTypes.length == 0">No items available</md-option>\n                            <md-option ng-repeat="beaconType in beaconTypes" ng-value="beaconType">\n                                {{beaconType}}\n                            </md-option>\n                        </md-select>\n                    </md-input-container>\n                </div>\n\n                <div ng-if="beaconTypes.length != 0">\n                    <div class="ng-cloak" ng-if="model.beaconType.toLowerCase() == \'ibeacon\'" ng-include="\'js/beacon/ibeacon.html\'"></div>\n                    <div class="ng-cloak" ng-if="model.beaconType.toLowerCase() == \'nearable\'" ng-include="\'js/beacon/nearable.html\'"></div>\n                </div>\n\n            </div>\n        </md-dialog-content>\n        <md-dialog-actions>\n            <md-button class="md-warn" ng-click="close()">Cancel</md-button>\n            <md-button class="md-primary" ng-disabled="form.$invalid || beaconTypes.indexOf(model.beaconType) == -1" ng-click="save()"> Save</md-button>\n        </md-dialog-actions>\n    </form>\n</md-dialog>'),e.put("js/beacon/ibeacon.html",'<div layout="column" layout-padding layout-margin>\n\n    <md-input-container>\n        <label>Name</label>\n        <input name="name" ng-model="model.name" required md-maxlength="60" minlength="4">\n        <div ng-messages="form.name.$error" ng-show="form.name.$dirty && form.name.$invalid">\n            <div ng-message="required">This is required!</div>\n            <div ng-message="md-maxlength">That\'s too long!</div>\n            <div ng-message="minlength">That\'s too short!</div>\n        </div>\n    </md-input-container>\n\n    <md-input-container class="styled-placeholder">\n        <label>UUID</label>\n        <input name="uuid" ng-model="model.uuid" md-maxlength="45" minlength="10" placeholder="This value is used for proximity tracking on mobile app">\n        <div ng-messages="form.uuid.$error" ng-if="form.uuid.$dirty && form.uuid.$invalid" role="alert">\n            <div ng-message=\'required\'>This is required!</div>\n            <div ng-message=\'md-maxlength\'>That\'s too long!</div>\n            <div ng-message="minlength">That\'s too short!</div>\n        </div>\n        <div ng-messages="validationErrors" ng-if="validationErrors" role="alert">\n            <div ng-repeat="errorText in validationErrors[\'Beacon.uuid\']">\n                {{ errorText }}\n            </div>\n        </div>\n    </md-input-container>\n\n    <md-input-container>\n        <label>MAC Address</label>\n        <input name="macAddress" ng-model="model.macAddr" required md-maxlength="45" minlength="10">\n        <div ng-messages="form.macAddress.$error" ng-if="form.macAddress.$dirty && form.macAddress.$invalid" role="alert">\n            <div ng-message=\'required\'>This is required!</div>\n            <div ng-message=\'md-maxlength\'>That\'s too long!</div>\n            <div ng-message="minlength">That\'s too short!</div>\n        </div>\n        <div ng-messages="validationErrors" ng-if="validationErrors" role="alert">\n            <div ng-repeat="errorText in validationErrors[\'Beacon.macAddr\']">\n                {{ errorText }}\n            </div>\n        </div>\n    </md-input-container>\n\n    <md-autocomplete\n            ng-if="ROLES.SAD && !model.overrideTemplate && isEditMode"\n            ng-disabled="true"\n            md-no-cache="true"\n            md-selected-item="model.hospital"\n            md-search-text="searchTextHospital"\n            md-items="option in querySearch(searchTextHospital, formOptions.hospitals, \'name\')"\n            md-item-text="option.name"\n            md-min-length="0"\n            required="true"\n            md-floating-label="Hospital">\n        <md-item-template>\n            <span md-highlight-flags="^i">{{option.name}}</span>\n        </md-item-template>\n        <md-not-found>\n            No hospitals found\n        </md-not-found>\n    </md-autocomplete>\n\n</div>'),e.put("js/beacon/nearable.html",'<div layout="column" layout-padding layout-margin>\n\n    <md-input-container>\n        <label>Name</label>\n        <input name="name" ng-model="model.name" required md-maxlength="60" minlength="4">\n        <div ng-messages="form.name.$error" ng-show="form.name.$dirty && form.name.$invalid">\n            <div ng-message="required">This is required!</div>\n            <div ng-message="md-maxlength">That\'s too long!</div>\n            <div ng-message="minlength">That\'s too short!</div>\n        </div>\n    </md-input-container>\n\n    <md-input-container class="styled-placeholder">\n        <label>UUID</label>\n        <input name="uuid" ng-model="model.uuid" md-maxlength="45" minlength="10" placeholder="This value is used for proximity tracking on mobile app">\n        <div ng-messages="form.uuid.$error" ng-if="form.uuid.$dirty && form.uuid.$invalid" role="alert">\n            <div ng-message=\'required\'>This is required!</div>\n            <div ng-message=\'md-maxlength\'>That\'s too long!</div>\n            <div ng-message="minlength">That\'s too short!</div>\n        </div>\n        <div ng-messages="validationErrors" ng-if="validationErrors" role="alert">\n            <div ng-repeat="errorText in validationErrors[\'Beacon.uuid\']">\n                {{ errorText }}\n            </div>\n        </div>\n    </md-input-container>\n\n    <md-input-container>\n        <label>Identifier</label>\n        <input name="nearableUUID" ng-model="model.nearableUUID" required md-maxlength="45" minlength="10">\n        <div ng-messages="form.nearableUUID.$error" ng-if="form.nearableUUID.$dirty && form.identifier.$invalid" role="alert">\n            <div ng-message=\'required\'>This is required!</div>\n            <div ng-message=\'md-maxlength\'>That\'s too long!</div>\n            <div ng-message="minlength">That\'s too short!</div>\n        </div>\n        <div ng-messages="validationErrors" ng-if="validationErrors" role="alert">\n            <div ng-repeat="errorText in validationErrors[\'Beacon.nearableUUID\']">\n                {{ errorText }}\n            </div>\n        </div>\n    </md-input-container>\n\n    <md-autocomplete\n            ng-if="ROLES.SAD && !model.overrideTemplate && isEditMode"\n            ng-disabled="true"\n            md-no-cache="true"\n            md-selected-item="model.hospital"\n            md-search-text="searchTextHospital"\n            md-items="option in querySearch(searchTextHospital, formOptions.hospitals, \'name\')"\n            md-item-text="option.name"\n            md-min-length="0"\n            md-floating-label="Hospital"\n            required="true">\n        <md-item-template>\n            <span md-highlight-flags="^i">{{option.name}}</span>\n        </md-item-template>\n        <md-not-found>\n            No hospitals found\n        </md-not-found>\n    </md-autocomplete>\n\n</div>'),e.put("js/crud/list.html",'<div layout="row">\n    <div ng-if="filterConfig != undefined" flex="30" flex-md="40" layout-padding class="md-whiteframe-6dp free-text-search-form filter-area spacing-right search-form">\n        <div layout="row" flex-xs-auto="">\n            <span class="searchLabelColor" layout-margin>SEARCH</span>\n            <span flex></span>\n            <md-button class="filter-button reset" ng-click="resetSearch()">\n                Reset\n            </md-button>\n            <md-button class="filter-button" ng-click="search(search.text)">\n                Apply\n            </md-button>\n        </div>\n\n        <div class="input" layout-margin>\n            <md-input-container md-no-float layout="row" class="searchBarWidth">\n                <i class="zmdi zmdi-search zmdi-hc-2x"></i>\n                <input name="text" ng-model="search.text" placeholder="Search..."/>\n            </md-input-container>\n        </div>\n    </div>\n\n    <div ng-if="filterConfig != undefined" flex="70" flex-md="60" layout-padding class="md-whiteframe-6dp filter-area spacing-left">\n        <div layout="row">\n            <span class="filterPadding">FILTER</span>\n            <span flex></span>\n            <md-button class="filter-button reset" ng-click="resetFilters()">\n                Reset\n            </md-button>\n            <md-button class="filter-button" ng-click="applyFilters()">\n                Apply\n            </md-button>\n        </div>\n        <div layout="row">\n        <span ng-repeat="filter in filterConfig" flex>\n            <span ng-switch="filter.type" layout="row">\n                <md-input-container ng-switch-when="select" layout-fill>\n                    <span ng-switch="filter.allowMultipleSelection">\n                        <label>{{filter.placeholder}}</label>\n                        <md-select ng-switch-when="true" ng-model="activeSelectionFilters[filter.column]" multiple>\n                            <md-option disabled ng-if="filter.values.length == 0">No items available</md-option>\n                            <md-option ng-repeat="option in filter.values" value="{{option.value}}">\n                                {{option.name}}\n                            </md-option>\n                        </md-select>\n                        <md-select ng-switch-default ng-model="activeSelectionFilters[filter.column]">\n                            <md-option disabled ng-if="filter.values.length == 0">No items available</md-option>\n                            <md-option ng-repeat="option in filter.values" value="{{option.value}}">\n                                {{option.name}}\n                            </md-option>\n                        </md-select>\n                    </span>\n                </md-input-container>\n                <md-input-container ng-switch-default layout-fill>\n                    <label>{{filter.placeholder}}</label>\n                    <input ng-model="activeSelectionFilters[filter.column]" minlength="3"/>\n                </md-input-container>\n                <md-input-container ng-switch-when="checkbox" >\n                    <md-checkbox class="checkbox-filter" ng-model="activeSelectionFilters[filter.column]">\n                        <span ng-if="filter.icon">\n                            <i class="zmdi zmdi-hc-2x" ng-style="{color: filter.iconColor}" ng-class="filter.icon"></i>\n                        </span>\n                        <span ng-if="filter.placeholder">{{filter.placeholder}}</span>\n                    </md-checkbox>\n                </md-input-container>\n            </span>\n        </span>\n        </div>\n    </div>\n</div>\n\n\n\n<div layout-margin layout-gt-sm="row" layout="column" style="margin-right: -15px;">\n    <md-button class="md-fab fab-pull-left" aria-label="Upload file" ng-if="canUploadFile" ng-click="uploadFileDialog()">\n        <i class="zmdi zmdi-upload zmdi-hc-2x fab-plus"></i>\n    </md-button>\n    <md-button class="md-fab fab-pull-left" aria-label="Add record" ng-click="openEntityDialog({})">\n        <i class="zmdi zmdi-plus zmdi-hc-2x fab-plus"></i>\n    </md-button>\n\n    <span flex=""></span>\n    <div layout-gt-sm="row" layout="column">\n        <div ng-repeat="button in buttons">\n            <md-button class="md-raised" ng-style="{color: button.bgColor}" ng-disabled="!button.isEnabled()" ng-click="button.confirmation(button.options, button.callback)">\n                <span ng-style="{color: button.textColor}">{{button.name}}</span>\n            </md-button>\n        </div>\n    </div>\n</div>\n<div layout="row" class="is-active-container">\n    <md-progress-linear ng-show="isServerRequestActive" md-mode="indeterminate"></md-progress-linear>\n</div>\n<div ng-if="!noResults" class="md-whiteframe-12dp table-area table-margin-bottom">\n    <md-table-container>\n        <table md-table>\n            <thead md-head md-order="query.order" md-on-reorder="onReorder">\n\n            <tr md-row>\n                <th md-column ng-if="multiselect">\n                    <md-checkbox ng-if="showCheckbox" ng-model="allEntitiesSelected" ng-change="toggleSelectAll(allEntitiesSelected)" aria-label="Select all"></md-checkbox>\n                </th>\n                <th ng-repeat="(column, config) in columns  track by column" md-column\n                    ng-attr-md-order-by="{{ config.orderBy ? config.orderBy : null }}">\n                    {{ config.name.toUpperCase()}}\n                </th>\n                <th md-column style="text-align: right;">\n                    <span style="padding-right: 10%">ACTIONS</span>\n                </th>\n            </tr>\n            </thead>\n            <tbody md-body>\n            <tr md-row md-select="item" md-select-id="{{item.id}}" md-auto-select\n                ng-repeat="item in itemCollection">\n                <td md-cell style="text-align: center" ng-if="multiselect">\n                    <md-checkbox ng-model="item.isChecked" ng-change="multiselect.onChange(item)" aria-label="Select"></md-checkbox>\n                </td>\n                <td ng-repeat="(column, config) in columns" ng-style="customItemStyle(item, column, config)" md-cell>\n                    {{config.displayProperty ? item[column][config.displayProperty] : item[column].toString() }}\n                </td>\n                <td md-cell layout="row" layout-align="end center">\n                    <md-button ng-if="!action.shouldBeHidden(item)" ng-disabled="action.shouldBeDisabled(item)" class="md-icon-button table-action-button"\n                               ng-click="action.callback(item)" ng-repeat="action in actions">\n                        <md-tooltip>{{action.title}}</md-tooltip>\n                        <i class="zmdi zmdi-hc-2x gray" ng-style="{ color: action.shouldBeDisabled(item) ? \'gray\':action.color }" ng-class="action.icon"></i>\n                    </md-button>\n                    <md-button class="md-icon-button table-action-button" title="Edit">\n                        <md-tooltip>Edit</md-tooltip>\n                        <i class="zmdi zmdi-edit zmdi-hc-2x special-blue" ng-click="openEntityDialog(item)" ng-style="{ color: action.color }"></i>\n                    </md-button>\n                    <md-button class="md-icon-button table-action-button" ng-click="onDelete(item)" title="Delete">\n                        <md-tooltip>Delete</md-tooltip>\n                        <i class="zmdi zmdi-delete zmdi-hc-2x" ng-style="{ color: \'red\' }"></i>\n                    </md-button>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </md-table-container>\n    <md-table-pagination md-limit="query.limit" md-page="query.page" md-total="{{totalCount}}" md-on-paginate="onPaginate" md-page-select></md-table-pagination>\n</div>\n\n<div ng-if="noResults" class="noResultsText">There are no items available</div>\n<div ng-if="noFilterResults" class="noResultsText">Your search returned no results</div>'),e.put("js/dashboard/dashboard.html",'<md-content layout="row" class="dashboard" layout-wrap flex="100">\n    <div flex="100" layout="row">\n        <free-text-search-form layout="row"\n                                flex="50"\n                                flex-md="50"\n                                flex-sm="100"\n                                flex-xs="100">\n        </free-text-search-form>\n        <div layout="row" class="search-section-btn" ng-click="toggleSearchSection()">\n            <div class="icon">\n                <i class="zmdi zmdi-filter-list zmdi-hc-2x"></i>\n            </div>\n            <div class="info" style="max-width:125px" ng-class="{closed: isSearchSectionOpen}">\n                <img class="available-beacons-icon-sm" src="img/beacons-01.png" alt="Beacons">\n                <div class="available-beacons-count-sm">{{availableCount}}</div>\n            </div>\n            <div class="add">\n                <i class="zmdi zmdi-chevron-down arrowPositioning" ng-show="!isSearchSectionOpen"></i>\n                <i class="zmdi zmdi-chevron-up arrowPositioning" ng-show="isSearchSectionOpen"></i>\n            </div>\n        </div>\n    </div>\n\n\n    <div flex="100" class="filter-action-area" ng-class="{open: isSearchSectionOpen}" layout="row" layout-lt-md="column" layout-wrap="">\n        <filter-area type="type"\n                     flex="75"\n                     flex-md="65"\n                     flex-sm="100"\n                     flex-xs="100"></filter-area>\n        <associate-action add-callback="addAllocation"\n                          free-beacon-count="{{availableCount}}"\n                          flex="25"\n                          flex-md="35"\n                          flex-sm="100"\n                          flex-xs="100"\n                          ng-if="ROLES.SAD || ROLES.HAD || ROLES.HCL">\n        </associate-action>\n    </div>\n    <div layout="row" flex="100" layout-wrap>\n        <div layout="row" flex="100" layout-wrap>\n            <div ng-repeat="allocation in allocations | orderBy: \'-entryDate\'" class="beacon-wrapper">\n                <beacon-card allocation="allocation" discard-callback="discard" view-callback="viewAllocation" edit-callback="addAllocation"></beacon-card>\n            </div>\n        </div>\n    </div>\n    <div ng-if="noAssets && !filterIsApplied" class="noAssetsRegisteredText">No assets registered</div>\n    <div ng-if="noAssets && filterIsApplied" class="noAssetsRegisteredText">Your search returned no results</div>\n</md-content>'),e.put("js/dictionary/asset.html",'<md-dialog flex="40" layout-padding>\n    <form name="form">\n        <md-dialog-content>\n            <div layout="column" layout-padding layout-margin>\n                <md-input-container>\n                    <label>Asset type</label>\n                    <input name="name" ng-model="model.name" required md-maxlength="60" minlength="4">\n                    <div ng-messages="form.name.$error" ng-show="form.name.$dirty && form.name.$invalid">\n                        <div ng-message="required">This is required!</div>\n                        <div ng-message="md-maxlength">That\'s too long!</div>\n                        <div ng-message="minlength">That\'s too short!</div>\n                    </div>\n                </md-input-container>\n\n                <md-chips ng-model="status"\n                          placeholder="Type and enter to add Asset Status"\n                          md-on-remove="checkDefaultStatusStillPresent($chip)"\n                          delete-button-label="Remove status"\n                          delete-hint="Press delete to remove status"\n                          secondary-placeholder="+New Status">\n                    <md-chip-template>\n                            {{$chip.status || $chip}}\n                    </md-chip-template>\n                </md-chips>\n\n                <md-autocomplete\n                        ng-if="status.length != 0 && !isEditMode && showDefaultStatus"\n                        md-no-cache="true"\n                        md-selected-item="model.defaultStatus"\n                        md-search-text="searchTextStatus"\n                        md-items="option in querySearch(searchTextStatus, status)"\n                        md-item-text="option"\n                        md-min-length="0"\n                        md-floating-label="Default status"\n                        required="true">\n                    <md-item-template>\n                        <span md-highlight-flags="^i">{{option}}</span>\n                    </md-item-template>\n                    <md-not-found>\n                        No status found\n                    </md-not-found>\n                </md-autocomplete>\n\n                <md-autocomplete\n                        ng-if="status.length != 0 && isEditMode && showDefaultStatus"\n                        md-no-cache="true"\n                        md-selected-item="model.defaultStatus"\n                        md-search-text="searchTextStatus"\n                        md-items="option in statusSearch(searchTextStatus, status)"\n                        md-item-text="option"\n                        md-min-length="0"\n                        md-floating-label="Default status"\n                        required="true">\n                    <md-item-template>\n                        <span md-highlight-flags="^i">{{option}}</span>\n                    </md-item-template>\n                    <md-not-found>\n                        No status found\n                    </md-not-found>\n                </md-autocomplete>\n\n                <md-autocomplete\n                        ng-if="ROLES.SAD && isEditMode"\n                        ng-disabled="isEditMode || model.suppressIntermediary"\n                        md-no-cache="true"\n                        md-selected-item="model.hospital"\n                        md-search-text="searchTextHospital"\n                        md-items="option in querySearch(searchTextHospital, formOptions.hospitals, \'name\')"\n                        md-item-text="option.name"\n                        md-min-length="0"\n                        md-floating-label="Hospital"\n                        required="true">\n                    <md-item-template>\n                        <span md-highlight-flags="^i">{{option.name}}</span>\n                    </md-item-template>\n                    <md-not-found>\n                        No hospitals found\n                    </md-not-found>\n                </md-autocomplete>\n\n                <md-input-container>\n                    <div ng-messages="validationErrors" ng-if="validationErrors" role="alert">\n                        <div ng-message=\'gateway\'>\n                            <div ng-repeat="errorText in validationErrors.gateway">\n                                {{ errorText }}\n                            </div>\n                        </div>\n                    </div>\n                </md-input-container>\n            </div>\n            <div class="dictionaries-disclaimer" ng-show="isEditMode">{{::disclaimer}}</div>\n        </md-dialog-content>\n        <md-dialog-actions>\n            <md-button class="md-warn" ng-click="close()">Cancel</md-button>\n            <md-button class="md-primary" ng-disabled="form.$invalid" ng-click="save()"> Save</md-button>\n        </md-dialog-actions>\n    </form>\n</md-dialog>'),
e.put("js/dictionary/dictionary.html",'<md-content layout="row" class="dashboard" layout-wrap ng-if="ROLES.SAD">\n    <md-toolbar layout="row" class="">\n        <div class="dictionaryToolbar md-toolbar-tools">\n            <span class="dictionaryToolbarText">Hospital Management</span>\n        </div>\n    </md-toolbar>\n    <div flex="100" class="filter-action-area dictionary-area open" layout="row" layout-lt-lg="column" >\n        <dictionary-search-form flex="30"\n                               flex-md="50"\n                               flex-xs="100">\n        </dictionary-search-form>\n        <dictionary-filter-area class="dictionaryFilter" flex="70" flex-md-initial="45"\n                     flex-md="50"\n                     flex-xs="100">\n        </dictionary-filter-area>\n    </div>\n</md-content>\n\n<crud-list\n        style="margin: auto;"\n        resource="hospital"\n        columns="hospitalColumns"\n        create-form-url="js/dictionary/hospital.html"\n        form-options="hospitalFormOptions"\n        actions="actions"\n        ng-if="ROLES.SAD">\n</crud-list>\n\n\n<md-divider class="dividerMargin" ng-if="ROLES.SAD"></md-divider>\n\n<md-content layout="row" class="dashboard" layout-wrap>\n    <md-toolbar>\n        <div class="dictionaryToolbar md-toolbar-tools">\n            <span class="dictionaryToolbarText">Asset Type Management</span>\n        </div>\n    </md-toolbar>\n    <div flex="100" class="filter-action-area dictionary-area open" layout="row" layout-lt-lg="column" >\n        <assets-search-form flex="30"\n                            flex-md="50"\n                            flex-xs="100">\n        </assets-search-form>\n        <asset-filter-area class="dictionaryFilter" flex="70" flex-md-initial="45"\n                                flex-md="50"\n                                flex-xs="100">\n        </asset-filter-area>\n    </div>\n</md-content>\n\n<crud-list\n        style="margin: auto;"\n        resource="dictionary/asset/type"\n        columns="assetColumns"\n        create-form-url="js/dictionary/asset.html"\n        form-options="assetFormOptions"\n        actions="actions"\n        intermediate-template="js/dictionary/hospital-asset-selection.html"\n        intermediate-controller="HospitalAssetIntermediaryController">\n</crud-list>'),e.put("js/dictionary/hospital-asset-selection.html",'<md-dialog flex="30" flex-md="40">\n    <ng-form name="form">\n        <div layout="column" layout-padding layout-margin>\n            <md-dialog-content layout-padding>\n                <div layout="row" layout-wrap>\n                    <md-autocomplete\n                            flex="100"\n                            layout-align="center none"\n                            md-no-cache="true"\n                            md-selected-item="model.hospital"\n                            md-search-text="searchText"\n                            md-items="option in querySearch(searchText)"\n                            md-item-text="option.name"\n                            md-min-length="0"\n                            md-floating-label="Hospital"\n                            required="true">\n                        <md-item-template>\n                            <span md-highlight-flags="^i">{{option.name}}</span>\n                        </md-item-template>\n                        <md-not-found>\n                            No hospitals found\n                        </md-not-found>\n                    </md-autocomplete>\n                </div>\n            </md-dialog-content>\n        </div>\n        <md-dialog-actions>\n            <md-button class="md-warn" ng-click="close()">Cancel</md-button>\n            <md-button class="md-primary" ng-disabled="form.$invalid" ng-click="proceed()">Next</md-button>\n        </md-dialog-actions>\n    </ng-form>\n</md-dialog>'),e.put("js/dictionary/hospital.html",'<md-dialog flex="40" layout-padding>\n    <form name="form">\n        <md-dialog-content>\n            <div layout="column" layout-padding layout-margin>\n                <md-input-container>\n                    <label>Name</label>\n                    <input name="name" ng-model="model.name" required md-maxlength="60" minlength="4">\n                    <div ng-messages="form.name.$error" ng-show="form.name.$dirty && form.name.$invalid">\n                        <div ng-message="required">This is required!</div>\n                        <div ng-message="md-maxlength">That\'s too long!</div>\n                        <div ng-message="minlength">That\'s too short!</div>\n                    </div>\n                </md-input-container>\n                <md-input-container>\n                    <md-checkbox ng-model="model.components.atrak" aria-label="aTrak">\n                        aTrak\n                    </md-checkbox><br>\n                    <md-checkbox ng-disabled="true" ng-model="model.components.ptrak" aria-label="pTrak">\n                        pTrak\n                    </md-checkbox><br>\n                    <md-checkbox ng-model="model.components.mobile_atrak" aria-label="mobile aTrak">\n                        mobile aTrak\n                    </md-checkbox><br>\n                    <md-checkbox ng-disabled="true" ng-model="model.components.mobile_ptrak" aria-label="mobile pTrak">\n                        mobile pTrak\n                    </md-checkbox><br>\n                </md-input-container>\n            </div>\n            <div class="dictionaries-disclaimer" ng-show="isEditMode">{{::disclaimer}}</div>\n        </md-dialog-content>\n        <md-dialog-actions>\n            <md-button class="md-warn" ng-click="close()">Cancel</md-button>\n            <md-button class="md-primary" ng-disabled="form.$invalid || !isCheckboxAreaValid(model.components)" ng-click="save()"> Save</md-button>\n        </md-dialog-actions>\n    </form>\n</md-dialog>'),e.put("js/file-upload/upload-modal.html",'<md-dialog flex="40" flex-md="60" flex-sm="100" class="upload-modal" layout-padding>\n    <md-progress-linear ng-show="uploadInProgress" md-mode="determinate" value="{{progressPercentage}}"></md-progress-linear>\n\n    <form ng-show="!uploadInProgress && !finishedUpload" name="form">\n        <md-dialog-content>\n            <div layout="column" layout-padding layout-margin>\n                <md-button class="md-raised md-primary" ngf-select ng-model="file" name="file" ngf-max-size="20MB">Select file</md-button>\n            </div>\n            <div ng-show="file" style="text-align: center;">\n                {{file.name}}\n            </div>\n        </md-dialog-content>\n    </form>\n\n    <div ng-show="finishedUpload && stats.errors.length !== 0">\n        <md-dialog-content>\n            <div layout="column" layout-padding layout-margin>\n                <div class="errors-title">\n                    Please correct these errors and retry the upload\n                </div>\n                <div class="stats">\n                    Valid entries: {{stats.correctEntries}}\n                    <br>\n                    Invalid entries: {{stats.incorrectEntries}}\n                </div>\n                <div class="errors-content">\n                    <div class="error-msg" ng-repeat="error in stats.errors">\n                        <span class="custom-font">{{$index + 1}} - {{error}}</span>\n                    </div>\n                </div>\n            </div>\n        </md-dialog-content>\n    </div>\n\n    <div ng-show="finishedUpload && stats.errors.length === 0">\n        <md-dialog-content>\n            <div layout="column custom-font" layout-padding layout-margin>\n                Upload complete: {{stats.correctEntries}} items were added to the system.\n            </div>\n        </md-dialog-content>\n    </div>\n\n    <md-dialog-actions>\n        <md-button class="md-warn" ng-hide="uploadInProgress || (finishedUpload && stats.errors.length === 0)" ng-click="close(false)">\n            Cancel\n        </md-button>\n        <md-button class="md-primary" ng-click="backToFileSelection()" ng-show="finishedUpload && stats.errors.length !== 0">\n            Back To File Selection\n        </md-button>\n        <md-button class="md-primary" ng-disabled="!form.file.$valid || !file" ng-click="submit()" ng-show="!uploadInProgress && !finishedUpload">\n            Upload\n        </md-button>\n        <md-button class="md-primary" ng-click="close(true)" ng-show="finishedUpload && stats.errors.length === 0">\n            Finish\n        </md-button>\n    </md-dialog-actions>\n</md-dialog>'),e.put("js/gateway/create.html",'<md-dialog flex="40" layout-padding>\n    <form name="form">\n        <md-dialog-content>\n            <div layout="column" layout-padding layout-margin>\n                <md-input-container>\n                    <label>Name</label>\n                    <input name="name" ng-model="model.name" required md-maxlength="60" minlength="4">\n                    <div ng-messages="form.name.$error" ng-show="form.name.$dirty && form.name.$invalid">\n                        <div ng-message="required">This is required!</div>\n                        <div ng-message="md-maxlength">That\'s too long!</div>\n                        <div ng-message="minlength">That\'s too short!</div>\n                    </div>\n                </md-input-container>\n\n                <md-input-container>\n                    <label>MAC Address</label>\n                    <input name="uuid" ng-model="model.uuid" required md-maxlength="45" minlength="10">\n                    <div ng-messages="form.uuid.$error" ng-if="form.uuid.$dirty && form.uuid.$invalid" role="alert">\n                        <div ng-message=\'required\'>This is required!</div>\n                        <div ng-message=\'maxlength\'>That\'s too long!</div>\n                        <div ng-message="minlength">That\'s too short!</div>\n                    </div>\n                    <div ng-messages="validationErrors" ng-if="validationErrors" role="alert">\n                        <div ng-repeat="errorText in validationErrors[\'Gateway.uuid\']">\n                            {{ errorText }}\n                        </div>\n                    </div>\n                    <div ng-messages="validationErrors" ng-if="validationErrors" role="alert">\n                        <div ng-repeat="errorText in validationErrors[\'Gateway.macAddr\']">\n                            {{ errorText }}\n                        </div>\n                    </div>\n                </md-input-container>\n\n                <md-input-container ng-if="isEditMode">\n                    <label>IP</label>\n                    <input name="ip" ng-model="model.ip" md-maxlength="45" minlength="9" disabled>\n                    <div ng-messages="form.ip.$error" ng-if="form.ip.$dirty && form.ip.$invalid" role="alert">\n                        <div ng-message=\'required\'>This is required!</div>\n                        <div ng-message=\'maxlength\'>That\'s too long!</div>\n                        <div ng-message="minlength">That\'s too short!</div>\n                    </div>\n                    <div ng-messages="validationErrors" ng-if="validationErrors" role="alert">\n                        <div ng-repeat="errorText in validationErrors[\'Gateway.ip\']">\n                            {{ errorText }}\n                        </div>\n                    </div>\n                </md-input-container>\n\n                <md-autocomplete\n                        md-no-cache="true"\n                        md-selected-item="model.room"\n                        md-search-text="searchTextRoom"\n                        md-items="option in querySearch(searchTextRoom, formOptions.rooms, \'name\')"\n                        md-item-text="getFormattedArea(option)"\n                        md-min-length="0"\n                        md-floating-label="Area">\n                    <md-item-template>\n                            <span md-highlight-flags="^i">\n                                {{option.name}}\n                                <span ng-if="option.parent.name">{{option.parent.name == null ? \'\':\' - \' + option.parent.name}}</span>\n                            </span>\n                    </md-item-template>\n                    <md-not-found>\n                        No rooms found\n                    </md-not-found>\n                </md-autocomplete>\n\n                <md-autocomplete\n                        md-no-cache="true"\n                        md-selected-item="model.controlBeacon"\n                        md-search-text="searchTextBeacons"\n                        md-items="option in querySearch(searchTextBeacons, formOptions.beacons, \'name\')"\n                        md-item-text="option.name"\n                        md-min-length="0"\n                        md-floating-label="Beacon">\n                    <md-item-template>\n                            <span md-highlight-flags="^i">\n                                <span ng-if="option.parent.name">{{option.parent.name + \', \'}}</span>\n                                {{option.name}}\n                            </span>\n                    </md-item-template>\n                    <md-not-found>\n                        No beacons found\n                    </md-not-found>\n                </md-autocomplete>\n\n                <md-autocomplete\n                        ng-hide="model.suppressIntermediary"\n                        ng-disabled="isEditMode"\n                        md-no-cache="true"\n                        md-selected-item="model.hospital"\n                        md-search-text="searchTextHospitals"\n                        md-items="option in querySearch(searchTextHospitals, formOptions.hospitals, \'name\')"\n                        md-item-text="option.name"\n                        md-min-length="0"\n                        md-floating-label="Hospital"\n                        required="true">\n                    <md-item-template>\n                        <span md-highlight-flags="^i">{{option.name}}</span>\n                    </md-item-template>\n                    <md-not-found>\n                        No hospitals found\n                    </md-not-found>\n                </md-autocomplete>\n            </div>\n        </md-dialog-content>\n        <md-dialog-actions>\n            <md-button class="md-warn" ng-click="close()">Cancel</md-button>\n            <md-button class="md-primary" ng-disabled="form.$invalid" ng-click="save()"> Save</md-button>\n        </md-dialog-actions>\n    </form>\n</md-dialog>'),e.put("js/gateway/gateway.html",'<crud-list\n        resource="gateway"\n        columns="columns"\n        filter-config="filterConfig"\n        create-form-url="js/gateway/create.html"\n        form-options="formOptions"\n        actions="actions"\n        intermediate-template="js/gateway/hospital-gateway-selection.html"\n        intermediate-controller="HospitalGatewayIntermediaryController">\n</crud-list>'),e.put("js/gateway/hospital-gateway-selection.html",'<md-dialog flex="30" flex-md="40">\n    <ng-form name="form">\n        <div layout="column" layout-padding layout-margin>\n            <md-dialog-content layout-padding>\n                <div layout="row" layout-wrap>\n                    <md-autocomplete\n                            flex="100"\n                            layout-align="center none"\n                            md-no-cache="true"\n                            md-selected-item="model.hospital"\n                            md-search-text="searchText"\n                            md-items="option in querySearch(searchText)"\n                            md-item-text="option.name"\n                            md-min-length="0"\n                            md-floating-label="Hospital"\n                            required="true">\n                        <md-item-template>\n                            <span md-highlight-flags="^i">{{option.name}}</span>\n                        </md-item-template>\n                        <md-not-found>\n                            No hospitals found\n                        </md-not-found>\n                    </md-autocomplete>\n                </div>\n            </md-dialog-content>\n        </div>\n        <md-dialog-actions>\n            <md-button class="md-warn" ng-click="close()">Cancel</md-button>\n            <md-button class="md-primary" ng-disabled="form.$invalid" ng-click="proceed()">Next</md-button>\n        </md-dialog-actions>\n    </ng-form>\n</md-dialog>'),e.put("js/liveFeed/liveFeed.html",'<md-table-container>\n    <table md-table style="margin-top: 40px">\n        <thead md-head md-order="query.order" md-on-reorder="onReorder">\n        <tr md-row>\n            <th style="background-color: #3ab8c3;color: white;font-size: 14px;" md-column md-order-by="timestamp"><span>Timestamp</span></th>\n            <th style="background-color: #3ab8c3;color: white;font-size: 14px;" md-column md-order-by="gatewayName"><span>Gateway Name</span>\n            </th>\n            <th style="background-color: #3ab8c3;color: white;font-size: 14px;" md-column md-order-by="beaconName">Beacon Name</th>\n            <th style="background-color: #3ab8c3;color: white;font-size: 14px;" md-column md-order-by="rssi">RSSI</th>\n        </tr>\n        </thead>\n        <tbody md-body>\n        <tr md-row md-select="historyItem" md-select-id="{{historyItem.beaconName}}" md-auto-select\n            ng-repeat="historyItem in historyList">\n            <td md-cell>{{historyItem.timestamp | date:\'MM/dd/yyyy HH:mm:ss\'}}</td>\n            <td md-cell>{{historyItem.gatewayName}}</td>\n            <td md-cell>{{historyItem.beaconName}}</td>\n            <td md-cell>{{historyItem.rssi | number: 2}} %</td>\n        </tr>\n        </tbody>\n    </table>\n</md-table-container>\n\n<md-table-pagination md-limit="query.limit" md-page="query.page" md-total="{{query.total}}" md-on-paginate="onPaginate" md-page-select></md-table-pagination>'),e.put("js/login/login.html",'<md-content layout="column" flex layout-align="center center">\n    <div class="loginIEMaxWidth" style="width: 100%; min-height: 300px;" layout="row" layout-align="center center">\n        <md-whiteframe style="width: 100%; height: 100%;" class="md-whiteframe-6dp" layout="column" flex="30" flex-sm="100" flex-xs="100" layout-padding>\n            <form name="form" class="loginIEMaxHeight">\n                <md-content md-theme="docs-dark">\n                    <img src="/img/logo.png" width="100%"/>\n                    <md-input-container layout="column">\n                        <label>Email</label>\n                        <input name="email" type="email" ng-model="user.email" required>\n                        <div ng-messages="form.email.$error" ng-show="form.email.$dirty && form.email.$invalid">\n                            <div ng-message="required">Please enter an email address</div>\n                            <div ng-message="email">Please enter a valid email address</div>\n                        </div>\n                    </md-input-container>\n                    <md-input-container layout="column">\n                        <label>Password</label>\n                        <input name="pwd" ng-model="user.password" type="password" required/>\n                        <div ng-messages="form.pwd.$error" ng-show="form.pwd.$dirty && form.pwd.$invalid">\n                            <div ng-message="required">Please enter a password</div>\n                        </div>\n                    </md-input-container>\n\n                    <md-input-container>\n                        <div ng-messages="errors" ng-if="errors.length > 0" role="alert">\n                            <div ng-repeat="errorText in errors">\n                                {{ errorText.toString() }}\n                            </div>\n                        </div>\n                    </md-input-container>\n\n                    <div layout="row" layout-sm="column" layout-align="end center" layout-margin>\n                        <md-button class="md-raised" flex="50" flex-sm="100" ng-disabled="form.$invalid" ng-click="login()">Login</md-button>\n                    </div>\n                </md-content>\n            </form>\n        </md-whiteframe>\n    </div>\n    <div layout="column" layout-margin>\n        <a class="forgot-password-btn" href="#/resetPassword">\n            Forgot password?\n        </a>\n    </div>\n\n    <div ng-show="isAccountLocked" class="locked-account">\n        {{::lockedMessage}}\n    </div>\n\n</md-content>'),e.put("js/main/main.html",'<div layout="column" layout-fill flex>\n    <ui-view name="toolbar"></ui-view>\n\n    <md-content layout="row" layout-fill flex>\n        <ui-view name="sidenav" class="md-whiteframe-6dp sidenav"></ui-view>\n        <md-content layout="row" flex>\n            <ui-view name="content" class="content"  flex layout-margin></ui-view>\n        </md-content>\n    </md-content>\n</div>\n'),e.put("js/password-management/password-management.html",'<md-content class="loginIEMaxWidth" layout="column" flex layout-align="center center" ng-if="!showExpiredTokenMessage" ng-cloak>\n\n    <div layout="row" class="loginIEMaxWidth" layout-align="center center" ng-if="isRequestingReset">\n        <md-whiteframe style="width: 100%; min-height: 300px; min-width: 500px;" class="md-whiteframe-6dp" layout="column" flex="40" flex-sm="100" layout-padding>\n            <form class="loginIEMaxHeight" name="requestResetForm">\n                <md-content md-theme="docs-dark">\n                    <img src="/img/logo.png" width="100%"/>\n                    <md-input-container layout="column">\n                        <label>Email</label>\n                        <input name="email" ng-model="resetObject.email" type="email" required/>\n                        <div ng-messages="requestResetForm.email.$error" ng-show="requestResetForm.email.$dirty && requestResetForm.email.$invalid">\n                            <div ng-message="required">Please enter an email address</div>\n                            <div ng-message="email">Please enter a valid email address</div>\n                        </div>\n                    </md-input-container>\n                    <div layout="row" layout-sm="column" layout-align="center center" layout-margin>\n                        <md-button class="md-raised" flex="40" flex-md="60" flex-sm="100"\n                                   ng-disabled="requestResetForm.$invalid" ng-click="requestPasswordReset()">\n                            Reset password\n                        </md-button>\n                    </div>\n                </md-content>\n            </form>\n        </md-whiteframe>\n    </div>\n\n    <div layout="row" class="loginIEMaxWidth" layout-align="center center" ng-if="!isRequestingReset && !showExpiredTokenMessage">\n        <md-whiteframe style="height: 100%; min-width: 500px;" class="md-whiteframe-6dp" layout="column" flex="40" flex-sm="100" layout-padding>\n            <form class="loginIEMaxHeight" name="passwordSetForm">\n                <md-content md-theme="docs-dark">\n                    <img src="/img/logo.png" width="100%"/>\n                    <md-input-container style="width: auto;" layout="row" layout-sm="column">\n                        <label>Set Password</label>\n                        <input style="flex: 1" ng-model="newPasswordObject.newPassword" type="password" required/>\n                    </md-input-container>\n                    <md-input-container layout="row" layout-sm="column">\n                        <label>Confirm Password</label>\n                        <input style="flex: 1" ng-model="newPasswordObject.confirmNewPassword" type="password" required/>\n                    </md-input-container>\n                    <md-input-container>\n                        <div ng-messages="validationErrors" ng-if="validationErrors" role="alert">\n                            <div ng-repeat="errorText in validationErrors.User">\n                                {{ errorText }}\n                            </div>\n                            <div ng-repeat="errorText in validationErrors[\'User.password\']">\n                                {{ errorText }}\n                            </div>\n                        </div>\n                    </md-input-container>\n\n                    <div layout="row" layout-sm="column" layout-align="center center" layout-margin>\n                        <md-button class="md-raised" flex="40" flex-md="60" flex-sm="100"\n                                   ng-disabled="passwordSetForm.$invalid || !canSubmitPassword(newPasswordObject.newPassword)"\n                                   ng-click="setNewPassword()">Save\n                        </md-button>\n                    </div>\n                </md-content>\n            </form>\n\n            <div class="pwd-conditions-container">\n                <div>\n                    <div class="validation-group"\n                         ng-class="{\'valid\': passwordConditions.hasRequiredLength(newPasswordObject.newPassword)}">\n                        <i class="zmdi zmdi-check zmdi-hc-2x green"\n                           ng-show="passwordConditions.hasRequiredLength(newPasswordObject.newPassword)"></i>\n                        <i class="zmdi zmdi-close zmdi-hc-2x specialRed"\n                           ng-show="!passwordConditions.hasRequiredLength(newPasswordObject.newPassword)"></i>\n                        <div class="title" style="margin-left: 13px;">Minimum 8 characters in length</div>\n                    </div>\n                </div>\n\n                <div class="multiple-conditions">\n                    <div class="conditions-header"\n                         ng-class="{\'valid\': passwordConditions.meetsConditions(newPasswordObject.newPassword)}">\n                        <i class="zmdi zmdi-check zmdi-hc-2x green"\n                           ng-show="passwordConditions.meetsConditions(newPasswordObject.newPassword)"></i>\n                        <i class="zmdi zmdi-close zmdi-hc-2x specialRed"\n                           ng-show="!passwordConditions.meetsConditions(newPasswordObject.newPassword)"></i>\n                        <div class="title" style="display: inline-block; height: 24px; line-height: 24px; margin-left: 13px">\n                            Meets at least 3 of the following:\n                        </div>\n                    </div>\n\n                    <div class="conditions-item">\n                        <div class="validation-group"\n                              ng-class="{\'valid\': passwordConditions.hasLowerCaseChar(newPasswordObject.newPassword)}">\n                            <i class="zmdi zmdi-check zmdi-hc-2x green"\n                               ng-show="passwordConditions.hasLowerCaseChar(newPasswordObject.newPassword)"></i>\n                            <i class="zmdi zmdi-close zmdi-hc-2x specialRed"\n                               ng-show="!passwordConditions.hasLowerCaseChar(newPasswordObject.newPassword)"></i>\n                            <div class="title">\n                                Contains a lowercase character\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="conditions-item">\n                        <div class="validation-group"\n                              ng-class="{\'valid\': passwordConditions.hasUpperCaseChar(newPasswordObject.newPassword)}">\n                            <i class="zmdi zmdi-check zmdi-hc-2x green"\n                               ng-show="passwordConditions.hasUpperCaseChar(newPasswordObject.newPassword)"></i>\n                            <i class="zmdi zmdi-close zmdi-hc-2x specialRed"\n                               ng-show="!passwordConditions.hasUpperCaseChar(newPasswordObject.newPassword)"></i>\n                            <div class="title">\n                                Contains an uppercase character\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="conditions-item">\n                        <div class="validation-group"\n                              ng-class="{\'valid\': passwordConditions.hasNumber(newPasswordObject.newPassword)}">\n                            <i class="zmdi zmdi-check zmdi-hc-2x green"\n                               ng-show="passwordConditions.hasNumber(newPasswordObject.newPassword)"></i>\n                            <i class="zmdi zmdi-close zmdi-hc-2x specialRed"\n                               ng-show="!passwordConditions.hasNumber(newPasswordObject.newPassword)"></i>\n                            <div class="title">\n                                Contains an digit or number\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="conditions-item">\n                        <div class="validation-group"\n                              ng-class="{\'valid\': passwordConditions.hasSpecialChar(newPasswordObject.newPassword)}">\n                            <i class="zmdi zmdi-check zmdi-hc-2x green"\n                               ng-show="passwordConditions.hasSpecialChar(newPasswordObject.newPassword)"></i>\n                            <i class="zmdi zmdi-close zmdi-hc-2x specialRed"\n                               ng-show="!passwordConditions.hasSpecialChar(newPasswordObject.newPassword)"></i>\n                            <div class="title">\n                                Contains a special character ($, !, #, %, &, *, @)\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n        </md-whiteframe>\n    </div>\n\n</md-content>\n\n<md-content layout="column" flex layout-align="center center" ng-if="showExpiredTokenMessage">\n    <div class="loginIEMaxWidth" style="width: 100%; min-height: 300px;" layout="row" layout-align="center center">\n        <md-whiteframe style="width: 100%; height: 100%;" class="md-whiteframe-6dp" layout="column" flex="30" flex-sm="100" flex-xs="100" layout-padding>\n            <form name="form" class="loginIEMaxHeight">\n                <md-content md-theme="docs-dark">\n                    <img src="/img/logo.png" width="100%"/>\n\n                    <div layout="row" layout-sm="column" layout-align="end center" layout-margin>\n                        <span style="font-family: gotham_mediumregular">\n                            Your link is valid for a limited amount of time and for a single use only.\n                            <br>\n                            Please contact the Clinical Engineering Department for assistance!\n                        </span>\n                    </div>\n                </md-content>\n            </form>\n        </md-whiteframe>\n    </div>\n\n</md-content>\n\n<md-button class="back-to-login" ng-if="isRequestingReset || showExpiredTokenMessage" ng-click="backToLogin()">\n    <i class="zmdi zmdi-chevron-left"></i>\n    Back to login\n</md-button>\n'),e.put("js/room/create.html",'<md-dialog flex="40" layout-padding>\n    <form name="form">\n        <md-dialog-content>\n            <div layout="column" layout-padding layout-margin>\n                <md-input-container>\n                    <label>Name</label>\n                    <input name="name" ng-model="model.name" required md-maxlength="60" minlength="4">\n                    <div ng-messages="form.name.$error" ng-show="form.name.$dirty && form.name.$invalid">\n                        <div ng-message="required">This is required!</div>\n                        <div ng-message="md-maxlength">That\'s too long!</div>\n                        <div ng-message="minlength">That\'s too short!</div>\n                    </div>\n                </md-input-container>\n\n                <md-input-container>\n                    <label>Description</label>\n                    <input name="description" ng-model="model.description" md-maxlength="255">\n                    <div ng-messages="form.description.$error" ng-if="form.description.$dirty && form.description.$invalid" role="alert">\n                        <div ng-message="required">This is required!</div>\n                        <div ng-message=\'md-maxlength\'>That\'s too long!</div>\n                    </div>\n                </md-input-container>\n\n                <md-autocomplete\n                        ng-disabled="model.id != undefined && model.hasChildren"\n                        md-no-cache="true"\n                        md-selected-item="model.parent"\n                        md-search-text="searchTextRoom"\n                        md-items="option in querySearch(searchTextRoom, formOptions.rooms, \'name\')"\n                        md-item-text="option.name"\n                        md-min-length="0"\n                        md-floating-label="Parent">\n                    <md-item-template>\n                        <span md-highlight-flags="^i">{{option.name}}</span>\n                    </md-item-template>\n                    <md-not-found>\n                        No items available\n                    </md-not-found>\n                </md-autocomplete>\n\n                <md-input-container ng-if="!model.hasChildren">\n                    <label>Asset Type</label>\n                    <md-select ng-model="model.assetTypes" ng-if="recreateSelect" ng-change="loadStatusesForAssetType(model)">\n                        <md-option disabled ng-if="formOptions.assetTypes.length == 0">No items available</md-option>\n                        <md-option style="color: darkgray" ng-value=null ng-click="resetSelect()">None</md-option>\n                        <md-option ng-repeat="option in formOptions.assetTypes" ng-selected="option.id == model.assetMappings[0].assetType.id"  ng-value="option">\n                            {{option.name}}\n                        </md-option>\n                    </md-select>\n                </md-input-container>\n\n                <md-input-container ng-if="model.assetTypes">\n                    <label>Status</label>\n                    <md-select ng-model="model.assetStatus" required>\n                        <md-option disabled ng-if="formOptions.statuses.length == 0">No items available</md-option>\n                        <md-option ng-repeat="option in formOptions.statuses" ng-selected="option.id == model.assetMappings[0].assetStatus.id" ng-value="option">\n                            {{option.status}}\n                        </md-option>\n                    </md-select>\n                </md-input-container>\n\n                <md-autocomplete\n                        ng-if="ROLES.SAD && !model.suppressIntermediary"\n                        ng-disabled="isEditMode"\n                        md-no-cache="true"\n                        md-selected-item="model.hospital"\n                        md-items="option in formOptions.hospitals"\n                        md-item-text="option.name"\n                        md-min-length="0"\n                        md-floating-label="Hospital"\n                        required="true">\n                    <md-item-template>\n                        <span md-highlight-flags="^i">{{option.name}}</span>\n                    </md-item-template>\n                    <md-not-found>\n                        No hospital found\n                    </md-not-found>\n                </md-autocomplete>\n\n            </div>\n        </md-dialog-content>\n        <md-dialog-actions>\n            <md-button class="md-warn" ng-click="close()">Cancel</md-button>\n            <md-button class="md-primary" ng-disabled="form.$invalid" ng-click="save()"> Save</md-button>\n        </md-dialog-actions>\n    </form>\n</md-dialog>'),
e.put("js/room/hospital-room-selection.html",'<md-dialog flex="30" flex-md="40">\n    <ng-form name="form">\n        <div layout="column" layout-padding layout-margin>\n            <md-dialog-content layout-padding>\n                <div layout="row" layout-wrap>\n                    <md-autocomplete\n                            flex="100"\n                            layout-align="center none"\n                            md-no-cache="true"\n                            md-selected-item="model.hospital"\n                            md-search-text="searchText"\n                            md-items="option in querySearch(searchText)"\n                            md-item-text="option.name"\n                            md-min-length="0"\n                            md-floating-label="Hospital"\n                            required="true">\n                        <md-item-template>\n                            <span md-highlight-flags="^i">{{option.name}}</span>\n                        </md-item-template>\n                        <md-not-found>\n                            No hospitals found\n                        </md-not-found>\n                    </md-autocomplete>\n                </div>\n            </md-dialog-content>\n        </div>\n        <md-dialog-actions>\n            <md-button class="md-warn" ng-click="close()">Cancel</md-button>\n            <md-button class="md-primary" ng-disabled="form.$invalid" ng-click="proceed()">Next</md-button>\n        </md-dialog-actions>\n    </ng-form>\n</md-dialog>'),e.put("js/room/room.html",'<crud-list\n        resource="room"\n        query="options.query"\n        columns="columns"\n        filter-config="filterConfig"\n        create-form-url="js/room/create.html"\n        form-options="formOptions"\n        actions="actions"\n        intermediate-template="js/room/hospital-room-selection.html"\n        intermediate-controller="HospitalRoomIntermediaryController">\n</crud-list>'),e.put("js/sidenav/sidenav.html",'<md-content layout="column">\n    <md-sidenav class="md-sidenav-left" md-component-id="left" md-is-locked-open="true">\n        <md-content class="sidenavHover" style="background-color: transparent">\n            <md-list>\n                <md-list-item ui-sref-active-eq="selected">\n                    <div class="md-list-item-text">\n                        <md-button ui-sref=".">\n                            <i class="zmdi zmdi-home zmdi-hc-2x"></i>\n                            <span ng-show="isSidenavOpen">Dashboard</span>\n                        </md-button>\n                    </div>\n                </md-list-item>\n                <md-list-item ui-sref-active-eq="selected" ng-if="ROLES.SAD || ROLES.HAD">\n                    <div class="md-list-item-text">\n                        <md-button ui-sref=".beacon">\n                            <i class="zmdi zmdi-bluetooth-setting zmdi-hc-2x"></i>\n                            <span ng-show="isSidenavOpen">Beacon management</span>\n                        </md-button>\n                    </div>\n                </md-list-item>\n                <md-list-item ui-sref-active-eq="selected" ng-if="ROLES.SAD || ROLES.HAD">\n                    <div class="md-list-item-text">\n                        <md-button ui-sref=".user">\n                            <i class="zmdi zmdi-accounts-alt zmdi-hc-2x"></i>\n                            <span ng-show="isSidenavOpen">User management</span>\n                        </md-button>\n                    </div>\n                </md-list-item>\n                <md-list-item ui-sref-active-eq="selected"  ng-if="ROLES.SAD || ROLES.HAD">\n                    <div class="md-list-item-text">\n                        <md-button ui-sref=".room">\n                            <i class="zmdi zmdi-pin zmdi-hc-2x"></i>\n                            <span ng-show="isSidenavOpen">Area management</span>\n                        </md-button>\n                    </div>\n                </md-list-item>\n                <md-list-item ui-sref-active-eq="selected" ng-if="ROLES.SAD">\n                    <div class="md-list-item-text">\n                        <md-button ui-sref=".gateway">\n                            <i class="zmdi zmdi-bluetooth-search zmdi-hc-2x"></i>\n                            <span ng-show="isSidenavOpen">Gateway management</span>\n                        </md-button>\n                    </div>\n                </md-list-item>\n                <md-list-item ui-sref-active-eq="selected" ng-if="ROLES.SAD || ROLES.HAD">\n                    <div class="md-list-item-text">\n                        <md-button ui-sref=".dictionary">\n                            <i class="zmdi zmdi-view-web zmdi-hc-2x"></i>\n                            <span ng-show="isSidenavOpen">System configuration</span>\n                        </md-button>\n                    </div>\n                </md-list-item>\n            </md-list>\n        </md-content>\n    </md-sidenav>\n</md-content>\n<md-list-item class="toggle-sidenav" style="position: absolute;bottom: 10px;" layout-align="end end">\n    <div class="md-list-item-text">\n        <md-button ng-click="toggleSidenav()" style="min-width: 0; width: 50px; text-align: center;line-height: 15px">\n            <i class="zmdi zmdi-chevron-right zmdi-hc-2x" ng-if="!isSidenavOpen"></i>\n            <i class="zmdi zmdi-chevron-right zmdi-hc-2x" ng-if="!isSidenavOpen"></i>\n            <i class="zmdi zmdi-chevron-left zmdi-hc-2x" ng-if="isSidenavOpen"></i>\n            <i class="zmdi zmdi-chevron-left zmdi-hc-2x" ng-if="isSidenavOpen"></i>\n        </md-button>\n    </div>\n</md-list-item>'),e.put("js/simpleLiveFeed/simpleLiveFeed.html",'<md-table-container>\n    <table md-table style="margin-top: 40px">\n        <thead md-head md-order="query.order" md-on-reorder="onReorder">\n        <tr md-row>\n            <th style="background-color: #3ab8c3;color: white;font-size: 14px;" md-column md-order-by="timestamp"><span>Timestamp</span></th>\n            <th style="background-color: #3ab8c3;color: white;font-size: 14px;" md-column md-order-by="gatewayName"><span>Gateway Name</span>\n            </th>\n            <th style="background-color: #3ab8c3;color: white;font-size: 14px;" md-column md-order-by="beaconName">Beacon Name</th>\n            <th style="background-color: #3ab8c3;color: white;font-size: 14px;" md-column md-order-by="rssi">RSSI</th>\n        </tr>\n        </thead>\n        <tbody md-body>\n        <tr md-row md-select="historyItem" md-select-id="{{historyItem.beaconName}}" md-auto-select\n            ng-repeat="historyItem in historyList">\n            <td md-cell ng-if="historyItem.timestamp != null">{{historyItem.timestamp | date:\'MM/dd/yyyy HH:mm:ss\'}}</td>\n            <td md-cell ng-if="historyItem.timestamp == null">No signal received</td>\n            <td md-cell>{{historyItem.gatewayName}}</td>\n            <td md-cell>{{historyItem.beaconName}}</td>\n            <td md-cell ng-if="historyItem.timestamp != null" >{{historyItem.rssi | number: 2}} dBµ</td>\n            <td md-cell ng-if="historyItem.timestamp == null">{{0 | number: 2}} dBµ</td>\n        </tr>\n        </tbody>\n    </table>\n</md-table-container>\n\n<md-table-pagination md-limit="query.limit" md-page="query.page" md-total="{{query.total}}" md-on-paginate="onPaginate" md-page-select></md-table-pagination>'),e.put("js/toolbar/toolbar.html",'<md-toolbar md-scroll-shrink="true" class="main-toolbar md-whiteframe-6dp">\n    <div class="md-toolbar-tools">\n        <img src="/img/logo.png" height="40"/>\n        <!-- fill up the space between left and right area -->\n        <span flex></span>\n        <md-button disabled="true">\n            <i class="zmdi zmdi-account-box"></i>\n            {{user.firstName + \' \' + user.lastName}}\n        </md-button>\n        <md-button ng-click="logout()">\n            Log Out\n        </md-button>\n    </div>\n</md-toolbar>'),e.put("js/user/create.html",'<md-dialog flex="40" layout-padding>\n    <form name="form">\n        <md-dialog-content>\n            <div layout="column" layout-padding layout-margin>\n\n                <md-input-container>\n                    <label>First Name</label>\n                    <input name="firstName" ng-model="model.firstName" required md-maxlength="60" minlength="1">\n                    <div ng-messages="form.firstName.$error" ng-show="form.firstName.$dirty && form.firstName.$invalid">\n                        <div ng-message="required">This is required!</div>\n                        <div ng-message="md-maxlength">That\'s too long!</div>\n                        <div ng-message="minlength">That\'s too short!</div>\n                    </div>\n                </md-input-container>\n\n                <md-input-container>\n                    <label>Last Name</label>\n                    <input name="lastName" ng-model="model.lastName" required md-maxlength="60" minlength="1">\n                    <div ng-messages="form.lastName.$error" ng-show="form.lastName.$dirty && form.lastName.$invalid">\n                        <div ng-message="required">This is required!</div>\n                        <div ng-message="md-maxlength">That\'s too long!</div>\n                        <div ng-message="minlength">That\'s too short!</div>\n                    </div>\n                </md-input-container>\n\n                <md-input-container>\n                    <label>Email</label>\n                    <input name="email" type="email" ng-model="model.email" ng-disabled="isEditMode" required md-maxlength="60" minlength="1">\n                    <div ng-messages="form.email.$error" ng-show="form.email.$dirty && form.email.$invalid">\n                        <div ng-message="required">This is required!</div>\n                        <div ng-message="md-maxlength">That\'s too long!</div>\n                        <div ng-message="minlength">That\'s too short!</div>\n                        <div ng-message="email">Please enter a valid email address</div>\n                    </div>\n                    <div ng-messages="validationErrors" ng-if="validationErrors" role="alert">\n                        <div ng-repeat="errorText in validationErrors[\'User.email\']">\n                            {{ errorText }}\n                        </div>\n                    </div>\n                </md-input-container>\n\n                <md-autocomplete\n                        md-no-cache="true"\n                        md-selected-item="model.role"\n                        md-item-text="option.name"\n                        md-min-length="0"\n                        md-floating-label="Role"\n                        md-search-text="searchTextRole"\n                        md-items="option in querySearch(searchTextRole, formOptions.roles, \'name\')"\n                        required="true">\n                    <md-item-template>\n                        <span md-highlight-flags="^i">{{option.name}}</span>\n                    </md-item-template>\n                    <md-not-found>\n                        No role found\n                    </md-not-found>\n                </md-autocomplete>\n\n                <md-autocomplete\n                        ng-if="(model.role.isSuperAdmin != true) && ROLES.SAD && !model.suppressIntermediary"\n                        ng-disabled="isEditMode && !(hospitalIsNull && !model.role.isSuperAdmin)"\n                        md-no-cache="true"\n                        md-selected-item="model.hospital"\n                        md-search-text="searchTextHospital"\n                        md-items="option in querySearch(searchTextHospital, formOptions.hospitals, \'name\')"\n                        md-item-text="option.name"\n                        md-min-length="0"\n                        md-floating-label="Hospital"\n                        required="true">\n                    <md-item-template>\n                        <span md-highlight-flags="^i">{{option.name}}</span>\n                    </md-item-template>\n                    <md-not-found>\n                        No hospital found\n                    </md-not-found>\n                </md-autocomplete>\n\n                <md-checkbox class="checkbox-display" ng-if="!model.isActive && !model.hasPasswordSet" ng-model="model.sendInvitation">\n                    Send activation email\n                </md-checkbox>\n            </div>\n        </md-dialog-content>\n        <md-dialog-actions>\n            <md-button class="md-secondary" ng-if="isEditMode && model.isActive" ng-click="resetUserPassword(model)"> Reset Password</md-button>\n            <md-button class="md-warn" ng-click="close()">Cancel</md-button>\n            <md-button class="md-primary" ng-disabled="form.$invalid" ng-click="save()"> Save</md-button>\n        </md-dialog-actions>\n    </form>\n</md-dialog>'),e.put("js/user/hospital-user-selection.html",'<md-dialog flex="30" flex-md="40">\n    <ng-form name="form">\n        <div layout="column" layout-padding layout-margin>\n            <md-dialog-content layout-padding>\n                <div layout="row" layout-wrap>\n                    <md-autocomplete\n                            flex="100"\n                            layout-align="center none"\n                            md-no-cache="true"\n                            md-selected-item="model.hospital"\n                            md-search-text="searchText"\n                            md-items="option in querySearch(searchText)"\n                            md-item-text="option.name"\n                            md-min-length="0"\n                            md-floating-label="Hospital"\n                            required="true">\n                        <md-item-template>\n                            <span md-highlight-flags="^i">{{option.name}}</span>\n                        </md-item-template>\n                        <md-not-found>\n                            No hospitals found\n                        </md-not-found>\n                    </md-autocomplete>\n                </div>\n            </md-dialog-content>\n        </div>\n        <md-dialog-actions>\n            <md-button class="md-warn" ng-click="close()">Cancel</md-button>\n            <md-button class="md-primary" ng-disabled="form.$invalid" ng-click="proceed()">Next</md-button>\n        </md-dialog-actions>\n    </ng-form>\n</md-dialog>'),e.put("js/user/role-change.html",'<md-dialog flex="30" flex-md="40">\n    <ng-form name="form">\n        <div layout="column" layout-padding layout-margin>\n            <md-dialog-content layout-padding>\n                <div layout="row" layout-wrap>\n                    <md-autocomplete\n                            flex="100"\n                            layout-align="center none"\n                            md-no-cache="true"\n                            md-selected-item="role"\n                            md-search-text="searchText"\n                            md-items="option in querySearch(searchText)"\n                            md-item-text="option.name"\n                            md-min-length="0"\n                            md-floating-label="Role"\n                            required="true">\n                        <md-item-template>\n                            <span md-highlight-flags="^i">{{option.name}}</span>\n                        </md-item-template>\n                        <md-not-found>\n                            No roles found\n                        </md-not-found>\n                    </md-autocomplete>\n                </div>\n            </md-dialog-content>\n        </div>\n        <md-dialog-actions>\n            <md-button class="md-warn" ng-click="close()">Cancel</md-button>\n            <md-button class="md-primary" ng-disabled="form.$invalid" ng-click="save()">Save</md-button>\n        </md-dialog-actions>\n    </ng-form>\n</md-dialog>'),e.put("js/user/user.html",'<crud-list\n        resource="user"\n        columns="columns"\n        buttons="buttons"\n        multiselect="userselect"\n        filter-config="filterConfig"\n        create-form-url="js/user/create.html"\n        form-options="formOptions"\n        actions="actions"\n        can-upload-file="true"\n        intermediate-template="js/user/hospital-user-selection.html"\n        intermediate-controller="HospitalUserIntermediaryController"></crud-list>'),e.put("js/dashboard/beacon/card.html",'<md-card class="beacon-tile">\n    <md-card-title  ng-click="viewCallback(\'asset\',allocation)">\n        <md-card-title-text layout="row" layout-wrap>\n            <div flex="65" class="card-title">\n                <div class="md-subhead label">ID</div>\n                <span class="md-headline beacon-name">{{ allocation.allocationName.toUpperCase() }}</span>\n            </div>\n            <div flex="35" layout-align=" center">\n                <div class="md-subhead label label-in right">IN</div>\n                <div class="md-headline time-in time-in-text" ng-if="::allocation.entryDate">{{ allocation.entryDate | amDateFormat:\'MM/DD/YY\'  }}</div>\n                <div class="md-headline time-in time-in-text" ng-if="::allocation.entryDate">{{ allocation.entryDate | amDateFormat:\'hh:mm A\'  }}</div>\n                <div class="md-headline time-in time-in-text" ng-if="!allocation.entryDate">&mdash;</div>\n            </div>\n            <div flex="100" ng-if="::allocation.meta.assetType">\n                <div class="md-subhead label label-in">Type</div>\n                <span class="md-headline meta">{{ ::allocation.meta.assetType }}</span>\n            </div>\n            <div flex="100" ng-if="::allocation.allocationStatus">\n                <div class="md-subhead label label-in">Status</div>\n                <span class="md-headline meta">{{ ::allocation.allocationStatus }}</span>\n            </div>\n            <div flex="100">\n                <div class="md-subhead label label-in">Location</div>\n                <span class="md-headline meta">\n                    <span ng-if="!allocation.location">UNKNOWN</span>\n                    <span ng-if="allocation.location.area && !allocation.location.room">{{allocation.location.area}}</span>\n                    <span ng-if="!allocation.location.area && allocation.location.room">{{allocation.location.room}}</span>\n                    <span ng-if="allocation.location.area && allocation.location.room">{{allocation.location.area}}, {{allocation.location.room}}</span>\n                </span>\n            </div>\n            <div flex="100" ng-if="::allocation.surgery">\n                <div class="md-subhead label label-in">Surgery</div>\n                <span class="md-headline meta">{{ allocation.surgery }}</span>\n            </div>\n            <div flex="100" ng-if="::allocation.doctor">\n                <div class="md-subhead label label-in" ng-if="::allocation.doctor">Doctor</div>\n                <span class="md-headline meta">{{ allocation.doctor }}</span>\n            </div>\n        </md-card-title-text>\n        <md-card-title-media>\n\n        </md-card-title-media>\n    </md-card-title>\n    <md-card-actions layout="row" layout-align="start center">\n        <div flex="100" layout-align="end center" class="action-buttons" ng-if="ROLES.SAD || ROLES.HAD || ROLES.HCL">\n            <md-button class="md-icon-button edit-action" ng-click="editCallback(\'asset\',allocation)">\n                <md-tooltip>Edit</md-tooltip>\n                <i class="zmdi zmdi-edit zmdi-hc-2x special-blue"></i>\n            </md-button>\n            <md-button class="md-icon-button md-warn" ng-click="discardCallback(allocation)">\n                <md-tooltip>Discharge</md-tooltip>\n                <i class="zmdi zmdi-delete zmdi-hc-2x red"></i>\n            </md-button>\n        </div>\n    </md-card-actions>\n</md-card>'),e.put("js/dashboard/create/asset.html",'<md-dialog flex="45" flex-md="60">\n    <ng-form name="form">\n        <md-dialog-content layout-padding>\n            <div layout="row">\n\n                <md-autocomplete\n                        flex="30"\n                        class="autocomplete-field-create-asset"\n                        md-no-cache="true"\n                        md-selected-item="model.beacon"\n                        md-search-text="searchTextBeacon"\n                        md-items="option in querySearch(searchTextBeacon, beacons, \'name\')"\n                        md-item-text="option.name"\n                        md-min-length="0"\n                        md-floating-label="Select beacon"\n                        required="true">\n                    <md-item-template>\n                        <span md-highlight-flags="^i">{{option.name}}</span>\n                    </md-item-template>\n                    <md-not-found>\n                        No beacons found\n                    </md-not-found>\n                </md-autocomplete>\n\n                <md-autocomplete\n                        flex="30"\n                        class="autocomplete-field-create-asset"\n                        md-no-cache="true"\n                        md-selected-item="model.assetType"\n                        md-search-text="searchTextAssetType"\n                        md-items="option in querySearch(searchTextAssetType, types, \'name\')"\n                        md-item-text="option.name"\n                        md-min-length="0"\n                        md-floating-label="Select type"\n                        required="true">\n                    <md-item-template>\n                        <span md-highlight-flags="^i">{{option.name}}</span>\n                    </md-item-template>\n                    <md-not-found>\n                        No asset types found\n                    </md-not-found>\n                </md-autocomplete>\n\n\n                <md-input-container flex="40" style="margin-top: 28px;">\n                    <label>Asset ID</label>\n                    <input name="name" ng-model="model.name" required md-maxlength="10" minlength="5">\n                    <div ng-messages="form.name.$error" ng-if="form.name.$dirty && form.name.$invalid" role="alert">\n                        <div ng-message=\'required\'>This is required!</div>\n                        <div ng-message=\'maxlength\'>That\'s too long!</div>\n                        <div ng-message="minlength">That\'s too short!</div>\n                    </div>\n                </md-input-container>\n            </div>\n            <div layout="row" layout-wrap>\n                <md-input-container flex="100">\n                    <label>Description</label>\n                    <textarea name="description" ng-model="model.meta.assetDescription" required md-maxlength="90"\n                              minlength="5"></textarea>\n                    <div ng-messages="form.description.$error"\n                         ng-if="form.description.$dirty && form.description.$invalid" role="alert">\n                        <div ng-message=\'required\'>This is required!</div>\n                        <div ng-message=\'maxlength\'>That\'s too long!</div>\n                        <div ng-message="minlength">That\'s too short!</div>\n                    </div>\n                </md-input-container>\n            </div>\n        </md-dialog-content>\n        <md-dialog-actions>\n            <md-button class="md-warn" ng-click="close()">Cancel</md-button>\n            <md-button class="md-primary" ng-disabled="form.$invalid" ng-click="save()">Save</md-button>\n        </md-dialog-actions>\n    </ng-form>\n</md-dialog>'),e.put("js/dashboard/create/hospitalSelection.html",'<md-dialog flex="30" flex-md="40">\n    <ng-form name="form">\n        <div layout="column" layout-padding layout-margin>\n            <md-dialog-content layout-padding>\n                <div layout="row" layout-wrap>\n                    <md-autocomplete\n                            flex="100"\n                            layout-align="center none"\n                            md-no-cache="true"\n                            md-selected-item="model.hospital"\n                            md-search-text="searchText"\n                            md-items="option in querySearch(searchText)"\n                            md-item-text="option.name"\n                            md-min-length="0"\n                            md-floating-label="Hospital"\n                            required="true">\n                        <md-item-template>\n                            <span md-highlight-flags="^i">{{option.name}}</span>\n                        </md-item-template>\n                        <md-not-found>\n                            No hospitals found\n                        </md-not-found>\n                    </md-autocomplete>\n                </div>\n            </md-dialog-content>\n        </div>\n\n        <md-dialog-actions>\n            <md-button class="md-warn" ng-click="close()">Cancel</md-button>\n            <md-button class="md-primary" ng-disabled="form.$invalid" ng-click="proceed()">Next</md-button>\n        </md-dialog-actions>\n    </ng-form>\n</md-dialog>'),e.put("js/dashboard/create/patient.html",'<md-dialog  flex="50">\n    <form name="form">\n        <md-dialog-content layout-padding>\n            <div layout="row"   layout-wrap>\n                <md-input-container flex="50">\n                    <label>Select beacon</label>\n                    <md-select ng-model="model.roomId">\n                        <md-option ng-repeat="option in formOptions.rooms" value="{{option.id}}">\n                            {{option.name}}\n                        </md-option>\n                    </md-select>\n                </md-input-container>\n\n                <md-input-container flex="50">\n                    <label>UUID</label>\n                    <input name="uuid" ng-model="model.uuid" required md-maxlength="45" minlength="10">\n                    <div ng-messages="form.uuid.$error" ng-if="form.uuid.$dirty && form.uuid.$invalid" role="alert">\n                        <div ng-message=\'required\'>This is required!</div>\n                        <div ng-message=\'maxlength\'>That\'s too long!</div>\n                        <div ng-message="minlength">That\'s too short!</div>\n                    </div>\n                </md-input-container>\n            </div>\n            <div layout="row"   layout-wrap>\n                <md-input-container flex="25">\n                    <label>Select beacon</label>\n                    <md-select ng-model="model.roomId">\n                        <md-option ng-repeat="option in formOptions.rooms" value="{{option.id}}">\n                            {{option.name}}\n                        </md-option>\n                    </md-select>\n                </md-input-container>\n                <md-input-container flex="25">\n                    <label>Select beacon</label>\n                    <md-select ng-model="model.roomId">\n                        <md-option ng-repeat="option in formOptions.rooms" value="{{option.id}}">\n                            {{option.name}}\n                        </md-option>\n                    </md-select>\n                </md-input-container>\n                <md-input-container flex="50">\n                    <label>UUID</label>\n                    <input name="uuid" ng-model="model.uuid" required md-maxlength="45" minlength="10">\n                    <div ng-messages="form.uuid.$error" ng-if="form.uuid.$dirty && form.uuid.$invalid" role="alert">\n                        <div ng-message=\'required\'>This is required!</div>\n                        <div ng-message=\'maxlength\'>That\'s too long!</div>\n                        <div ng-message="minlength">That\'s too short!</div>\n                    </div>\n                </md-input-container>\n            </div>\n        </md-dialog-content>\n        <md-dialog-actions>\n            <md-button class="md-warn" ng-click="close()">Cancel</md-button>\n            <md-button class="md-primary" ng-disabled="form.$invalid" ng-click="save()">Save</md-button>\n        </md-dialog-actions>\n    </form>\n</md-dialog>'),e.put("js/dashboard/directives/associateAction.html",'<div class="md-whiteframe-6dp associate-form" layout="row" flex="100" flex-md="80" flex-sm="100" flex-xs="100">\n    <div flex="50" class="availableBeacons" layout="column" layout-align="center center">\n        <div class="label-available" flex  layout-align="center center" layout="column">\n            Free\n        </div>\n        <div class="label-nr-available" flex layout="row">\n            <img class="available-beacons-icon" src="img/beacons-01.png" alt="Beacons">\n            <div class="available-beacons-count" ng-show="freeBeaconCount != \'\'">{{freeBeaconCount}}</div>\n            <div class="available-beacons-count" ng-show="freeBeaconCount == \'\'">\n                <i class="zmdi zmdi-rotate-right zmdi-hc-spin"></i>\n            </div>\n        </div>\n    </div>\n    <div flex="50" layout="row" class="allocate">\n        <md-button flex="100" class="inventory addBeaconsBtn" ng-disabled="freeBeaconCount == 0" ng-class="{\'disableBtn\' : freeBeaconCount == 0}" layout-align="center center" ng-click="addCallback(\'asset\')">\n            <div class="allocateText">allocate</div>\n            <i style="font-size: 6em" class="zmdi zmdi-plus zmdi-hc-5x white"></i>\n        </md-button>\n\n    </div>\n</div>'),e.put("js/dashboard/directives/filter.html",'<div class="filter-area md-whiteframe-6dp" layout="column" layout-fill>\n    <div layout="row">\n        <span class="filterPadding">FILTER</span>\n        <span flex></span>\n        <md-button class="filter-button reset" ng-click="resetFilters()">\n            Reset\n        </md-button>\n        <md-button class="filter-button" ng-click="applyFilters()">\n            Apply\n        </md-button>\n    </div>\n    <div class="filters" layout="row" flex layout-wrap>\n        <md-input-container flex="20">\n            <label>by Location</label>\n            <md-select ng-model="filter.room" multiple>\n                <md-option disabled ng-if="filters.rooms.length == 0">No items available</md-option>\n                <md-option ng-repeat="room in filters.rooms" value="{{room.id}}">\n                    <span ng-if="room.parent.name">{{room.parent.name + \' - \'}}</span>\n                    {{room.name}}\n                </md-option>\n            </md-select>\n        </md-input-container>\n\n        <md-input-container flex="auto" ng-if="type==\'patient\'">\n            <label>by Doctor</label>\n            <md-select ng-model="filter.doctor">\n                <md-option ng-repeat="doctor in filters.doctors" value="{{doctor.id}}">\n                    {{doctor.name}}\n                </md-option>\n            </md-select>\n        </md-input-container>\n\n        <md-input-container flex="20" ng-if="type==\'asset\'">\n            <label>by Type</label>\n            <md-select ng-model="filter.assetTypeId" md-on-close="reloadStatuses(filter.assetTypeId)">\n                <md-option disabled ng-if="filters.types.length == 0">No items available</md-option>\n                <md-option ng-repeat="type in filters.types track by type.id" value="{{type.id}}">\n                    {{type.name}}\n                </md-option>\n            </md-select>\n        </md-input-container>\n\n        <md-input-container flex="20" ng-if="type==\'asset\'">\n            <label>by Status</label>\n            <md-select ng-model="filter.status" multiple>\n                <md-option disabled ng-if="filters.statuses.length == 0">No items available</md-option>\n                <md-option ng-repeat="status in filters.statuses track by $index" ng-value="status">\n                    {{status.status || status}}\n                </md-option>\n            </md-select>\n        </md-input-container>\n\n        <div flex="20" flex-md="25" flex-sm="100" class="date-picker-filter">\n            <md-datepicker ng-model="filter.entry" md-placeholder="by Entry" date-offset></md-datepicker>\n        </div>\n\n        <md-input-container flex="20" flex-md="100" flex-sm="100" ng-if="ROLES.SAD">\n            <label>by Hospital</label>\n            <md-select ng-model="filter.hospital">\n                <md-option disabled ng-if="filters.hospitals.length == 0">No items available</md-option>\n                <md-option ng-repeat="hospital in filters.hospitals | orderBy:\'name\'" ng-value="hospital.id">\n                    {{hospital.name}}\n                </md-option>\n            </md-select>\n        </md-input-container>\n\n        <md-input-container flex="auto" ng-if="type==\'patient\'">\n            <label>by Surgery</label>\n            <md-select ng-model="filter.surgery">\n                <md-option ng-repeat="surgery in filters.surgery_types" value="{{surgery.id}}">\n                    {{surgery.name}}\n                </md-option>\n            </md-select>\n        </md-input-container>\n    </div>\n</div>'),
e.put("js/dashboard/directives/free-text-search-form.html",'<div class="md-whiteframe-1dp free-search-form free-text-search-form search-form-height" flex="100">\n    <div layout="row">\n        <div class="input search-input" layout-margin>\n            <md-input-container md-no-float layout="row">\n                <i style="padding-right: 15px;" class="zmdi zmdi-search zmdi-hc-2x"></i>\n                <input flex="1" name="text" ng-model="search.text" placeholder="Search..."/>\n            </md-input-container>\n        </div>\n        <div flex></div>\n        <md-button class="filter-button reset btnMargin" ng-click="reset()">\n            Reset\n        </md-button>\n        <md-button class="filter-button btnMargin" ng-click="search(search.text)">\n            Apply\n        </md-button>\n    </div>\n</div>'),e.put("js/dashboard/view/asset.html",'<md-dialog flex="50" flex-md="65" class="allocation-view">\n    <md-dialog-content layout="column" layout-padding ng-if="!isHistoryActive">\n        <div layout="row" style="padding-bottom: 30px;">\n            <div class="meta" layout="column" flex="50">\n                <div class="label">ID</div>\n                <div class="value">{{allocation.name}}</div>\n            </div>\n            <div class="meta inDateTime" layout="column" flex="50">\n                <div class="label">IN</div>\n                <div ng-if="allocation.entryDate" class="value">{{ allocation.entryDate | amDateFormat:\'MM/DD/YYYY hh:mm A\' }}</div>\n                <div ng-if="!allocation.entryDate" class="value">{{ \'-\' }}</div>\n            </div>\n        </div>\n        <div layout="row">\n            <div class="meta" layout="column" flex="50">\n                <div class="label">Type</div>\n                <div class="value">{{allocation.assetType.name}}</div>\n            </div>\n            <div class="meta room" layout="column" flex="50" ng-style="{\'border-color\': allocation.room.color}">\n                <div class="label">Current Location</div>\n                <div class="value">\n                    {{allocation.location.area}}\n                    <span ng-if="!allocation.location.area && !allocation.location.room">UNKNOWN</span>\n                    <span ng-if="allocation.location.area && allocation.location.room">, </span>\n                    {{allocation.location.room}}\n                </div>\n            </div>\n        </div>\n        <div layout="row">\n            <div class="meta" layout="column" flex="100">\n                <div class="label">Description</div>\n                <div class="value">{{allocation.meta.assetDescription}}</div>\n            </div>\n            <div class="meta status" layout="column" flex="50">\n                <div class="label">Status</div>\n                <div class="value">{{allocation.status}}</div>\n            </div>\n        </div>\n        <div layout="row" ng-if="ROLES.SAD">\n            <div class="meta" layout="column" flex="50">\n                <div class="label">Hospital</div>\n                <div class="value">{{allocation.hospital.name}}</div>\n            </div>\n        </div>\n    </md-dialog-content>\n    <md-dialog-content layout="column" layout-padding ng-if="isHistoryActive">\n        <div layout="row" style="padding-bottom: 30px;">\n            <div class="meta" layout="column" flex="50">\n                <div class="label">ID</div>\n                <div class="value">{{allocation.name}}</div>\n            </div>\n            <div class="meta room" layout="column" ng-style="{\'border-color\': allocation.room.color}" flex="50">\n                <div class="label">Current Location</div>\n                <div class="value">\n                    {{allocation.location.area}}\n                    <span ng-if="!allocation.location.area && !allocation.location.room">UNKNOWN</span>\n                    <span ng-if="allocation.location.area && allocation.location.room">, </span>\n                    {{allocation.location.room}}\n                </div>\n            </div>\n        </div>\n        <div layout="row">\n            <div class="meta" layout="column" flex="40">\n                <div class="label name">Name</div>\n            </div>\n            <div class="meta" layout="column" flex="30">\n                <div class="label">In</div>\n            </div>\n            <div class="meta" layout="column" flex="30">\n                <div class="label">Out</div>\n            </div>\n        </div>\n        <div class="allocation-history-container" infinite-scroll=\'loadAllocationHistory()\' infinite-scroll-disabled=\'isInfiniteScrollDisabled\' infinite-scroll-distance=\'1\'>\n            <label class="noResultsLabel" ng-if="allocation.history.length == 0">No location history available</label>\n            <div layout="row" class="history" ng-repeat="item in allocation.history">\n                <div class="room" ng-style="{\'border-color\': allocation.room.color}" flex="40">\n                    <span ng-if="item.parentName && item.parentName.length > 0">{{item.parentName + \', \'}}</span>{{ item.roomName }}\n                </div>\n                <div class="in" flex="30">\n                    {{ item.entryTime | amDateFormat:\'MM/DD/YYYY  h:mma\'}}\n                </div>\n                <div class="out" flex="30">\n                    {{ item.exitTime | amDateFormat:\'MM/DD/YYYY h:mma\' }}\n                </div>\n            </div>\n            <div ng-show=\'isBusyRequestingData\'>Loading history...</div>\n        </div>\n\n    </md-dialog-content>\n    <md-dialog-actions layout="row">\n        <div class="view-actions-container" style="padding: 0" flex="20" layout="row" layout-align="center center">\n            <md-button flex="90" class="md-warn" ng-click="close()">\n                Close\n                <md-tooltip>Close</md-tooltip>\n            </md-button>\n        </div>\n        <div class="view-history-container" flex-auto="" layout="column">\n            <md-button class=md-view-history" ng-click="isHistoryActive=!isHistoryActive" flex="100">\n                {{ isHistoryActive ? \'Click to view details\' : \'Click to view location history\'}}\n            </md-button>\n        </div>\n        <div ng-if="ROLES.SAD || ROLES.HAD || ROLES.HCL" class="view-actions-container" flex="20" layout="row" layout-align="center center">\n            <md-button class="md-icon-button edit-action" ng-if="ROLES.SAD || ROLES.HAD || ROLES.HCL" ng-click="openAllocationForm(\'asset\', allocation)">\n                <md-tooltip>Edit</md-tooltip>\n                <i class="zmdi zmdi-edit zmdi-hc-2x special-blue"></i>\n            </md-button>\n            <md-button class="md-icon-button md-warn" ng-if="ROLES.SAD || ROLES.HAD || ROLES.HCL" ng-click="discardCallback(allocation)">\n                <md-tooltip>Discharge</md-tooltip>\n                <i class="zmdi zmdi-delete zmdi-hc-2x red"></i>\n            </md-button>\n            <!--hidden btn because last button always gets hovered by default-->\n            <md-button ng-hide="true"></md-button>\n        </div>\n    </md-dialog-actions>\n</md-dialog>'),e.put("js/dashboard/view/patient.html","TBI"),e.put("js/dictionary/directives/assetFilter.html",'<div class="filter-area dictionary md-whiteframe-6dp" layout="column" layout-fill>\n    <div layout="row">\n        <span class="searchLabel">FILTER</span>\n        <span flex></span>\n        <md-button class="filter-button reset" ng-click="resetFilters()">\n            Reset\n        </md-button>\n        <md-button class="filter-button" ng-click="applyFilters()">\n            Apply\n        </md-button>\n    </div>\n    <div class="filters" layout="row" layout-wrap>\n        <md-input-container flex="auto" ng-if="ROLES.SAD">\n            <label>by Hospital</label>\n            <md-select ng-model="filter.hospital">\n                <md-option disabled ng-if="filters.hospitals.length == 0">No items available</md-option>\n                <md-option ng-repeat="hospital in filters.hospitals" value="{{hospital.id}}">\n                    {{hospital.name}}\n                </md-option>\n            </md-select>\n        </md-input-container>\n\n        <md-input-container flex="auto">\n            <label>by Default Status</label>\n            <md-select ng-model="filter.status">\n                <md-option disabled ng-if="filters.statuses.length == 0">No items available</md-option>\n                <md-option ng-repeat="defaultStatus in filters.statuses" value="{{defaultStatus}}">\n                    {{defaultStatus}}\n                </md-option>\n            </md-select>\n        </md-input-container>\n\n    </div>\n</div>'),e.put("js/dictionary/directives/assets-search-form.html",'<div class="md-whiteframe-6dp free-search-form free-text-search-form dictionary-search-padding" layout="column" layout-fill>\n    <div layout="row">\n        <span class="searchLabelColor" layout-margin>SEARCH</span>\n        <span flex></span>\n        <md-button class="filter-button reset" ng-click="resetSearch()">\n            Reset\n        </md-button>\n        <md-button class="filter-button" ng-click="search(search.text)">\n            Apply\n        </md-button>\n    </div>\n\n    <div class="input" layout-margin>\n        <md-input-container layout="row" class="searchBarWidth" md-no-float>\n            <i class="zmdi zmdi-search zmdi-hc-2x"></i>\n            <input name="text" ng-model="search.text" placeholder="Search..."/>\n        </md-input-container>\n    </div>\n\n</div>'),e.put("js/dictionary/directives/dictionary-search-form.html",'<div class="md-whiteframe-6dp free-search-form free-text-search-form dictionary-search-padding" layout="column" layout-fill>\n    <div layout="row">\n        <span class="searchLabelColor" layout-margin>SEARCH</span>\n        <span flex></span>\n        <md-button class="filter-button reset" ng-click="resetSearch()">\n            Reset\n        </md-button>\n        <md-button class="filter-button" ng-click="search(search.text)">\n            Apply\n        </md-button>\n    </div>\n\n    <div class="input" layout-margin>\n        <md-input-container md-no-float layout="row" class="searchBarWidth">\n            <i class="zmdi zmdi-search zmdi-hc-2x"></i>\n            <input name="text" ng-model="search.text" placeholder="Search..."/>\n        </md-input-container>\n    </div>\n\n</div>'),e.put("js/dictionary/directives/dictionaryFilter.html",'<div class="filter-area dictionary md-whiteframe-6dp" layout="column" layout-fill>\n    <div layout="row">\n        <span class="searchLabel">FILTER</span>\n        <span flex></span>\n        <md-button class="filter-button reset" ng-click="resetFilters()">\n            Reset\n        </md-button>\n        <md-button class="filter-button" ng-click="applyFilters()">\n            Apply\n        </md-button>\n    </div>\n    <div class="filters" layout="row" layout-wrap>\n        <md-input-container flex="auto">\n            <label>by Component</label>\n            <md-select ng-model="filter.room" multiple="true">\n                <md-option disabled ng-if="filters.components.length == 0">No items available</md-option>\n                <md-option ng-repeat="component in filters.components" value="{{component.value}}">\n                    {{component.name}}\n                </md-option>\n            </md-select>\n        </md-input-container>\n\n    </div>\n</div>')}]),String.prototype.capitalizeFirstLetter=function(){return this.charAt(0).toUpperCase()+this.slice(1).toLowerCase()};var allCountries=[["United States","us","1",0],["Afghanistan (‫افغانستان‬‎)","af","93"],["Albania (Shqipëri)","al","355"],["Algeria (‫الجزائر‬‎)","dz","213"],["American Samoa","as","1684"],["Andorra","ad","376"],["Angola","ao","244"],["Anguilla","ai","1264"],["Antigua and Barbuda","ag","1268"],["Argentina","ar","54"],["Armenia (Հայաստան)","am","374"],["Aruba","aw","297"],["Australia","au","61",0],["Austria (Österreich)","at","43"],["Azerbaijan (Azərbaycan)","az","994"],["Bahamas","bs","1242"],["Bahrain (‫البحرين‬‎)","bh","973"],["Bangladesh (বাংলাদেশ)","bd","880"],["Barbados","bb","1246"],["Belarus (Беларусь)","by","375"],["Belgium (België)","be","32"],["Belize","bz","501"],["Benin (Bénin)","bj","229"],["Bermuda","bm","1441"],["Bhutan (འབྲུག)","bt","975"],["Bolivia","bo","591"],["Bosnia and Herzegovina (Босна и Херцеговина)","ba","387"],["Botswana","bw","267"],["Brazil (Brasil)","br","55"],["British Indian Ocean Territory","io","246"],["British Virgin Islands","vg","1284"],["Brunei","bn","673"],["Bulgaria (България)","bg","359"],["Burkina Faso","bf","226"],["Burundi (Uburundi)","bi","257"],["Cambodia (កម្ពុជា)","kh","855"],["Cameroon (Cameroun)","cm","237"],["Canada","ca","1",1,["204","226","236","249","250","289","306","343","365","387","403","416","418","431","437","438","450","506","514","519","548","579","581","587","604","613","639","647","672","705","709","742","778","780","782","807","819","825","867","873","902","905"]],["Cape Verde (Kabu Verdi)","cv","238"],["Caribbean Netherlands","bq","599",1],["Cayman Islands","ky","1345"],["Central African Republic (République centrafricaine)","cf","236"],["Chad (Tchad)","td","235"],["Chile","cl","56"],["China (中国)","cn","86"],["Christmas Island","cx","61",2],["Cocos (Keeling) Islands","cc","61",1],["Colombia","co","57"],["Comoros (‫جزر القمر‬‎)","km","269"],["Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)","cd","243"],["Congo (Republic) (Congo-Brazzaville)","cg","242"],["Cook Islands","ck","682"],["Costa Rica","cr","506"],["Côte d’Ivoire","ci","225"],["Croatia (Hrvatska)","hr","385"],["Cuba","cu","53"],["Curaçao","cw","599",0],["Cyprus (Κύπρος)","cy","357"],["Czech Republic (Česká republika)","cz","420"],["Denmark (Danmark)","dk","45"],["Djibouti","dj","253"],["Dominica","dm","1767"],["Dominican Republic (República Dominicana)","do","1",2,["809","829","849"]],["Ecuador","ec","593"],["Egypt (‫مصر‬‎)","eg","20"],["El Salvador","sv","503"],["Equatorial Guinea (Guinea Ecuatorial)","gq","240"],["Eritrea","er","291"],["Estonia (Eesti)","ee","372"],["Ethiopia","et","251"],["Falkland Islands (Islas Malvinas)","fk","500"],["Faroe Islands (Føroyar)","fo","298"],["Fiji","fj","679"],["Finland (Suomi)","fi","358",0],["France","fr","33"],["French Guiana (Guyane française)","gf","594"],["French Polynesia (Polynésie française)","pf","689"],["Gabon","ga","241"],["Gambia","gm","220"],["Georgia (საქართველო)","ge","995"],["Germany (Deutschland)","de","49"],["Ghana (Gaana)","gh","233"],["Gibraltar","gi","350"],["Greece (Ελλάδα)","gr","30"],["Greenland (Kalaallit Nunaat)","gl","299"],["Grenada","gd","1473"],["Guadeloupe","gp","590",0],["Guam","gu","1671"],["Guatemala","gt","502"],["Guernsey","gg","44",1],["Guinea (Guinée)","gn","224"],["Guinea-Bissau (Guiné Bissau)","gw","245"],["Guyana","gy","592"],["Haiti","ht","509"],["Honduras","hn","504"],["Hong Kong (香港)","hk","852"],["Hungary (Magyarország)","hu","36"],["Iceland (Ísland)","is","354"],["India (भारत)","in","91"],["Indonesia","id","62"],["Iran (‫ایران‬‎)","ir","98"],["Iraq (‫العراق‬‎)","iq","964"],["Ireland","ie","353"],["Isle of Man","im","44",2],["Israel (‫ישראל‬‎)","il","972"],["Italy (Italia)","it","39",0],["Jamaica","jm","1876"],["Japan (日本)","jp","81"],["Jersey","je","44",3],["Jordan (‫الأردن‬‎)","jo","962"],["Kazakhstan (Казахстан)","kz","7",1],["Kenya","ke","254"],["Kiribati","ki","686"],["Kosovo","xk","383"],["Kuwait (‫الكويت‬‎)","kw","965"],["Kyrgyzstan (Кыргызстан)","kg","996"],["Laos (ລາວ)","la","856"],["Latvia (Latvija)","lv","371"],["Lebanon (‫لبنان‬‎)","lb","961"],["Lesotho","ls","266"],["Liberia","lr","231"],["Libya (‫ليبيا‬‎)","ly","218"],["Liechtenstein","li","423"],["Lithuania (Lietuva)","lt","370"],["Luxembourg","lu","352"],["Macau (澳門)","mo","853"],["Macedonia (FYROM) (Македонија)","mk","389"],["Madagascar (Madagasikara)","mg","261"],["Malawi","mw","265"],["Malaysia","my","60"],["Maldives","mv","960"],["Mali","ml","223"],["Malta","mt","356"],["Marshall Islands","mh","692"],["Martinique","mq","596"],["Mauritania (‫موريتانيا‬‎)","mr","222"],["Mauritius (Moris)","mu","230"],["Mayotte","yt","262",1],["Mexico (México)","mx","52"],["Micronesia","fm","691"],["Moldova (Republica Moldova)","md","373"],["Monaco","mc","377"],["Mongolia (Монгол)","mn","976"],["Montenegro (Crna Gora)","me","382"],["Montserrat","ms","1664"],["Morocco (‫المغرب‬‎)","ma","212",0],["Mozambique (Moçambique)","mz","258"],["Myanmar (Burma) (မြန်မာ)","mm","95"],["Namibia (Namibië)","na","264"],["Nauru","nr","674"],["Nepal (नेपाल)","np","977"],["Netherlands (Nederland)","nl","31"],["New Caledonia (Nouvelle-Calédonie)","nc","687"],["New Zealand","nz","64"],["Nicaragua","ni","505"],["Niger (Nijar)","ne","227"],["Nigeria","ng","234"],["Niue","nu","683"],["Norfolk Island","nf","672"],["North Korea (조선 민주주의 인민 공화국)","kp","850"],["Northern Mariana Islands","mp","1670"],["Norway (Norge)","no","47",0],["Oman (‫عُمان‬‎)","om","968"],["Pakistan (‫پاکستان‬‎)","pk","92"],["Palau","pw","680"],["Palestine (‫فلسطين‬‎)","ps","970"],["Panama (Panamá)","pa","507"],["Papua New Guinea","pg","675"],["Paraguay","py","595"],["Peru (Perú)","pe","51"],["Philippines","ph","63"],["Poland (Polska)","pl","48"],["Portugal","pt","351"],["Puerto Rico","pr","1",3,["787","939"]],["Qatar (‫قطر‬‎)","qa","974"],["Réunion (La Réunion)","re","262",0],["Romania (România)","ro","40"],["Russia (Россия)","ru","7",0],["Rwanda","rw","250"],["Saint Barthélemy","bl","590",1],["Saint Helena","sh","290"],["Saint Kitts and Nevis","kn","1869"],["Saint Lucia","lc","1758"],["Saint Martin (Saint-Martin (partie française))","mf","590",2],["Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)","pm","508"],["Saint Vincent and the Grenadines","vc","1784"],["Samoa","ws","685"],["San Marino","sm","378"],["São Tomé and Príncipe (São Tomé e Príncipe)","st","239"],["Saudi Arabia (‫المملكة العربية السعودية‬‎)","sa","966"],["Senegal (Sénégal)","sn","221"],["Serbia (Србија)","rs","381"],["Seychelles","sc","248"],["Sierra Leone","sl","232"],["Singapore","sg","65"],["Sint Maarten","sx","1721"],["Slovakia (Slovensko)","sk","421"],["Slovenia (Slovenija)","si","386"],["Solomon Islands","sb","677"],["Somalia (Soomaaliya)","so","252"],["South Africa","za","27"],["South Korea (대한민국)","kr","82"],["South Sudan (‫جنوب السودان‬‎)","ss","211"],["Spain (España)","es","34"],["Sri Lanka (ශ්‍රී ලංකාව)","lk","94"],["Sudan (‫السودان‬‎)","sd","249"],["Suriname","sr","597"],["Svalbard and Jan Mayen","sj","47",1],["Swaziland","sz","268"],["Sweden (Sverige)","se","46"],["Switzerland (Schweiz)","ch","41"],["Syria (‫سوريا‬‎)","sy","963"],["Taiwan (台灣)","tw","886"],["Tajikistan","tj","992"],["Tanzania","tz","255"],["Thailand (ไทย)","th","66"],["Timor-Leste","tl","670"],["Togo","tg","228"],["Tokelau","tk","690"],["Tonga","to","676"],["Trinidad and Tobago","tt","1868"],["Tunisia (‫تونس‬‎)","tn","216"],["Turkey (Türkiye)","tr","90"],["Turkmenistan","tm","993"],["Turks and Caicos Islands","tc","1649"],["Tuvalu","tv","688"],["U.S. Virgin Islands","vi","1340"],["Uganda","ug","256"],["Ukraine (Україна)","ua","380"],["United Arab Emirates (‫الإمارات العربية المتحدة‬‎)","ae","971"],["United Kingdom","gb","44",0],["Uruguay","uy","598"],["Uzbekistan (Oʻzbekiston)","uz","998"],["Vanuatu","vu","678"],["Vatican City (Città del Vaticano)","va","39",1],["Venezuela","ve","58"],["Vietnam (Việt Nam)","vn","84"],["Wallis and Futuna (Wallis-et-Futuna)","wf","681"],["Western Sahara (‫الصحراء الغربية‬‎)","eh","212",1],["Yemen (‫اليمن‬‎)","ye","967"],["Zambia","zm","260"],["Zimbabwe","zw","263"],["Åland Islands","ax","358",1]];angular.module("ilWebClient").service("BeaconService",["Restangular","$http","API_URL",function(e,n,t){var o=this;o.service=e.service("beacon/"),this.getCount=function(){return this.service.one().customGET("count")},this.available=function(){return this.service.one().customGET("available")},this.availableCount=function(){return this.service.one().customGET("available/count")},this.start=function(e,n){return o.service.one().customGET(e.id+"/fingerprint/start/"+n)},this.stop=function(e){return o.service.one().customGET(e.id+"/fingerprint/stop/")},this.loadByScannedData=function(e,n,t){var a=[e,n,t];return o.service.one().customGET(a.join("/"))},this.loadIbeaconByScannedData=function(e){var n=[e];return o.service.one().customGET("ibeacon/"+n.join("/"))},this.loadNearableByScannedData=function(e){var n=[e];return o.service.one().customGET("nearable/"+n.join("/"))},this.loadBeaconUUID=function(e){return o.service.one().customGET("uuid/"+e)},this.loadByIdHTTP=function(e){return n({method:"GET",url:t+"/beacon/"+e})}}]),angular.module("ilWebClient").controller("BeaconController",["$scope","CrudFactory","UserService","$mdDialog","BeaconService","Restangular","NotificationService","UtilService",function(e,n,t,o,a,i,r,l){function s(e,n){return d("start",e,n)}function c(e){return d("stop",e)}function d(n,t,o){return a[n](t,o).then(function(t){switch(n){case"start":r.show("Fingerprinting started","success");break;case"stop":r.show("Fingerprinting stopped","success")}e.$broadcast("crud.updated.beacon",t)},function(e){l.showErrorNotification(e,"Error! Please try again later")})}function u(e){var t={},a=new n.CrudRest("room");o.show({templateUrl:"js/beacon/room-selection.html",controller:"RoomIntermediaryController",parent:angular.element(document.body),locals:{model:i.copy(t),restService:a},bindToController:!0,escapeToClose:!1,clickOutsideToClose:!0,fullscreen:!0}).then(function(n){s(e,n.roomId)},function(){})}function m(){var t=new n.CrudRest("beacon/status");t.list().then(function(n){n.forEach(function(n){e.filterConfig.status.values.push({name:n,value:n})})})}function p(e,n,t,o){switch(n){case"delete":g(e,t,o);break;case"create":t(e);break;case"edit":f(e,t,o);break;default:t(e)}}function f(e,n,t){a.loadByIdHTTP(e.id).then(function(e){n(i.restangularizeElement(null,e.data,"beacon"))})["catch"](function(e){t(e)})}function g(e,n,t){"ALLOCATED"===e.status||"UNDETECTED"===e.status?t("Only available beacons can be removed"):n([e,"beacon",null])}function h(e){return"ALLOCATED"===e.status||"UNDETECTED"===e.status}e.ROLES=t.getRoles(),e.preActionHook=p,e.cannotDeleteItem=h,e.columns={name:{name:"Name",orderBy:"name",getTooltip:function(e,n){return e.allocationType?e.allocationType+": "+e.allocationName:e.gatewayName?"Gateway: "+e.gatewayName:""}},beaconType:{name:"Protocol",orderBy:"beaconType"},uuid:{name:"uuid",getValue:function(e,n){return[e.uuid,e.major,e.minor].filter(function(e){return e}).join("/")}},macAddr:{name:"MAC Address"},nearableUUID:{name:"Identifier"},status:{name:"status"},batteryLevel:{name:"Battery"},temperature:{name:"temp"}};var v=function(n){return n.fingerprinting||n.isFingerprinting||!e.ROLES.SAD},b=function(n){return!(n.fingerprinting||n.isFingerprinting)||!e.ROLES.SAD};e.actions=[{title:"Start fingerprinting",action:"start",icon:{"zmdi-play":!0},color:"green",callback:u,shouldBeHidden:v},{title:"Stop fingerprinting",action:"stop",icon:{"zmdi-stop":!0},color:"red",callback:c,shouldBeHidden:b}],e.filterConfig={status:{type:"select",column:"status",placeholder:"by Status",allowMultipleSelection:!0,values:[]}},m()}]),angular.module("ilWebClient").controller("RoomIntermediaryController",["$scope","$mdDialog","restService","CrudFactory","AutocompleteHelperService",function(e,n,t,o,a){function i(){var t={roomId:e.model.room.id};n.hide(t)}function r(){var n=new o.CrudRest("room");n.list({hasParents:!0}).then(function(n){e.rooms=n})}function l(n){var t=a.filter(e.searchText,e.rooms,"name");return a.querySearch(null,null,t)}e.close=n.cancel,e.proceed=i,e.model={},e.rooms=[],e.searchText="",e.querySearch=l,r()}]),angular.module("ilWebClient").factory("AutocompleteHelperService",["Restangular","$q","$timeout",function(e,n,t){function o(e,o,a){var i=n.defer();return t(function(){a&&i.resolve(a)},100),i.promise}function a(e,n,t){return n.filter(function(n){var o=e?e.toLowerCase():"",a=t?n[t]:n;return 0===a.toLowerCase().indexOf(o)})}var i={querySearch:o,filter:a};return i}]),angular.module("ilWebClient").factory("Focus",["$timeout","$window",function(e,n){return function(t){e(function(){var e=n.document.getElementById(t);e&&e.focus()})}}]),angular.module("ilWebClient").directive("forceSelect",[function(){return{require:"mdAutocomplete",restrict:"A",link:function(e,n,t,o){function a(){return n.find("input").eq(0)}var i=e.$watch(a,function(n){if(n.length){i();var t=n.controller("ngModel");n.on("blur",function(){!o.scope.selectedItem&&o.isRequired&&e.$applyAsync(t.$setValidity("required",!1))})}})}}}]),angular.module("ilWebClient").directive("hospitalTheme",["$compile","HospitalThemeService",function(e,n){return{restrict:"A",link:function(t,o,a){n.loadTheme().then(function(n){o.attr("ng-style","{'background-color': 'red'}"),e(o)(t)})["catch"](function(e){})}}}]),angular.module("ilWebClient").service("HospitalThemeService",["$http","$timeout","$q","API_URL","$window",function(e,n,t,o,a){function i(){var e=a.localStorage.getItem("theme");e&&(s=JSON.parse(e))}function r(){s=null,a.localStorage.removeItem("theme")}function l(){var i=t.defer();return s?(n(function(){i.resolve(s)},1),i.promise):(e.get(o+"/user/theme").then(function(e){s=e.data,a.localStorage.setItem("theme",JSON.stringify(s)),i.resolve(s)},function(e){i.reject(e)}),i.promise)}var s=null;return i(),{loadTheme:l,clearTheme:r}}]),angular.module("ilWebClient").directive("lowercaseInput",function(){return{require:"ngModel",link:function(e,n,t,o){o.$parsers.push(function(e){var n=e.toLowerCase().replace(/ /g,"");return n!=e&&(o.$setViewValue(n),o.$render()),n})}}}),angular.module("ilWebClient").directive("mdChips",function(){return{restrict:"E",require:"mdChips",link:function(e,n,t,o){o.onInputBlur=function(){this.inputHasFocus=!1;var e=this.getChipBuffer();""!=e&&(this.appendChip(e),this.resetChipBuffer())}}}}),angular.module("ilWebClient").directive("enterHandle",function(){function e(e,n){if(n.mdSearchText)return e[n.mdSearchText];var t=n.ngModel.split(".");return e[t[0]]&&e[t[0]][t[1]]?e[t[0]][t[1]]:""}return{link:function(n,t,o){t.bind("keydown",function(a){var i=e(n,o);if(n.model.beaconType&&"IBEACON"==n.model.beaconType&&13===a.which)n.$apply(function(){n.$eval(o.enterHandle)}),a.preventDefault();else if(-1!==i.indexOf("/"))n.model.beaconType="IBEACON";else if(189==a.which||9===a.which||13==a.which||32==a.which||16==a.which||10==a.which)a.preventDefault();else{i+=a.key;var r=i.toUpperCase().split("ID:");3==r.length&&32==r[2].length&&(t[0].value=r[1].substr(0,r[1].length-2)+":"+r[2],i="",n.$apply(function(){n.$eval(o.enterHandle)}))}})}}}),angular.module("ilWebClient").service("UtilService",["$mdDialog","Restangular","NotificationService",function(e,n,t){function o(n,t){var o=e.alert().title(n.title).htmlContent('<span class="modal-custom-body">'+n.body+"</span>").ariaLabel("Confirm").ok("OK");e.show(o).then(function(){"function"==typeof t&&t()})}function a(e){return n.one("room/").customGET(e.id+"/fingerprints")}function i(e){if(e="string"==typeof e?parseInt(e):"number"==typeof e?e:null,!e||isNaN(e))return"";var n=e.toString(16).split("").reverse();if(n.length<12)for(var t=0;t<12-n.length;t++)n.push("0");for(var t=1;t<n.length;t+=2){var o=n[t];n[t]=n[t-1],n[t-1]=o}return r(n,2,":")}function r(e,n,t){for(var o=[],a=0;a<e.length;a++)o.push(e[a].toUpperCase()),a%n!==0&&0!==a&&a!==e.length-1&&o.push(t);return o.join("")}function l(e,n){if(e.data&&e.data.webErrors)for(var o in e.data.webErrors)e.data.webErrors.hasOwnProperty(o)&&t.show(e.data.webErrors[o][0],"error");else t.show(n,"error")}function s(e){return 36==e.length?e:32!==e.length?"":e.slice(0,8)+"-"+e.slice(8,12)+"-"+e.slice(12,16)+"-"+e.slice(16,20)+"-"+e.slice(20,32)}function c(e){return e&&3==e.split("/").length?"IBEACON":!e||3!=e.split(":").length&&3!=e.split("+").length?null:"NEARABLE"}return{openAlertModal:o,loadRoomInfo:a,numToMAC:i,joinGroupsWithSeparator:r,showErrorNotification:l,stringToUUID:s,getBeaconTypeFromQRCode:c}}]),angular.module("ilWebClient").controller("EntityFormController",["$scope","formOptions","model","$mdDialog","restService","CrudFactory","NotificationService","UserService","AutocompleteHelperService","$timeout","MSG","FlowService","UtilService","Focus","BeaconService","newBeaconForm","$rootScope",function(e,n,t,o,a,i,r,l,s,c,d,u,m,p,f,g,h){function v(){if(e.model.macAddr&&3===e.model.macAddr.split("/").length){var n=e.model.macAddr.split("/");e.blockUUID=!0,f.loadBeaconUUID("EM_BEACON").then(function(n){e.model.uuid=n.uuid,e.model.name=n.name,e.blockUUID=!1,e.model.openNewBeaconForm&&T()})["catch"](function(){e.blockUUID=!1}),e.model.macAddr=m.numToMAC(e.model.macAddr),e.model.minor=n[1],e.model.major=n[2]}}function b(){var n=":",t=document.getElementById("uuidInput").value;if(t&&2===t.split(n).length){var o=t.split(n);e.blockUUID=!0;var a=m.stringToUUID(o[1]);e.model.nearableUUID=o[0],c(function(){e.model.uuid=a,y()},500)}}function y(){f.loadBeaconUUID("NEARABLE").then(function(n){e.model.name=n.name,e.blockUUID=!1,e.model.openNewBeaconForm&&(console.log(e.model.uuid),T())})["catch"](function(){e.blockUUID=!1})}function w(e){c(function(){p(e)},500)}function S(){0===e.model.questions.length?r.show("Please add at least one question.","error"):C(e.model.questions)?r.show("Please add at least one question.","error"):K(e.model.questions)?(e.model.questions=e.model.questions.concat(J),Y(e.model.questions),T()):r.show("Please make sure all questions have answer options or free text set.","error")}function C(e){var n=!0;return e.forEach(function(e){return e.isDeleted?void 0:n=!1}),n}function T(){e.validationErrors=null,H();var n=e.model.id?a.update.bind(a):a.create.bind(a);""===e.model.macAddr&&(e.model.macAddr=null),e.model.beaconType&&"ibeacon"===e.model.beaconType.toLowerCase()?(e.model.nearableUUID=null,e.model.uuid=m.stringToUUID(e.model.uuid)):e.model.beaconType&&"nearable"===e.model.beaconType.toLowerCase()&&(e.model.macAddr=null,e.model.uuid=m.stringToUUID(e.model.uuid)),n(e.model).then(function(n){J=[];var t=e.model.role?"User":"Item";e.model.id?r.show(t+" updated","success"):r.show(t+" created","success"),e.model.openNewBeaconForm?(e.model={openNewBeaconForm:!0,beaconType:e.model.beaconType},w("macAddrInput"),h.$broadcast("crud.reload.beacon")):o.hide(e.model)},function(n){n.data.webErrors||r.show("Error! Please try again","error"),J=[],e.validationErrors=n.data.webErrors})}function x(e){for(var n in e)if(e.hasOwnProperty(n)&&e[n])return!0;return!1}function E(e){l.requestPasswordReset(e.email).then(A)["catch"](k)}function A(e){r.show("Email sent successfully","success"),o.cancel()}function k(e){r.show("There was an error. Please try again","error")}function I(n,t,o){var a=s.filter(n,t,o);if(e.model.id)for(var i=0;i<a.length;i++)a[i].id&&a[i].id===e.model.id&&a.splice(i,1);return s.querySearch(null,null,a)}function N(){e.recreateSelect=!1,e.isEditMode&&(e.model.assetTypes=null,e.model.assetStatus=null,e.model.assetStatuses={},e.model.assetMappings.length&&e.model.assetMappings[0]&&(e.model.assetMappings[0].assetStatus&&(e.model.assetMappings[0].assetStatus.id=null),e.model.assetMappings[0].assetType&&(e.model.assetMappings[0].assetType.id=null))),c(function(){e.recreateSelect=!0},50)}function D(e,n){var t=[];n.forEach(function(e){t.push(e.status||e)});var o=s.filter(e,t);return s.querySearch(null,null,o)}function R(n){var t=s.filter(n,e.beaconProcessingTypes);return s.querySearch(null,null,t)}function P(){var n=new i.CrudRest("beacon/type");n.list().then(function(n){e.beaconTypes=n})}function O(){var n=new i.CrudRest("/dictionary/beaconProcessingType/");n.list().then(function(n){e.beaconProcessingTypes=n})}function $(e){var n=e.name;return e.parent&&e.parent.name&&(n+=" - "+e.parent.name),n}function U(n){n.selected?(n.selected=!1,e.model.color=null):(e.formOptions.colors.forEach(function(e){e.selected=!1}),n.selected=!0,e.model.color=n.hex)}function F(){e.isEditMode&&e.formOptions&&e.formOptions.colors&&e.formOptions.colors.forEach(function(n){e.model.color===n.hex&&(n.selected=!0);
})}function L(){return e.formOptions.colors?e.model.color&&e.model.color.length>0:!1}function M(){var n=new i.CrudRest("room"),t={hasNoParentAndNoChildOrHasChildAndNoParent:!0};e.model.hospital&&(t.hospital=e.model.hospital.id),n.list(t).then(function(n){e.roomsList=n.plain()})}function q(){e.model.questions=e.model.questions||[];var n={question:"",freeText:!1,answers:[]};e.isEditMode&&(delete n.answers,n.predefinedAnswers=[]),e.model.questions.push(n)}function B(e,n){var t=n.predefinedAnswers.length;n.predefinedAnswers[t-1]={text:e}}function z(n){e.model.questions[n].id&&(e.model.questions[n].isDeleted=!0,J.push(e.model.questions[n])),e.model.questions.splice(n,1)}function j(n,t){n.id&&(n.isDeleted=!0,e.deletedAnswers[t.id]||(e.deletedAnswers[t.id]=[]),e.deletedAnswers[t.id].push(n))}function H(){if(e.isEditMode&&"{}"!=JSON.stringify(e.deletedAnswers))for(var n=0;n<e.model.questions.length;n++)e.deletedAnswers[e.model.questions[n].id]&&(e.model.questions[n].predefinedAnswers=e.model.questions[n].predefinedAnswers.concat(e.deletedAnswers[e.model.questions[n].id]))}function _(n){var t=new i.CrudRest("room");t.list({hasChildren:!1,hospital:n}).then(function(n){e.formOptions.rooms=n},function(e){})}function W(n){var t=new i.CrudRest("beacon");t.list({type:"asset",status:"AVAILABLE",hospital:n}).then(function(n){e.formOptions.beacons=n})}function G(n){e.model.controlBeacon=null,e.searchTextBeacons=null,e.model.room=null,e.searchTextRoom=null,n&&(_(n),W(n))}function V(e,n,t){0>t||t>=e.length||e.splice(t,0,e.splice(n,1)[0])}function K(e){for(var n=0;n<e.length;n++)if(!e[n].isDeleted&&!e[n].freeText&&(e[n].predefinedAnswers&&0===e[n].predefinedAnswers.length||e[n].answers&&0===e[n].answers.length))return!1;return!0}function Y(e){for(var n=1,t=0;t<e.length;t++)delete e[t].index,e[t].isDeleted||(e[t].index=n,n+=1)}e.formOptions=n,e.model=t||{},e.close=o.cancel,e.save=T,e.saveSurvey=S,e.moveItem=V,e.resetSelect=N,e.resetUserPassword=E,e.isCheckboxAreaValid=x,e.validationErrors=null,e.disclaimer=d.FORM_UPDATE_DISCLAIMER,e.isEditMode=e.model.id?!0:!1,e.model.sendNotification=e.isEditMode?e.model.sendNotification:!0,e.model.checkInactivity=void 0!=e.model.checkInactivity?e.model.checkInactivity:!0,e.ROLES=l.getRoles(),e.PERMISSIONS=l.getHospitalPermissions(),e.hospitalIsNull=null==t.hospital,e.parentIsNull=null==t.parent,e.beaconTypes=[],e.beaconProcessingTypes=[],e.querySearch=I,e.statusSearch=D,e.processingTypeSearch=R,e.getFormattedArea=$,e.pickColor=U,e.isColorSet=L,e.addQuestion=q,e.addFormedChip=B,e.storeDeletedAnswer=j,e.deletedAnswers={},e.removeQuestion=z,e.recreateSelect=!0,e.roomsList=[],e.resetHospitalAssets=G,e.setBeaconInfo=v,e.setNearableInfo=b,e.focusInput=w,e.blockUUID=!1;var J=[];e.acordionIsActive=!1,e.savingEntity=!1,g&&(e.model.openNewBeaconForm=g),M(),F(),P(),O()}]),angular.module("ilWebClient").factory("CrudFactory",["Restangular","$http","API_URL",function(e,n,t){function o(n){this.resource=n,this.service=e.service(n+"/")}return this.service=null,o.prototype.get=function(e){return this.service.one().customGET("",e)},o.prototype.list=function(e){return this.service.getList(e)},o.prototype.getOne=function(e){return this.service.one().customGET(e.id)},o.prototype.create=function(e){return this.service.post(e)},o.prototype.update=function(e){return e.put()},o.prototype.createWithFile=function(e,o){return n({method:"POST",url:t+"/"+this.resource+"/",withCredentials:!1,headers:{"Content-Type":void 0},transformRequest:function(e){var n=new FormData;return n.append("model",angular.toJson(e.model)),e.file&&n.append("file",e.file),n},data:{model:e.plain&&"function"==typeof e.plain?e.plain():e,file:o}})},o.prototype.updateWithFile=function(e,o){return n({method:"PUT",url:t+"/"+this.resource+"/"+e.id,withCredentials:!1,headers:{"Content-Type":void 0},transformRequest:function(e){var n=new FormData;return n.append("model",angular.toJson(e.model)),e.file&&n.append("file",e.file),n},data:{model:e.plain&&"function"==typeof e.plain?e.plain():e,file:o}})},o.prototype.remove=function(e){return e.remove()},{CrudRest:o}}]),angular.module("ilWebClient").directive("crudList",["CrudFactory","$mdDialog","Restangular","NotificationService","UserService","$q","HospitalThemeService","$rootScope","$state",function(e,n,t,o,a,i,r,l,s){return{scope:{resource:"@",query:"=?query",columns:"=",buttons:"=",multiselect:"=",filterConfig:"=",createFormUrl:"@",uploadFormUrl:"@",uploadFormCtrl:"@",createFormBase:"@",createFormProperty:"@",canUploadFile:"=",formOptions:"=",actions:"=",customItemStyle:"=",preActionHook:"=",customFiltering:"=",getEndpoint:"=",forceGetObject:"=",cannotDeleteItemCb:"=",editController:"@",activeSelectionFilters:"=?",activeSearchFilters:"=?",editRoute:"="},restrict:"E",templateUrl:"js/crud/list.html",link:function(c,d,u){function m(){c.forceGetObject||h(),c.isServerRequestActive=!0;var e=1==c.forceGetObject?F.get(A()):F.list(A());e.then(function(e){c.forceGetObject?(c.totalCount=e.count,c.itemCollection=t.restangularizeCollection(null,e.values,c.resource)):c.itemCollection=e,!U||y(c.activeSelectionFilters)&&y(c.activeSearchFilters)||(c.noFilterResults=0==c.itemCollection.length),0==c.itemCollection.length?c.noResults=!c.noFilterResults:(U=!0,c.noResults=!1),c.isServerRequestActive=!1},function(){c.isServerRequestActive=!1,c.itemCollection&&(c.noResults=0==c.itemCollection.length)})}function p(e){c.itemCollection.forEach(function(n){f(n,e)}),c.allEntitiesSelected=e,x(),c.$emit("crud.toggledItems."+c.resource,g())}function f(e,n){e.isChecked=n}function g(){var e=[];return c.itemCollection.forEach(function(n){n.isChecked&&e.push(n.id)}),e}function h(){var n=new e.CrudRest(c.resource+"/count");n.get(A()).then(function(e){c.totalCount=e})["catch"](function(e){c.totalCount=0})}function v(e,n){c.query.page=e,c.query.limit=n,p(!1),m()}function b(e){c.query.order=e,c.query.page=1,m()}function y(e){for(var n in e)if(e.hasOwnProperty(n))return!1;return!0}function w(e){return e.charAt(0).toUpperCase()+e.slice(1)}function S(){c.activeSelectionFilters={},c.allEntitiesSelected=!1,x(),y(c.activeSelectionFilters)&&y(c.activeSearchFilters)&&(c.noFilterResults=!1),m()}function C(){c.customFiltering&&(c.activeSelectionFilters=c.customFiltering(c.activeSelectionFilters)),c.query.page=1,m()}function T(){c.search.text="",c.allEntitiesSelected=!1,x(),c.activeSearchFilters={},y(c.activeSelectionFilters)&&y(c.activeSearchFilters)&&(c.noFilterResults=!1),m()}function x(){c.showCheckbox=!1,setTimeout(function(){c.showCheckbox=!0,c.$apply()},1)}function E(e){c.activeSearchFilters.name=e,c.query.page=1,m()}function A(){var e=angular.extend({},c.query,c.activeSearchFilters,c.activeSelectionFilters);for(var n in e)e.hasOwnProperty(n)&&e[n].length&&(e[n]=e[n].toString());return e}function k(e,n){return i(function(t,o){"function"==typeof c.preActionHook?c.preActionHook(e,n,t,o):t(e)})}function I(e){k(e,"delete").then(function(e){e&&e.length?D.apply(this,e):D(e)})["catch"](function(e){e&&"string"==typeof e&&N(e)})}function N(e){var t=n.alert().title("Action unavailable").htmlContent('<span class="modal-custom-body">'+e+"</span>").ok("OK");n.show(t)}function D(e,t,a){a=a||"The resource will not be accessible anymore",t=t||"item";var i=n.confirm().title("Are you sure you want to remove this "+t+"?").htmlContent('<span class="modal-custom-body">'+a+"</span>").ariaLabel("Delete item").ok("Yes").cancel("No");n.show(i).then(function(){c.isServerRequestActive=!0,F.remove(e).then(function(){o.show(w(t)+" removed","success"),c.isServerRequestActive=!1,m(),c.$emit("crud.deleted."+c.resource)},function(e){if(o.show("Error! Please try again","error"),c.isServerRequestActive=!1,400===e.status)if(Object.keys(e.data.webErrors).length>0){for(var n in e.data.webErrors)if(e.data.webErrors.hasOwnProperty(n)){N(e.data.webErrors[n][0]);break}}else N("You cannot delete this item")})})}function R(e){var n=e.id?"edit":"create";k(e,n).then(function(e){O(e)})["catch"](function(e){N(e)})}function P(e){c.editRoute?s.go(c.editRoute,{floor:e.id}):R(e)}function O(e,o){c.$emit("crud.dialog.open."+c.resource,e),e=e||{},n.show({templateUrl:c.createFormUrl,controller:c.editController||"EntityFormController",parent:angular.element(document.body),scope:c.editController?c.$new():l.$new(),locals:{model:t.copy(e),formOptions:c.formOptions,restService:F,newBeaconForm:o||!1},bindToController:!0,escapeToClose:!1,fullscreen:!0}).then(function(n){m();var t=!1;n.openNewBeaconForm&&(delete n.openNewBeaconForm,t=!0);var o=n.id?"updated":"created";c.$emit("crud."+o+"."+c.resource,n),c.$emit("crud.dialog.close."+c.resource,e),t&&O(null,!0)},function(){c.$emit("crud.dialog.close."+c.resource,e)})}function $(){n.show({templateUrl:c.uploadFormUrl,controller:c.uploadFormCtrl,parent:angular.element(document.body),locals:{resource:c.resource},bindToController:!0,escapeToClose:!1,fullscreen:!0}).then(function(e){e.needsRefresh&&m()},function(){m()})}c.openEntityDialog=R,c.editEntity=P,c.uploadFileDialog=$,c.remove=D,c.onDelete=I,c.search=E,c.search.text="",c.resetSearch=T,c.applyFilters=C,c.resetFilters=S,c.toggleSelectAll=p,c.allEntitiesSelected=!1,c.showCheckbox=!0,c.totalCount=0,c.onPaginate=v,c.onReorder=b,c.theme=null,c.isServerRequestActive=!1,c.activeSearchFilters={},c.activeSelectionFilters={},c.noResults=!1,c.existingFilter={},c.existingSearch={},c.ROLES=a.getRoles(),c.PERMISSIONS=a.getHospitalPermissions();var U=!1;c.noFilterResults=!1;var F=new e.CrudRest(c.resource);void 0==c.query&&(c.query={order:"",limit:15,page:1}),c.cannotDeleteItem=function(e){return c.cannotDeleteItemCb&&"function"==typeof c.cannotDeleteItemCb?c.cannotDeleteItemCb(e):!1},r.loadTheme().then(function(e){c.theme=e})["catch"](function(e){}),c.$on("$stateChangeStart",function(e,t,o,a,i){n.cancel()}),m(),c.$on("crud.updated."+c.resource,function(e,n){c.itemCollection=c.itemCollection||[];var t=c.itemCollection.map(function(e){return e.id}).indexOf(n.id);-1!==t?c.itemCollection[t]=n:m()}),c.$on("gateway.update",function(e,n){c.itemCollection=c.itemCollection||[];var t=c.itemCollection.map(function(e){return e.id}).indexOf(n.id);-1!==t?c.itemCollection[t]=n:(c.query.limit>c.itemCollection.length&&c.itemCollection.push(n),h())}),c.$on("gateway.remove",function(e,n){if(n&&n.id){var t=c.itemCollection.map(function(e){return e.id}).indexOf(n.id);-1!==t&&(c.itemCollection.splice(t,1),h())}}),c.$on("crud.reload."+c.resource,function(e,n){m()}),c.$on("crud.deleted."+c.resource,function(e,n){n&&n.id&&m()}),c.onFiltersApplied=function(e){c.activeSearchFilters.name=e.search,c.activeSelectionFilters=e.filters,c.customFiltering&&(c.activeSelectionFilters=c.customFiltering(c.activeSelectionFilters)),c.query.page=1,m()}}}}]),angular.module("ilWebClient").service("CrudService",["Restangular",function(e){this.service=null;var n=this;this.setEndPoint=function(t){return n.service=e.service(t+"/"),n.service},this.list=function(e){return n.service.getList(e)},this.create=function(e){return n.service.post(e)},this.update=function(e){return e.put()},this.remove=function(e){return e.remove()}}]),angular.module("ilWebClient").service("BeaconAllocationService",["Restangular",function(e){this.service=e.service("beacon-allocation"),this.deallocate=function(e){return e.customGET("deallocate")},this.getAllocation=function(e){return this.service.one().customGET(e.allocationId||e.id)},this.refreshAllocation=function(e){return this.service.one().customGET((e.allocationId||e.id)+"/track")},this.getAllocationMap=function(e){return this.service.one().customGET((e.allocationId||e.id)+"/map/feature",{roomName:e.location.room})}}]),function(){function e(e,n,t,o,a,i,r,l,s,c,d,u,m,p){function f(t){var i="main.dashboard.assets"===n.current.name?"asset":"patient";o.show({templateUrl:"js/dashboard/create/"+i+".html",parent:angular.element(document.body),controller:i.capitalizeFirstLetter()+"FormController",locals:{model:t||{},beacons:a.available()},bindToController:!0,escapeToClose:!1,fullscreen:!0,clickOutsideToClose:!0}).then(function(n){e.page=1,e.filter.page=1,e.allocations=[],updateAllocationList(),b()},function(){b()})}function g(){l.isConnected()?("asset"===e.type?l.registerWatcher(d.ALLOCATION_ASSETS,e.allocationUpdateObject):"patient"===e.type&&l.registerWatcher(d.ALLOCATION_PATIENTS,e.allocationUpdateObject),l.registerWatcher(d.ALLOCATION_COUNT,e.allocationCountUpdateObject)):setTimeout(g,1e3)}function h(e){w.availableCount=parseInt(e)}function v(n){n=n||{},console.log("Allocation update received"),void 0==n.length&&n.allocationId&&("PATIENT"==e.type.toUpperCase(),e.noAssets=0===e.allocations.length)}function b(){a.available().then(function(n){e.beacons=n,w.availableCount=n.length,a.getCount().then(function(e){w.usedCount=e})})}function y(n){e.beacons.push(n)}var w=this;w.filters=[],w.availableCount=0,w.usedCount=0,w.useCardView=!0,w.PERMISSIONS=c.getHospitalPermissions(),w.tabs=[],w.PERMISSIONS.atrak&&w.tabs.push({label:"Assets",route:"main.dashboard.assets"}),w.PERMISSIONS.ptrak&&w.tabs.push({label:"Patients",route:"main.dashboard.patients"}),w.gridTableToggle=function(e){w.useCardView=e},w.onFiltersApplied=function(e){w.currentFilter={page:1,limit:30,type:"main.dashboard.assets"===n.current.name?"asset":"patient",status:e.status,room:e.room,doctor:e.doctor,assetTypeId:e.type[0]?""+e.type[0]:void 0,searchContent:e.searchContent}},w.openAllocationForm=function(e,n){n?r.getAllocation(n).then(function(e){y(e.beacon),f(e)},function(e){b()}):f(n)},t.onSuccess({to:"main.dashboard.*"},function(e){var n=e.router.stateService;w.filters=[],w.currentFilter={page:1,limit:30,type:"main.dashboard.assets"===n.current.name?"asset":"patient"},p.getFiltersForState(n.current.name).then(function(e){w.filters=e})["catch"](function(){console.log("State not supported for filters: "+n.current.name)})}),e.beacons=[],e.noAssets=!1,e.allocations=[],e.page=1,e.limit=30,e.filter={page:e.page,limit:e.limit},e.filterAssetTypeName=null,e.query={},e.ROLES=c.getRoles(),e.hadAllocationResults=!1,e.allocationUpdateObject={source:"DashboardController",callback:v,runSequential:!0},e.allocationCountUpdateObject={source:"DashboardController",callback:h},e.isSearchSectionOpen=!1;e.filterIsApplied=!1,b(),g(),e.$on("$stateChangeStart",function(e,n,t,a,i,r){l.unregisterWatcher(d.ALLOCATION_ASSETS,"DashboardController"),l.unregisterWatcher(d.ALLOCATION_COUNT,"DashboardController"),o.cancel()})}e.$inject=["$scope","$state","$transitions","$mdDialog","BeaconService","CrudFactory","BeaconAllocationService","SocketService","NotificationService","UserService","SOCKET_TOPICS","HospitalThemeService","$filter","FilterRetrievalService"],angular.module("ilWebClient").config(["$stateProvider","ROLES",function(e,n){e.state("main.dashboard",{url:"/dasboard",authenticate:!0,acceptedRoles:[n.SAD,n.HAD,n.HCL,n.PER,n.GPER],views:{"content@main":{templateUrl:"js/dashboard/dashboard.html",controller:"DashboardController",controllerAs:"dashboard"}}})}]).controller("DashboardController",e)}(),angular.module("ilWebClient").controller("AssetTypeEntityFormController",["$scope","Restangular","$timeout",function(e,n,t){function o(){var n=e.model.id?"updated":"created",t=[],o=e.model.defaultStatus;if("created"==n)for(var a=0;a<e.model.assetStatuses.length;a++)e.model.assetStatuses[a].status==o.status?(e.model.assetStatuses[a].isDefault=!0,t.push(e.model.assetStatuses[a])):(e.model.assetStatuses[a].isDefault=!1,t.push(e.model.assetStatuses[a]));else if("updated"==n)for(var a=0;a<e.model.assetStatuses.length;a++)e.model.assetStatuses[a].status==o.status?(e.model.assetStatuses[a].isDefault=!0,t.push(e.model.assetStatuses[a])):(e.model.assetStatuses[a].isDefault=!1,t.push(e.model.assetStatuses[a]));e.model.assetStatuses=t,e.model.assetType=e.model.assetTypes,e.save()}function a(e){return{id:null,status:e,implicit:!1}}function i(){return"LOCATION"===e.model.beaconProcessingType}function r(){"LOCATION"==e.model.beaconProcessingType?l():e.model.assetStatuses=[]}function l(){n.allUrl("statuses","api/dictionary/asset/type/locate/default").getList({assetTypeId:e.model.id,useAccelerometer:e.model.useAccelerometer}).then(function(n){e.model.assetStatuses=n,e.model.defaultStatus=null})}function s(){l()}function c(e){e.implicit?console.log("do not delete"):d(e)}function d(n){console.log(e.model.defaultStatus.status,n,status),e.model.defaultStatus.status===(n.status||n)&&(e.showDefaultStatus=!1,e.searchTextStatus=null,e.model.defaultStatus=null,t(function(){e.showDefaultStatus=!0},1))}e.isLocationTypeAsset=i,e.onSelectProcessingType=r,e.onSelectAccelerometer=s,e.onDeleteStatus=c,e.addNewAssetStatus=a,e.saveAssetType=o,null==e.model.id&&(e.model.useAccelerometer=!0)}]),angular.module("ilWebClient").controller("DictionaryController",["$scope","CrudFactory","UserService",function(e,n,t){function o(){var t=new n.CrudRest("dictionary/asset/type/status/default");t.list().then(function(n){for(var t=[],o=0;o<n.length;o++)t.push({name:n[o],value:n[o]});e.assetFilterConfig&&e.assetFilterConfig.defaultStatus&&(e.assetFilterConfig.defaultStatus.values=t)})}function a(e,n,t,o){switch(n){case"delete":t(e);break;case"create":t(e);break;default:t(e)}}function i(e,n,t,o){switch(n){case"delete":t(e);break;case"create":t(e);break;default:t(e)}}function r(e,n,t,o){switch(n){case"delete":t(e);break;case"create":t(e);break;default:t(e)}}function l(e,n,t,o){switch(n){case"delete":t(e);break;case"create":t(e);break;default:t(e)}}function s(e){return e.component&&e.component.forEach(function(n){e[n]=!0}),e}e.ROLES=t.getRoles(),e.PERMISSIONS=t.getHospitalPermissions(),e.preActionHookAssetType=l,e.preActionHookSurgeryType=a,e.preActionHookMedSpec=i,e.preActionHookPosition=r,e.componentFilter=s,e.assetColumns={name:{name:"Asset Type"},defaultStatus:{name:"Default Status",displayProperty:"status"},beaconProcessingType:{name:"Processing type"}},e.surgeryTypeColumns={name:{name:"Procedure Type"}},e.medSpecColumns={name:{name:"Medical Specialisation"}},e.positionColumns={name:{name:"Position"}},e.hospitalColumns={name:{name:"Hospital"},componentsNames:{name:"Components"},tenantId:{name:"URL"}},e.assetFormOptions={showUpdateConfirmModal:!0,assetStatuses:[]},e.assetFilterConfig=null,e.$on("crud.updated.dictionary/asset/type",function(){o(),e.$broadcast("crud.filter.updateStatuses")}),e.$on("crud.deleted.dictionary/asset/type",function(){o(),e.$broadcast("crud.filter.updateStatuses")}),e.$on("crud.created.dictionary/asset/type",function(){o(),e.$broadcast("crud.filter.updateStatuses")})}]),angular.module("ilWebClient").controller("UploadController",["$scope","NotificationService","Upload","API_URL","$mdDialog","resource","MSG",function(e,n,t,o,a,i,r){function l(){e.form.file.$valid&&e.file&&c(e.file)}function s(e){e?a.hide({needsRefresh:!0}):a.cancel()}function c(n){e.uploadInProgress=!0,e.finishedUpload=!1,t.upload({url:o+"/"+i+"/upload",data:{file:n}}).then(d,u,m)}function d(n){e.stats.correctEntries=n.data.importedEntity,e.stats.incorrectEntries=n.data.unimportedEntity,e.uploadInProgress=!1,e.finishedUpload=!0}function u(n){400===n.status?(e.stats.errors=n.data.errors,e.stats.correctEntries=n.data.importedEntity,e.stats.incorrectEntries=n.data.unimportedEntity):e.stats.errors=[r.DEFAULT_FILE_UPLOAD_ERR],e.uploadInProgress=!1,e.finishedUpload=!0}function m(n){e.progressPercentage=parseInt(100*n.loaded/n.total)}function p(){e.uploadInProgress=!1,e.finishedUpload=!1,e.file=null,e.stats={correctEntries:"",incorrectEntries:"",errors:[]}}e.backToFileSelection=p,e.close=s,e.submit=l,e.uploadInProgress=!1,e.finishedUpload=!1,e.progressPercentage=0,e.stats={correctEntries:"",incorrectEntries:"",errors:[]}}]),angular.module("ilWebClient").controller("FloorEditController",["$scope","$state","$stateParams","CrudFactory","UserService","UtilService","NotificationService","WizardHandler","FloorService","FEATURE_TYPES","Upload",function(e,n,t,o,a,i,r,l,s,c,d){function u(){console.log("CLOSING...."),n.go("main.floor")}function m(){g(),h(),v(),C(),e.scaleOptions=e.model.mapMetadata,e.isEditMode=!0}function p(){g(),h(),v(),e.model={},e.isEditMode=!1}function f(n){s.getFloor(n).then(function(n){e.model=n,e.model.mapMetadata=e.model.mapMetadata||{},m()},function(e){reject(e.data.webErrors.Floor[0])})}function g(){s.getAvailableRooms().then(function(n){e.formOptions.rooms=n})}function h(){var n=new o.CrudRest("map/unit");n.list().then(function(n){e.formOptions.units=n})}function v(){var n=new o.CrudRest("map/feature/type/");n.list().then(function(n){e.formOptions.featureTypes=n})}function b(){e.knownScale=!1,y()}function y(){e.media.files[0]?d.base64DataUrl(e.media.files[0]).then(function(n){d.imageDimensions(e.media.files[0]).then(function(t){e.scaleOptions={mapImageUrl:n,height:t.height,width:t.width},e.showScaleMap=!0})}):(e.scaleOptions=e.model.mapMetadata,e.showScaleMap=!0)}function w(){e.showScaleMap=!1,e.knownScale=!0}function S(n,t){e.showRoomMap=!0,w(),e.roomMapOptions=n?n:e.model.mapMetadata,e.floorFeatures=t&&t.length?t.map(function(e){return JSON.parse(e)}):[]}function C(){if(e.model.mapMetadata&&e.model.mapMetadata.scale){var n=e.model.mapMetadata.scale.toString().split(".");n&&(e.scale.one=n[0]?parseInt(n[0])+parseInt(n[1]||0):0,e.scale.to=n[1]?Math.pow(10,n[1].length):1)}}function T(n){return function(t){var o=t.layer;o.on("click",function(n){e.selectDrawingToBind(n.target)}),n.addLayer(o)}}function x(n){return function(t){var o=t.layer;if("polyline"===t.layerType){var a=o._latlngs[0].lat-o._latlngs[1].lat,i=o._latlngs[0].lng-o._latlngs[1].lng;e.distanceOnMap=Math.sqrt(a*a+i*i)}n.addLayer(o)}}function E(n){var t=[];e.savingEntity=!0;var o=n.layers._layers,a=Object.keys(o);a.forEach(function(e){o[e].feature&&o[e].feature.id&&t.push(o[e].toGeoJSON())}),t.length&&s.deleteFloorFeatures(e.model,t).then(function(n){e.$broadcast("feature.deleted",t),M(),q(),e.savingEntity=!1,e.drawingToBind=null},function(n){n.data.webErrors||r.show("Error! Please try again","error"),e.savingEntity=!1,e.validationErrors=n.data.webErrors})}function A(n){for(var t in n.layers._layers)n.layers._layers.hasOwnProperty(t)&&(e.distanceOnMap=null)}function k(n){e.drawingToBind=n,e.$apply()}function I(n){e.drawingToBind.bindPopup(n.properties.typeName),e.drawingToBind.openPopup(),e.drawingToBind.setStyle?e.drawingToBind.setStyle({color:n.properties.typeColor}):angular.noop()}function N(n,t){var o=[];e.savingEntity=!0,t?(I(n),o.push(n)):o=Object.keys(n.layers._layers).map(function(e){return n.layers._layers[e].toGeoJSON()}),s.updateFloorFeatures(e.model,o).then(function(n){e.savingEntity=!1,e.drawingToBind=null,e.$broadcast("feature.edited",o),M(),q()})}function D(n){e.savingEntity=!0,s.createFloorFeature(e.model,n).then(function(n){if(n){var t=JSON.parse(n);e.savingEntity=!1,e.$broadcast("feature.created",t),I(t),e.drawingToBind=null,M(),q()}},function(n){n.data.webErrors||r.show("Error! Please try again","error"),e.validationErrors=n.data.webErrors})}function R(n){var t;e.drawingToBind?(t=e.drawingToBind.toGeoJSON(),t.properties={layerId:e.drawingToBind._leaflet_id,type:e.featureType,typeName:n.name,typeColor:n.color||"#3388ff",typeId:n.id,floorId:e.model.id},e.drawingToBind.feature&&e.drawingToBind.feature.id?N(t,!0):D(t)):r.show("First click on an area you drew, then click on a room to associate it with","error")}function P(n){e.model.mapMetadata.mapImageUrl&&e.form.$valid&&(e.editStep=n)}function O(){e.showRoomMap=!1}function $(){e.scale.one&&e.scale.to?e.model.mapMetadata.scale=parseFloat((e.scale.one/e.scale.to).toFixed(5)):e.distanceOnMap&&e.scale.to&&(e.model.mapMetadata.scale=parseFloat((e.distanceOnMap/e.scale.to).toFixed(5)))}function U(n){L(),n?e.close():P(2)}function F(n){L(),n?e.close():P(1)}function L(){var n=new o.CrudRest("floor"),t=e.model.id?n.updateWithFile.bind(n):n.createWithFile.bind(n);e.savingEntity=!0;var a=e.mapImageChanged?e.media.files[0]:null;t(e.model,a).then(function(n){n&&n.data&&(e.mapImageChanged=!1,e.savingEntity=!1,e.model=n.data,S(e.model.mapMetadata,e.model.floorFeatures),M(),q(),e.$emit("crud.reload.floor"))},function(n){n.data.webErrors||r.show("Error! Please try again","error"),e.savingEntity=!1,e.validationErrors=n.data.webErrors})}function M(){s.getAvailableRooms().then(function(n){e.formOptions.rooms=n})}function q(){s.getUsedRooms(e.model).then(function(n){e.formOptions.usedRooms=n})}e.formOptions={units:[],rooms:[],usedRooms:[]},e.savingEntity=!1,e.media={files:[]},e.mapImageChanged=!1,e.editStep=1,e.currentWizardStep="",e.FEATURE_TYPES=c,e.scale={},e.distanceOnMap=0,e.knownScale=!0,e.scaleMapShapes={circle:!1,marker:!1,polygon:!1,rectangle:!1},e.displayScaleMap=b,e.hideScaleMap=w,e.handleMapDrawCreated=T,e.handleScaleLineDeleted=A,e.drawingToBind=null,e.featureType=c.ROOM,e.saveFloorFeature=R,e.updateMapFeatures=N,e.deleteFloorFeatures=E,e.roomMapShapes={circle:!1},e.handleMapScaleCreated=x,e.selectDrawingToBind=k,e.saveFloor=U,e.saveMap=F,e.backFromMap=O,e.close=u,e.computeDecimalMapScale=$,t.floor?f(t.floor):p(),e.$watch("media.files",function(n,t){n!==t&&(e.mapImageChanged=!0,e.knownScale||(e.showScaleMap=!1,y()))}),e.$watch("currentWizardStep",function(n,t){"Add rooms"===n&&S(e.model.mapMetadata,e.model.floorFeatures)})}]),angular.module("ilWebClient").controller("FloorController",["$scope","CrudFactory","UserService","$mdDialog","UtilService","NotificationService","FloorService",function(e,n,t,o,a,i,r){function l(e,n,t,o){switch(n){case"delete":t(e);break;default:t(e)}}e.ROLES=t.getRoles(),e.preActionHook=l,e.columns={name:{name:"Name",orderBy:"name"},description:{name:"description"}},e.actions=[],e.editRoute="main.editFloor",e.filterConfig=null,e.options={query:{order:"",limit:15,page:1}},e.$on("crud.updated.floor",function(){}),e.$on("crud.created.floor",function(){}),e.$on("crud.deleted.floor",function(){}),e.$on("crud.intermediaryDialog.close",function(e,n){}),e.$on("crud.dialog.open.floor",function(e,n){}),e.$on("crud.dialog.close.floor",function(e,n){})}]),angular.module("ilWebClient").service("FloorService",["Restangular",function(e){function n(e,n){return l.service.one().customPUT(n,e.id+"/map/feature")}function t(e,n){return l.service.one().customPOST(n,e.id+"/map/feature")}function o(e){return l.service.one(e).get()}function a(e,n){return l.service.one().customPUT(n,e.id+"/map/feature/remove")}function i(){return l.service.one().customGET("room/available/")}function r(e){return l.service.one().customGET(e.id+"/room/assigned/")}this.service=e.service("floor/");var l=this;return{createFloorFeature:t,updateFloorFeatures:n,deleteFloorFeatures:a,getAvailableRooms:i,getUsedRooms:r,getFloor:o}}]),angular.module("ilWebClient").controller("FlowController",["$scope","UserService","$mdDialog","FlowService","CrudFactory","Restangular","NotificationService","HospitalThemeService","MSG",function(e,n,t,o,a,i,r,l,s){function c(n,t){0===e.draggableItems.length||e.draggableItems.length>0&&e.draggableItems[e.draggableItems.length-1].id!=n.id?d(n):r.show("You can't have two consecutive rooms with the same name!","error")}function d(n){var t=angular.copy(n);e.maxIndex+=1,t.path_index=e.maxIndex,e.draggableItems.push(t)}function u(n,t){e.draggableItems.splice(t,1)}function m(){b(!0)}function p(n,t){return h(n,t,e.draggableItems)}function f(){var n=new a.CrudRest("room"),t={hasNoParentAndNoChildOrHasChildAndNoParent:!0};n.list(t).then(function(n){e.roomsList=n.plain()})}function g(){e.validationErrors=null;var n=p(e.model.pathName,e.model.hospital);o.saveFlow(n).then(function(n){e.model=n||{},e.draggableItems=v(e.model),console.log(e.draggableItems),f(),t.hide(e.model),e.model.id?r.show("Patient flow updated","success"):r.show("Patient flow created","success")},function(n){n.data.webErrors||r.show("Error! Please try again","error"),e.validationErrors=n.data.webErrors})}function h(e,n,t){for(var o=t.map(function(t,o){var a=t.optionalPath;return delete t.optionalPath,{pathName:e,hospital:n,room:t,path_index:o,optionalPath:a,root:0===o}}),a=o.length-1;a>=0;a--)o[a].nextPath=o[a+1];return o[0]}function v(n){if(e.model.id&&e.model.pathName){var t=angular.copy(n),o=[];if(n){for(t.room.path_index=t.path_index,t.room.optionalPath=t.optionalPath,o.push(t.room);t.nextPath;)t=t.nextPath,t.room.optionalPath=t.optionalPath,t.room.path_index=t.path_index,o.push(t.room);return o}return[]}return[]}function b(n){e.isServerRequestActive=!0,o.getSingleFlow().then(function(t){e.model=t||{},e.draggableItems=v(e.model),console.log(e.draggableItems),e.maxIndex=e.draggableItems.length-1,f(),e.isServerRequestActive=!1,n&&r.show("Changes reverted","success")})["catch"](function(n){e.isServerRequestActive=!1,r.show("Error! Please try again","error")})}e.model={},e.roomsList=[],e.submitFlow=g,e.resetChanges=m,e.addRoomToFlow=c,e.removeRoomFromFlow=u,e.getHospitalFlow=b,e.draggableItems=[],e.maxIndex=0,e.isServerRequestActive=!1,e.ROLES=n.getRoles(),e.PERMISSIONS=n.getHospitalPermissions(),e.theme=null,e.disclaimer=s.FORM_UPDATE_DISCLAIMER,e.$on("$stateChangeStart",function(e,n,o,a,i){t.cancel()}),l.loadTheme().then(function(n){e.theme=n})["catch"](function(e){}),b(!1)}]),angular.module("ilWebClient").service("FlowService",["Restangular",function(e){function n(n){return e.one("patient/path/").customGET("",{hospitalId:n})}function t(n){return e.one("patient/path/").customPOST(n)}function o(n){return e.one("patient/path").customDELETE(n.id)}var a=this;a.service=e.service("patient/path");var i={getSingleFlow:n,saveFlow:t,deleteFlow:o};return i}]),angular.module("ilWebClient").controller("GatewayController",["$scope","GatewayService","CrudFactory","BeaconService","NotificationService","SocketService","$mdDialog","UserService","SOCKET_TOPICS","Restangular","GATEWAY_STATUSES","GATEWAY_BT_STATUSES",function(e,n,t,o,a,i,r,l,s,c,d,u){function m(n){if(n&&n.id&&!n.removed){var t=!e.activeSelectionFilters.status||e.activeSelectionFilters.status.indexOf(n.status)>=0,o=!e.activeSelectionFilters.btStatus||e.activeSelectionFilters.btStatus.indexOf(n.btStatus)>=0,a=!e.activeSelectionFilters.controlBeacon||n.controlBeacon&&e.activeSelectionFilters.controlBeacon.indexOf(n.controlBeacon.id.toString())>=0,i=!e.activeSearchFilters.name||-1!==n.name.toUpperCase().indexOf(e.activeSearchFilters.name.toUpperCase())||-1!==n.uuid.toUpperCase().indexOf(e.activeSearchFilters.name.toUpperCase());t&&o&&a&&i?e.$broadcast("gateway.update",c.restangularizeElement(null,n,"gateway")):e.$broadcast("gateway.remove",c.restangularizeElement(null,n,"gateway")),setTimeout(function(){e.$apply()},500)}}function p(n){n&&n.id&&n.removed&&(e.$broadcast("crud.deleted.gateway",c.restangularizeElement(null,n,"gateway")),setTimeout(function(){e.$apply()},500))}function f(){i.isConnected()?(i.registerWatcher(s.GATEWAY,e.gatewayUpdateObject),i.registerWatcher(s.GATEWAY,e.gatewayDeleteObject)):setTimeout(f,1e3)}function g(e){return-1!=[u.UNKNOWN,u.HW_FAIL,u.PENDING,u.UP].indexOf(e.btStatus)}function h(e){return-1!=[u.UNKNOWN,u.HW_FAIL,u.PENDING,u.DOWN].indexOf(e.btStatus)}function v(e){return-1==[d.RUNNING,d.NO_SIGNAL].indexOf(e.status)}function b(e){return S("start",e)}function y(e){return S("stop",e)}function w(e){return S("restart",e)}function S(t,o){return n[t](o).then(function(n){switch(t){case"start":a.show("Bluetooth started","success");break;case"stop":a.show("Bluetooth stopped","success");break;case"restart":a.show("Gateway restarted","success")}e.$broadcast("crud.updated.gateway",n)},function(e){a.show("Error! Please try again","error")})}function C(n){var o=new t.CrudRest("room"),a=n&&n.hospital?n.hospital.id:void 0;o.list({hospital:a}).then(function(n){e.formOptions.rooms=n},function(e){})}function T(n){var o=new t.CrudRest("beacon"),a=n&&n.hospital?n.hospital.id:void 0;o.list({type:"asset",status:"AVAILABLE",hospital:a}).then(function(n){e.formOptions.beacons=n})}function x(){var n=new t.CrudRest("beacon/control-beacon/");n.list().then(function(n){e.formOptions.controlBeacons=n;for(var t=[],o=0;o<n.length;o++)t.push({name:n[o].name,value:n[o].id});e.filterConfig.uuid.values=t})}function E(){var n=new t.CrudRest("gateway/status");
n.list().then(function(n){n.forEach(function(n){e.filterConfig.status.values.push({name:n,value:n})})})}function A(){var n=new t.CrudRest("gateway/bt_status");n.list().then(function(n){n.forEach(function(n){e.filterConfig.bt_status.values.push({name:n,value:n})})})}function k(e,n,t){var o={};switch(n){case"status":e.status&&-1!=[d.NO_SIGNAL,d.UNAVAILABLE].indexOf(e.status)?o.color="red":e.status&&-1!=[d.RUNNING].indexOf(e.status)&&(o.color="green");break;case"clientVersion":e.clientVersion==e.clientLastVersion?o.color="green":o.color="red";break;case"btStatus":e.btStatus&&-1!=[u.UP].indexOf(e.btStatus)?o.color="green":e.btStatus&&-1!=[u.DOWN].indexOf(e.btStatus)?o.color="red":o.color="black"}return o}function I(e,n,t,o){switch(n){case"delete":N(e,t,o);break;case"create":C(e),T(e),t(e);break;case"edit":C(e),T(e),t(e);break;default:t(e)}}function N(e,n,t){n([e,"gateway"])}function D(e){return!1}e.customItemStyle=k,e.preActionHook=I,e.cannotDeleteItem=D,e.ROLES=l.getRoles(),e.gatewayUpdateObject={source:"GatewayControllerUpdate",callback:m},e.gatewayDeleteObject={source:"GatewayControllerDelete",callback:p};var R=!1;e.$on("$stateChangeStart",function(e,n,t,o,a,r){i.unregisterWatcher(s.GATEWAY,"GatewayControllerUpdate"),i.unregisterWatcher(s.GATEWAY,"GatewayControllerDelete")}),f(),e.columns={name:{name:"Name",orderBy:"name"},uuid:{name:"MAC Address"},controlBeacon:{name:"Beacon",displayProperty:"name"},status:{name:"status"},btStatus:{name:"bt status",getTooltip:function(e,n){return e.btMac}},clientVersion:{name:"Version"}},e.actions=[{title:"Start Bluetooth",action:"start",icon:{"zmdi-bluetooth":!0},color:"green",callback:b,shouldBeHidden:g},{title:"Stop Bluetooth",action:"stop",icon:{"zmdi-bluetooth-off":!0},color:"red",callback:y,shouldBeHidden:h},{title:"Restart Gateway",action:"restart",icon:{"zmdi-replay":!0},color:"purple",callback:w,shouldBeDisabled:v}],e.filterConfig={status:{type:"select",column:"status",placeholder:"by Status",allowMultipleSelection:!0,values:[]},bt_status:{type:"select",column:"btStatus",placeholder:"by BT Status",allowMultipleSelection:!0,values:[]},uuid:{type:"select",column:"controlBeacon",placeholder:"by Beacon ID",allowMultipleSelection:!0,values:[]}},e.formOptions={rooms:[],beacons:[]},e.$on("crud.intermediaryDialog.close",function(e,n){C(n),T(n)}),e.$on("crud.created.gateway",function(){R||T()}),e.$on("crud.dialog.open.gateway",function(n,t){t.controlBeacon&&e.formOptions.beacons.push(t.controlBeacon),R=!0}),e.$on("crud.dialog.close.gateway",function(n,t){if(t.controlBeacon)for(var o=0;o<e.formOptions.beacons.length;o++)if(e.formOptions.beacons[o].id==t.controlBeacon.id){e.formOptions.beacons.splice(o,1);break}R=!1}),E(),A(),x()}]),angular.module("ilWebClient").service("GatewayService",["Restangular",function(e){function n(e){return r.service.one().customGET(e.id+"/start")}function t(e){return r.service.one().customGET(e.id+"/stop")}function o(e){return r.service.one().customGET(e.id+"/stop_gateway")}function a(){return r.service.one().customGET("/unassigned/")}function i(e){return r.service.one().customGET(e+"/find")}this.service=e.service("gateway/");var r=this;return{start:n,stop:t,restart:o,getUnassigned:a,getGateway:i}}]),angular.module("ilWebClient").directive("leafletMap",function(){return{scope:{imageOverlay:"=",height:"=",width:"=",features:"=",availableShapes:"=?",handleMapDrawing:"=?",handleMapDeleteDrawing:"=?",handleMapEditDrawing:"=?",selectDrawingToBind:"=?",canDraw:"=",canEdit:"=",canDelete:"=",containerId:"@"},restrict:"E",template:"",link:function(e,n,t){function o(){r&&r.remove(),l&&(l=null),r=L.map(e.containerId,{crs:L.CRS.Simple,minZoom:-3,scrollWheelZoom:!0});var n=[[0,0],[e.height,e.width]],t={opacity:1,crossOrigin:!1};L.imageOverlay(e.imageOverlay,n,t).addTo(r),r.setView([300,300],0),a()}function a(){if(l=new L.FeatureGroup,e.features&&e.features.length){var n=e.features.map(function(e){return L.geoJSON(e,{style:function(e){return{color:e.properties.typeColor}},onEachFeature:i})});n.forEach(function(e){e.getLayers().forEach(function(e){l.addLayer(e)})})}r.addLayer(l);new L.Control.Draw({position:"topleft",draw:e.availableShapes,edit:{featureGroup:l,edit:e.canEdit,remove:e.canDelete}}).addTo(r);e.canDraw&&r.on(L.Draw.Event.CREATED,e.handleMapDrawing(l)),e.canDelete&&r.on(L.Draw.Event.DELETED,e.handleMapDeleteDrawing),e.canEdit&&r.on(L.Draw.Event.EDITED,e.handleMapEditDrawing)}function i(n,t){n.properties&&n.properties.typeName&&(t.bindPopup(n.properties.typeName),t.on("mouseover",function(e){e.target.openPopup()}),(e.canEdit||e.canDelete)&&t.on("click",function(n){e.selectDrawingToBind(n.target)}))}var r,l;setTimeout(function(){o(),e.$apply()},1),e.$on("feature.created",function(n,t){t.id&&(e.features.push(t),setTimeout(function(){o(),e.$apply()},100))}),e.$on("feature.edited",function(n,t){e.features=_.unionBy(t,e.features,"id"),setTimeout(function(){o(),e.$apply()},100)}),e.$on("feature.deleted",function(n,t){e.features=_.differenceBy(e.features,t,"id"),setTimeout(function(){o(),e.$apply()},100)})}}}),angular.module("ilWebClient").controller("LoginController",["$scope","$state","$mdDialog","UserService","NotificationService","$timeout","$window","$document","SocketService","MSG","HospitalThemeService","UtilService",function(e,n,t,o,a,i,r,l,s,c,d,u){}function f(n){return e.errors=[],a.show("Login successful","success"),r.localStorage.setItem("tenantID",n.user.tenant),r.localStorage.setItem("title",n.user.tenant.toUpperCase()),o.setCurrentUser(n)}function g(e){n.go("main")}function h(n){n.data&&n.data.webErrors&&(e.errors=n.data.webErrors.User)}function v(){r.localStorage.getItem("notify-token-expired")&&""!==document.referrer&&(a.show("Please log in again so you can access the application","error"),r.localStorage.clear())}e.user={email:"",password:""},e.errors=[],e.isAccountLocked=!1,e.lockedMessage=c.USER_ACC_LOCKED,e.storeIosURL=null,e.storeAndroidURL=null,e.theme=null,d.loadTheme().then(function(n){e.theme=n})["catch"](function(e){u.showErrorNotification(e,"Could not load hospital theme")}),e.login=function(){o.login(e.user).then(f).then(g)["catch"](h)},m(),p();var b=function(){};b(),v(),i(function(){var e="input[type=password]:-webkit-autofill",n=angular.element(l[0].querySelector(e));n.length&&n.parent().addClass("md-input-has-value")},150)}]),function(){function e(e,n,t,o,a,i,r,l){var s=this;s.toggleMenu=function(){s.toggle.go()},s.toggle={},s.toolbarElevation=-1,s.navList=[{icon:"home",label:"Dashboard",route:".dashboard"},{icon:"settings_bluetooth",label:"Beacon Management",route:".beacon"},{icon:"supervisor_account",label:"User Management",route:".user"},{icon:"layers",label:"Floor Management",route:".floor"},{icon:"location_on",label:"Area Management",route:".room"},{icon:"bluetooth_searching",label:"Gateway Management",route:".gateway"},{icon:"web",label:"System Configuration",route:".dictionary"},{icon:"navigation",label:"Patient Flow",route:".flow"},{icon:"insert_chart",label:"Surveys",route:".survey"}],l.loadTheme().then(function(e){s.theme=e})["catch"](function(e){}),i.getCurrentUser().then(function(e){s.user=e}),n.transitionTo("main.dashboard"),t.onSuccess({},function(e){var n=e.router.stateService.current.name;"d"===n.charAt(5)||"s"===n.charAt(5)?s.toolbarElevation=-1:s.toolbarElevation=1}),e.$on("IdleStart",function(){}),e.$on("IdleWarn",function(e,n){}),e.$on("IdleTimeout",function(){o.cancel(),i.invalidateToken().then(function(){Raven.captureMessage("User logged out on inactivity"),i.logout(),r.show("You were logged out due to inactivity. Please log in again so you can access the application","error")})}),e.$on("IdleEnd",function(){}),e.$on("Keepalive",function(){})}e.$inject=["$scope","$state","$transitions","$mdDialog","Idle","UserService","NotificationService","HospitalThemeService"],angular.module("ilWebClient").config(["$stateProvider","ROLES",function(e,n){e.state("main",{url:"/app",authenticate:!0,acceptedRoles:[n.SAD,n.HAD,n.HCL,n.PER,n.GPER],views:{"main@":{templateUrl:"js/main/main.html",controller:"MainController",controllerAs:"main"}}})}]).controller("MainController",e)}(),DatePickerCtrl.$inject=["$scope","$element","$attrs","$compile","$timeout","$window","$mdConstant","$mdTheming","$mdUtil","$mdDateLocale","$$mdDateUtil","$$rAF"],angular.module("ilWebClient").directive("mdDatepickerCustom",datePickerDirective);var EXTRA_INPUT_SIZE=3,INVALID_CLASS="md-datepicker-invalid",DEFAULT_DEBOUNCE_INTERVAL=500,CALENDAR_PANE_HEIGHT=368,CALENDAR_PANE_WIDTH=360;DatePickerCtrl.prototype.configureNgModel=function(e){this.ngModelCtrl=e;var n=this;e.$render=function(){var e=n.ngModelCtrl.$viewValue;if(e&&!(e instanceof Date))throw Error("The ng-model for md-datepicker must be a Date instance. Currently the model is a: "+typeof e);n.date=e,n.inputElement.value=n.dateLocale.formatDate(e),n.resizeInputElement(),n.updateErrorState()}},DatePickerCtrl.prototype.attachChangeListeners=function(){var e=this;e.$scope.$on("md-calendar-change",function(n,t){e.ngModelCtrl.$setViewValue(t),e.date=t,e.inputElement.value=e.dateLocale.formatDate(t),e.closeCalendarPane(),e.resizeInputElement(),e.updateErrorState()}),e.ngInputElement.on("input",angular.bind(e,e.resizeInputElement)),e.ngInputElement.on("input",e.$mdUtil.debounce(e.handleInputEvent,DEFAULT_DEBOUNCE_INTERVAL,e))},DatePickerCtrl.prototype.attachInteractionListeners=function(){var e=this,n=this.$scope,t=this.$mdConstant.KEY_CODE;e.ngInputElement.on("keydown",function(o){o.altKey&&o.keyCode==t.DOWN_ARROW&&(e.openCalendarPane(o),n.$digest())}),n.$on("md-calendar-close",function(){e.closeCalendarPane()})},DatePickerCtrl.prototype.installPropertyInterceptors=function(){var e=this;if(this.$attrs.ngDisabled){var n=this.$scope.$parent;n&&n.$watch(this.$attrs.ngDisabled,function(n){e.setDisabled(n)})}Object.defineProperty(this,"placeholder",{get:function(){return e.inputElement.placeholder},set:function(n){e.inputElement.placeholder=n||""}})},DatePickerCtrl.prototype.setDisabled=function(e){this.isDisabled=e,this.inputElement.disabled=e,this.calendarButton.disabled=e},DatePickerCtrl.prototype.updateErrorState=function(e){var n=e||this.date;if(this.clearErrorState(),this.dateUtil.isValidDate(n)){if(n=this.dateUtil.createDateAtMidnight(n),this.dateUtil.isValidDate(this.minDate)){var t=this.dateUtil.createDateAtMidnight(this.minDate);this.ngModelCtrl.$setValidity("mindate",n>=t)}if(this.dateUtil.isValidDate(this.maxDate)){var o=this.dateUtil.createDateAtMidnight(this.maxDate);this.ngModelCtrl.$setValidity("maxdate",o>=n)}angular.isFunction(this.dateFilter)&&this.ngModelCtrl.$setValidity("filtered",this.dateFilter(n))}else this.ngModelCtrl.$setValidity("valid",null==n);this.ngModelCtrl.$valid||this.inputContainer.classList.add(INVALID_CLASS)},DatePickerCtrl.prototype.clearErrorState=function(){this.inputContainer.classList.remove(INVALID_CLASS),["mindate","maxdate","filtered","valid"].forEach(function(e){this.ngModelCtrl.$setValidity(e,!0)},this)},DatePickerCtrl.prototype.resizeInputElement=function(){this.inputElement.size=this.inputElement.value.length+EXTRA_INPUT_SIZE},DatePickerCtrl.prototype.handleInputEvent=function(){var e=this.inputElement.value,n=e?this.dateLocale.parseDate(e):null;this.dateUtil.setDateTimeToMidnight(n);var t=""==e||this.dateUtil.isValidDate(n)&&this.dateLocale.isDateComplete(e)&&this.isDateEnabled(n);t&&(this.ngModelCtrl.$setViewValue(n),this.date=n),this.updateErrorState(n)},DatePickerCtrl.prototype.isDateEnabled=function(e){return this.dateUtil.isDateWithinRange(e,this.minDate,this.maxDate)&&(!angular.isFunction(this.dateFilter)||this.dateFilter(e))},DatePickerCtrl.prototype.attachCalendarPane=function(){var e=this.calendarPane;e.style.transform="",this.$element.addClass("md-datepicker-open");var n=this.inputContainer.getBoundingClientRect(),t=document.body.getBoundingClientRect(),o=n.top-t.top,a=n.left-t.left,i=t.top<0&&0==document.body.scrollTop?-t.top:document.body.scrollTop,r=t.left<0&&0==document.body.scrollLeft?-t.left:document.body.scrollLeft,l=i+this.$window.innerHeight,s=r+this.$window.innerWidth;if(a+CALENDAR_PANE_WIDTH>s){if(s-CALENDAR_PANE_WIDTH>0)a=s-CALENDAR_PANE_WIDTH;else{a=r;var c=this.$window.innerWidth/CALENDAR_PANE_WIDTH;e.style.transform="scale("+c+")"}e.classList.add("md-datepicker-pos-adjusted")}o+CALENDAR_PANE_HEIGHT>l&&l-CALENDAR_PANE_HEIGHT>i&&(o=l-CALENDAR_PANE_HEIGHT,e.classList.add("md-datepicker-pos-adjusted")),e.style.left=a+"px",e.style.top=o+"px",document.body.appendChild(e),this.inputMask.style.left=n.width+"px",this.$$rAF(function(){e.classList.add("md-pane-open")})},DatePickerCtrl.prototype.detachCalendarPane=function(){this.$element.removeClass("md-datepicker-open"),this.calendarPane.classList.remove("md-pane-open"),this.calendarPane.classList.remove("md-datepicker-pos-adjusted"),this.isCalendarOpen&&this.$mdUtil.enableScrolling(),this.calendarPane.parentNode&&this.calendarPane.parentNode.removeChild(this.calendarPane)},DatePickerCtrl.prototype.openCalendarPane=function(e){if(!this.isCalendarOpen&&!this.isDisabled){this.isCalendarOpen=!0,this.calendarPaneOpenedFrom=e.target,this.$mdUtil.disableScrollAround(this.calendarPane),this.attachCalendarPane(),this.focusCalendar();var n=this;this.$mdUtil.nextTick(function(){n.documentElement.on("click touchstart",n.bodyClickHandler)},!1),window.addEventListener("resize",this.windowResizeHandler)}},DatePickerCtrl.prototype.closeCalendarPane=function(){this.isCalendarOpen&&(this.detachCalendarPane(),this.isCalendarOpen=!1,this.calendarPaneOpenedFrom.focus(),this.calendarPaneOpenedFrom=null,this.ngModelCtrl.$setTouched(),this.documentElement.off("click touchstart",this.bodyClickHandler),window.removeEventListener("resize",this.windowResizeHandler))},DatePickerCtrl.prototype.getCalendarCtrl=function(){return angular.element(this.calendarPane.querySelector("md-calendar")).controller("mdCalendar")},DatePickerCtrl.prototype.focusCalendar=function(){var e=this;this.$mdUtil.nextTick(function(){e.getCalendarCtrl().focus()},!1)},DatePickerCtrl.prototype.setFocused=function(e){e||this.ngModelCtrl.$setTouched(),this.isFocused=e},DatePickerCtrl.prototype.handleBodyClick=function(e){if(this.isCalendarOpen){var n=this.$mdUtil.getClosest(e.target,"md-calendar");n||this.closeCalendarPane(),this.$scope.$digest()}},angular.module("ilWebClient").controller("MetricsController",JhiMetricsMonitoringController),JhiMetricsMonitoringController.$inject=["$scope","MetricsService","$mdDialog"],angular.module("ilWebClient").controller("JhiMetricsMonitoringModalController",JhiMetricsMonitoringModalController),JhiMetricsMonitoringModalController.$inject=["$mdDialog","MetricsService"],angular.module("ilWebClient").factory("MetricsService",JhiMetricsService),JhiMetricsService.$inject=["$http","API_URL"],angular.module("NotificationModule",["ngMaterial"]).factory("NotificationService",["$mdToast","$timeout",function(e,n){var t=function(e,n,t,o,a){var i;switch(n){case"error":i="error";break;case"success":i="success"}return{hideDelay:t||3e3,position:o||"bottom right",template:'<md-toast class="md-toast '+i+'"><span>'+e+"</span></md-toast>",parent:a}},o="",a=3e3;return{show:function(i,r,l,s){return n(function(){o=""},a),o!==i?(o=i,e.show(t(i,r,l,s))):void(o=i)}}}]),angular.module("ilWebClient").controller("PasswordManagementController",["$scope","$state","$mdDialog","$stateParams","UserService","NotificationService","MSG","HospitalThemeService",function(e,n,t,o,a,i,r,l){function s(n){return n&&e.passwordConditions.hasRequiredLength(n)&&e.passwordConditions.meetsConditions(n)&&b()}function c(){e.showExpiredTokenMessage=!1,a.checkEmailToken(w,!e.isRequestingReset).then(d)["catch"](u)}function d(e){}function u(n){switch(n.status){case 400:e.showExpiredTokenMessage=!0;break;case 408:i.show(r.REQUEST_TIMEOUT,"error");break;default:i.show(r.URL_CHECK_FAILED,"error")}}function m(){a.requestPasswordReset(e.resetObject.email).then(f)["catch"](h)}function p(){e.validationErrors=null,a.setNewPassword(e.newPasswordObject.newPassword,w,S).then(g)["catch"](v)}function f(n){e.passwordRequestMsg=r.EMAIL_SENT_CONFIRMATION}function g(e){i.show(r.PWD_SET_CONFIRMATION,"success"),n.transitionTo("login")}function h(n){e.passwordRequestMsg=r.PWD_SET_ERR}function v(n){e.validationErrors=n.data.webErrors}function b(){return e.newPasswordObject.newPassword===e.newPasswordObject.confirmNewPassword}function y(){n.transitionTo("login")}e.requestPasswordReset=m,e.setNewPassword=p,e.passwordsMatch=b,e.canSubmitPassword=s,e.backToLogin=y,e.showExpiredTokenMessage=!1,e.passwordRequestMsg=null,e.validationErrors=null,e.isRequestingReset=void 0===o.token,e.resetObject={email:""},e.newPasswordObject={},e.theme=null;var w=o.token,S=n.$current.name;w&&c(),l.loadTheme().then(function(n){e.theme=n})["catch"](function(e){}),e.passwordConditions={hasRequiredLength:function(e){return e&&e.length>=8},hasLowerCaseChar:function(e){return e&&/[a-z]/.test(e)},hasUpperCaseChar:function(e){return e&&/[A-Z]/.test(e)},hasSpecialChar:function(e){return e&&/[$!#@%&*]/.test(e)},hasNumber:function(e){return e&&/[0-9]/.test(e)},meetsConditions:function(e){for(var n=0,t=[this.hasLowerCaseChar(e),this.hasUpperCaseChar(e),this.hasNumber(e),this.hasSpecialChar(e)],o=0;o<t.length;o++)t[o]&&(n+=1);return n>=3}}}]),angular.module("ilWebClient").controller("RoomEntityFormController",["$scope","Restangular",function(e,n){function t(t){var o={id:null,name:t};n.one("/room/defaultAssetStatus/").customPUT(o).then(function(n){e.formOptions.roomDefaultAssetStatuses.push(o),e.model.assetStatus=o})}function o(n,t){e.assetTypeValidationError={};var o=-1;e.formIsValid=!0,e.model.assetMappings.forEach(function(a){return o++,o!=t&&a.assetType.name==n.assetType.name?(e.assetTypeValidationError[t]="This asset type is already assigned.",n.assetStatus=null,void(e.formIsValid=!1)):void 0})}function a(){e.model.assetMappings||(e.model.assetMappings=[]),e.model.assetMappings.push({id:null})}function i(n){e.model.assetMappings.splice(e.model.assetMappings.indexOf(n),1);var t=-1;e.model.assetMappings.forEach(function(e){o(e,++t)})}function r(){e.formOptions.assetTypes.forEach(function(t){n.all("dictionary/asset/type/"+t.id+"/statusObj").getList().then(function(n){for(var o=[],a=0;a<n.length;a++)o.push({status:n[a].status,isDefault:n[a].isDefault,id:n[a].id});e.assetStatusesForAssetType[t.id]=o})})}function l(){n.all("room/defaultAssetStatuses/").getList().then(function(n){e.formOptions.roomDefaultAssetStatuses=n,e.formOptions.roomDefaultAssetStatuses.filter(function(n){n.name===e.model.assetStatus&&(e.model.assetStatus=n)})})}function s(){r(),l()}e.addNewAssetType=a,e.removeAssetTypeMapping=i,e.validateAssetMapping=o,e.addNewStatus=t,e.assetStatusesForAssetType={},e.formIsValid=!0,s()}]),angular.module("ilWebClient").controller("FingerprintsInfoController",["$scope","$mdDialog","model","FingerprintService","NotificationService",function(e,n,t,o,a){function i(e){return"deviation"==e||"average"==e}function r(e,n,t){e&&n&&t&&(e[n]=t)}function l(e){o.updateFingerprint(e).then(u("Updated fingerprint #"+e.id))["catch"](m("Could not update fingerprint #"+e.id))}function s(e){var n={title:"Delete fingerprint",body:"Are you sure you want to delete this? It cannot be undone."};c(n,function(){o.deleteFingerprint(e).then(d(e))["catch"](m("Could not delete fingerprint #"+e.id))})}function c(e,t){var o=n.confirm().title(e.title).htmlContent('<span class="modal-custom-body">'+e.body+"</span>").ariaLabel("Confirm").ok("DELETE").cancel("Cancel");n.show(o).then(function(){"function"==typeof t&&t()})}function d(e){return function(n){u("Deleted fingerprint #"+e.id)}}function u(e){a.show(e,"success")}function m(e){return function(n){a.show(e,"error")}}e.close=n.cancel,e.model=t,e.update=l,e["delete"]=s,e.setProperty=r,e.isEnabled=i}]),angular.module("ilWebClient").service("FingerprintService",["Restangular","$http","API_URL",function(e,n,t){this.updateFingerprint=function(n){return e.one("room/fingerprints").customPUT(n)},this.deleteFingerprint=function(e){return n({url:t+"/room/fingerprints/"+e.id,method:"DELETE",data:e,headers:{"Content-Type":"application/json;charset=utf-8"}})}}]),angular.module("ilWebClient").controller("RoomController",["$scope","CrudFactory","UserService","$mdDialog","UtilService","NotificationService",function(e,n,t,o,a,i){function r(e){a.loadRoomInfo(e).then(l)["catch"](function(e){a.showErrorNotification(e,"Could not load fingerprints info")})}function l(e){var n=e||{};e&&0===e.length?i.show("No fingerprints available for this area","success"):o.show({templateUrl:"js/room/fingerprints.html",controller:"FingerprintsInfoController",parent:angular.element(document.body),locals:{model:n},bindToController:!0,escapeToClose:!0,fullscreen:!0}).then(function(e){},function(){})}function s(n){var t=n.hasFingerprints&&!n.hasInvalidFingerprints;return!e.ROLES.SAD||!t}function c(n){var t=n.hasFingerprints&&n.hasInvalidFingerprints;return!e.ROLES.SAD||!t}function d(){e.formOptions.colors.forEach(function(e){e.selected=!1})}function u(t){var o=new n.CrudRest("room"),a=t&&t.hospital?t.hospital.id:void 0;o.list({hasParents:!1,hospital:a}).then(function(n){e.formOptions.rooms=n})}function m(){var t=new n.CrudRest("room");t.list({hasChildren:!0}).then(function(n){for(var t=[],o=0;o<n.length;o++)t.push({name:n[o].name,value:n[o].id});e.filterConfig.parentRooms.values=t})}function p(t){var o=new n.CrudRest("dictionary/asset/type"),a={processingType:"LOCATION"};t&&t.hospital&&(a.hospital=t.hospital.id),o.list(a).then(function(n){for(var t=[],o=0;o<n.length;o++)t.push({name:n[o].name,id:n[o].id});e.formOptions.assetTypes=t})}function f(e,n,t,o){switch(n){case"delete":g(e,t,o);break;case"create":t(e);break;case"edit":p(e),t(e);break;default:t(e)}}function g(e,n,t){if(e.gatewayNames&&e.gatewayNames.length>0){var o={title:"Remove area",body:"You cannot remove an area with one or more gateways associated."};a.openAlertModal(o)}else if(e.hasChildren){var o={title:"Remove area",body:"You cannot remove a parent area."};a.openAlertModal(o)}else n([e,"area"])}function h(e){return e.gatewayNames&&e.gatewayNames.length>0||e.hasChildren}e.ROLES=t.getRoles(),e.preActionHook=f,e.cannotDeleteItem=h,console.log("ehre"),e.columns={name:{name:"Name",orderBy:"name"},description:{name:"description"},parent:{name:"Parent",displayProperty:"name"},floorName:{name:"floor"},gatewayNames:{name:"Gateways"}},e.actions=[{title:"View fingerprints info",action:"start",icon:{"zmdi-info":!0},color:"green",callback:r,shouldBeHidden:s},{title:"View fingerprints info",action:"start",icon:{"zmdi-info":!0},color:"red",callback:r,shouldBeHidden:c}],e.filterConfig={parentRooms:{type:"select",column:"parentRoom",placeholder:"by Parent Area",allowMultipleSelection:!0,values:[]}},e.formOptions={rooms:[],assetTypes:[],roomDefaultAssetStatuses:[],statuses:[],gateways:[],colors:[{name:"Blue",hex:"#89c5f5",textColor:"#ffffff",selected:!1},{name:"Grey",hex:"#A1A2A6",textColor:"#000000",selected:!1},{name:"Pink",hex:"#fe9fdc",textColor:"#000000",selected:!1},{name:"Yellow",hex:"#ffe44a",textColor:"#000000",selected:!1},{name:"Purple",hex:"#8D68B6",textColor:"#ffffff",selected:!1},{name:"Green",hex:"#D5FF97",textColor:"#000000",selected:!1}]},e.options={query:{order:"",limit:15,page:1}},u(),e.$on("crud.updated.room",function(){m(),u()}),e.$on("crud.created.room",function(){u()}),e.$on("crud.deleted.room",function(){m(),u()}),e.$on("crud.intermediaryDialog.close",function(e,n){u(n)}),e.$on("crud.dialog.open.room",function(e,n){u(n)}),e.$on("crud.dialog.close.room",function(e,n){d()}),p(),m()}]),function(){function e(e,n){function t(){var e=new n.CrudRest("room");return e.list().then(function(e){i("Location",e)})}function o(){return t().then(function(){var e=new n.CrudRest("dictionary/asset/type");return e.list()}).then(function(e){return i("Asset Type",e),Promise.resolve()}).then(function(){var e="dictionary/asset/type/status",t=new n.CrudRest(e);return t.list()}).then(function(e){return i("Status",e),Promise.resolve(r)})}function a(){return t().then(function(){var e=new n.CrudRest("user/doctor");return e.list()}).then(function(e){return i("Physian",e),Promise.resolve(r)})}function i(e,n){for(var t={title:e,options:[]},o=0;o<n.length;o++)"object"==typeof n[o]?t.options.push({label:n[o].name,id:n[o].id,count:"N/A"}):t.options.push({label:n[o],id:-1,count:"N/A"});r.push(t)}var r=[];this.getFiltersForState=function(e){var n;return r=[],"main.dashboard.assets"===e?n=o():"main.dashboard.patients"===e?n=a():(n=Promise.reject(),console.log(e)),n},this.getFilters=function(){this.getFilterForState(e.current.name)}}e.$inject=["$state","CrudFactory"],angular.module("ilWebClient").service("FilterRetrievalService",e)}(),angular.module("ilWebClient").factory("SocketService",["SOCKET_URL","$window","Restangular","$q","SOCKET_TOPICS",function(e,n,t,o,a){function i(){for(var e in a)a.hasOwnProperty(e)&&(S[a[e]]={})}function r(){for(var e in a)a.hasOwnProperty(e)&&(C[a[e]]=[])}function l(){if(!b){var e=n.localStorage.getItem("token");e&&s()}}function s(){if(!b){n.localStorage.getItem("token");y=new SockJS(e),w=Stomp.over(y),w.debug=!1,w.connect({},d,u)}}function c(){b&&w.disconnect(function(){b=!1})}function d(e){b=!0}function u(e){b=!1,setTimeout(s,1e4)}function m(e,t){var o=e+n.localStorage.getItem("tenantID")+"/";S[e]=w.subscribe(o,function(n){v(C[e],JSON.parse(n.body),t)})}function p(e){0==C[e].length&&S[e].hasOwnProperty("unsubscribe")&&S[e].unsubscribe()}function f(e,n){b&&(C[e].length>0&&g(e,n.source),C[e].push(n),1==C[e].length&&m(e,n.runSequential))}function g(e,n){for(var t=0;t<C[e].length;t++)C[e][t].source===n&&C[e].splice(t,1);p(e)}function h(){return b}function v(e,n,t){angular.forEach(e,function(e){n.length&&t?n.forEach(function(n){e.callback(n)}):n.length&&!t?e.callback(n):e.callback(n)})}var b=!1,y={},w={},S={},C={};return i(),r(),l(),{connect:s,disconnect:c,isConnected:h,registerWatcher:f,unregisterWatcher:g}}]),function(){var e,n,t,o,a={}.hasOwnProperty,i=[].slice;e={LF:"\n",NULL:"\x00"},t=function(){function n(e,n,t){this.command=e,this.headers=null!=n?n:{},this.body=null!=t?t:""}var t;return n.prototype.toString=function(){var t,o,i,r;t=[this.command],r=this.headers;for(o in r)a.call(r,o)&&(i=r[o],t.push(""+o+":"+i));return this.body&&t.push("content-length:"+n.sizeOfUTF8(this.body)),t.push(e.LF+this.body),t.join(e.LF)},n.sizeOfUTF8=function(e){return e?encodeURI(e).split(/%..|./).length-1:0},t=function(t){var o,a,i,r,l,s,c,d,u,m,p,f,g,h,v,b,y;for(r=t.search(RegExp(""+e.LF+e.LF)),l=t.substring(0,r).split(e.LF),i=l.shift(),s={},f=function(e){return e.replace(/^\s+|\s+$/g,"")},b=l.reverse(),g=0,v=b.length;v>g;g++)m=b[g],d=m.indexOf(":"),s[f(m.substring(0,d))]=f(m.substring(d+1));if(o="",p=r+2,s["content-length"])u=parseInt(s["content-length"]),o=(""+t).substring(p,p+u);else for(a=null,c=h=p,y=t.length;(y>=p?y>h:h>y)&&(a=t.charAt(c),a!==e.NULL);c=y>=p?++h:--h)o+=a;return new n(i,s,o)},n.unmarshall=function(n){var o;return function(){var a,i,r,l;for(r=n.split(RegExp(""+e.NULL+e.LF+"*")),l=[],a=0,i=r.length;i>a;a++)o=r[a],(null!=o?o.length:void 0)>0&&l.push(t(o));return l}()},n.marshall=function(t,o,a){var i;return i=new n(t,o,a),i.toString()+e.NULL},n}(),n=function(){function n(e){this.ws=e,this.ws.binaryType="arraybuffer",this.counter=0,this.connected=!1,this.heartbeat={outgoing:1e4,incoming:1e4},this.maxWebSocketFrameSize=16384,this.subscriptions={}}var a;return n.prototype.debug=function(e){var n;return"undefined"!=typeof window&&null!==window&&null!=(n=window.console)?n.log(e):void 0},a=function(){return Date.now||(new Date).valueOf},n.prototype._transmit=function(e,n,o){var a;for(a=t.marshall(e,n,o),"function"==typeof this.debug&&this.debug(">>> "+a);;){if(!(a.length>this.maxWebSocketFrameSize))return this.ws.send(a);this.ws.send(a.substring(0,this.maxWebSocketFrameSize)),a=a.substring(this.maxWebSocketFrameSize),"function"==typeof this.debug&&this.debug("remaining = "+a.length)}},n.prototype._setupHeartbeat=function(n){var t,i,r,l,s,c;if((s=n.version)===o.VERSIONS.V1_1||s===o.VERSIONS.V1_2)return c=function(){var e,t,o,a;for(o=n["heart-beat"].split(","),a=[],e=0,t=o.length;t>e;e++)l=o[e],a.push(parseInt(l));return a}(),i=c[0],t=c[1],0!==this.heartbeat.outgoing&&0!==t&&(r=Math.max(this.heartbeat.outgoing,t),"function"==typeof this.debug&&this.debug("send PING every "+r+"ms"),this.pinger=o.setInterval(r,function(n){return function(){return n.ws.send(e.LF),"function"==typeof n.debug?n.debug(">>> PING"):void 0}}(this))),0!==this.heartbeat.incoming&&0!==i?(r=Math.max(this.heartbeat.incoming,i),"function"==typeof this.debug&&this.debug("check PONG every "+r+"ms"),this.ponger=o.setInterval(r,function(e){return function(){var n;return n=a()-e.serverActivity,n>2*r?("function"==typeof e.debug&&e.debug("did not receive server activity for the last "+n+"ms"),e.ws.close()):void 0}}(this))):void 0},n.prototype._parseConnect=function(){var e,n,t,o;switch(e=1<=arguments.length?i.call(arguments,0):[],o={},e.length){case 2:o=e[0],n=e[1];break;case 3:e[1]instanceof Function?(o=e[0],n=e[1],t=e[2]):(o.login=e[0],o.passcode=e[1],n=e[2]);break;case 4:o.login=e[0],o.passcode=e[1],n=e[2],t=e[3];break;default:o.login=e[0],o.passcode=e[1],n=e[2],t=e[3],o.host=e[4]}return[o,n,t]},n.prototype.connect=function(){var n,r,l,s;return n=1<=arguments.length?i.call(arguments,0):[],s=this._parseConnect.apply(this,n),l=s[0],this.connectCallback=s[1],r=s[2],"function"==typeof this.debug&&this.debug("Opening Web Socket..."),this.ws.onmessage=function(n){return function(o){var i,l,s,c,d,u,m,p,f,g,h,v;if(c="undefined"!=typeof ArrayBuffer&&o.data instanceof ArrayBuffer?(i=new Uint8Array(o.data),"function"==typeof n.debug?n.debug("--- got data length: "+i.length):void 0,function(){var e,n,t;for(t=[],e=0,n=i.length;n>e;e++)l=i[e],t.push(String.fromCharCode(l));return t}().join("")):o.data,n.serverActivity=a(),c===e.LF)return void("function"==typeof n.debug&&n.debug("<<< PONG"));for("function"==typeof n.debug&&n.debug("<<< "+c),h=t.unmarshall(c),v=[],f=0,g=h.length;g>f;f++)switch(d=h[f],d.command){case"CONNECTED":"function"==typeof n.debug&&n.debug("connected to server "+d.headers.server),n.connected=!0,n._setupHeartbeat(d.headers),v.push("function"==typeof n.connectCallback?n.connectCallback(d):void 0);break;case"MESSAGE":p=d.headers.subscription,m=n.subscriptions[p]||n.onreceive,m?(s=n,u=d.headers["message-id"],d.ack=function(e){return null==e&&(e={}),s.ack(u,p,e)},d.nack=function(e){return null==e&&(e={}),s.nack(u,p,e)},v.push(m(d))):v.push("function"==typeof n.debug?n.debug("Unhandled received MESSAGE: "+d):void 0);break;case"RECEIPT":v.push("function"==typeof n.onreceipt?n.onreceipt(d):void 0);break;case"ERROR":v.push("function"==typeof r?r(d):void 0);break;default:v.push("function"==typeof n.debug?n.debug("Unhandled frame: "+d):void 0)}return v}}(this),this.ws.onclose=function(e){return function(){var n;return n="Whoops! Lost connection to "+e.ws.url,"function"==typeof e.debug&&e.debug(n),e._cleanUp(),"function"==typeof r?r(n):void 0}}(this),this.ws.onopen=function(e){return function(){return"function"==typeof e.debug&&e.debug("Web Socket Opened..."),l["accept-version"]=o.VERSIONS.supportedVersions(),l["heart-beat"]=[e.heartbeat.outgoing,e.heartbeat.incoming].join(","),e._transmit("CONNECT",l)}}(this)},n.prototype.disconnect=function(e){return this._transmit("DISCONNECT"),this.ws.onclose=null,this.ws.close(),this._cleanUp(),"function"==typeof e?e():void 0},n.prototype._cleanUp=function(){return this.connected=!1,this.pinger&&o.clearInterval(this.pinger),this.ponger?o.clearInterval(this.ponger):void 0},n.prototype.send=function(e,n,t){return null==n&&(n={}),null==t&&(t=""),n.destination=e,this._transmit("SEND",n,t)},n.prototype.subscribe=function(e,n,t){
var o;return null==t&&(t={}),t.id||(t.id="sub-"+this.counter++),t.destination=e,this.subscriptions[t.id]=n,this._transmit("SUBSCRIBE",t),o=this,{id:t.id,unsubscribe:function(){return o.unsubscribe(t.id)}}},n.prototype.unsubscribe=function(e){return delete this.subscriptions[e],this._transmit("UNSUBSCRIBE",{id:e})},n.prototype.begin=function(e){var n,t;return t=e||"tx-"+this.counter++,this._transmit("BEGIN",{transaction:t}),n=this,{id:t,commit:function(){return n.commit(t)},abort:function(){return n.abort(t)}}},n.prototype.commit=function(e){return this._transmit("COMMIT",{transaction:e})},n.prototype.abort=function(e){return this._transmit("ABORT",{transaction:e})},n.prototype.ack=function(e,n,t){return null==t&&(t={}),t["message-id"]=e,t.subscription=n,this._transmit("ACK",t)},n.prototype.nack=function(e,n,t){return null==t&&(t={}),t["message-id"]=e,t.subscription=n,this._transmit("NACK",t)},n}(),o={VERSIONS:{V1_0:"1.0",V1_1:"1.1",V1_2:"1.2",supportedVersions:function(){return"1.1,1.0"}},client:function(e,t){var a,i;return null==t&&(t=["v10.stomp","v11.stomp"]),a=o.WebSocketClass||WebSocket,i=new a(e,t),new n(i)},over:function(e){return new n(e)},Frame:t},"undefined"!=typeof window&&null!==window?(o.setInterval=function(e,n){return window.setInterval(n,e)},o.clearInterval=function(e){return window.clearInterval(e)},window.Stomp=o):"undefined"!=typeof exports&&null!==exports?exports.Stomp=o:self.Stomp=o}.call(this),angular.module("ilWebClient").controller("SurveyController",["$scope","CrudFactory","UserService","$mdDialog","UtilService","SurveyService","NotificationService","$window","API_URL","$q","HospitalThemeService",function(e,n,t,o,a,i,r,l,s,c,d){function u(){var e=new n.CrudRest("survey");return e.list().then(function(e){return e[0]&&m(e)?c.reject(C):void 0})}function m(e){var n=!1;return e.forEach(function(e){return e.isDeleted?void 0:n=!0}),n}function p(t){var o=new n.CrudRest("survey");o.list({hospital:t}).then(function(n){e.formOptions.surveys=n})}function f(e,n,t,o){switch(n){case"delete":g(e,t,o);break;case"create":u().then(function(){t(e)},function(e){r.show(e,"error")});break;default:t(e)}}function g(e,n,t){if(e.isActive){var o={title:"Remove active survey",body:"You cannot remove a survey that is currently in use."};a.openAlertModal(o)}else n([e,"survey"])}function h(e){return e.isActive}function v(n){e.surveyQuestions=[],e.surveyResults=[],delete e.filter.survey,p(n)}function b(t){t.page=e.page,t.limit=e.limit;var o=new n.CrudRest("survey/response/");o.list(t).then(function(n){e.surveyQuestions=n[0],e.surveyResults=n.splice(1,n.length-1)})}function y(){e.filter={},e.surveyQuestions=[],e.surveyResults=[]}function w(){}function S(e){i.download(e).then(function(n){location.href=s+"/survey/response/report?reportFormat=csv&survey="+e.id})["catch"](function(e){a.showErrorNotification(e,"Something went wrong! Please try again")})}var C="This Hospital already has a survey associated. Please edit the existing survey.";e.ROLES=t.getRoles(),e.preActionHook=f,e.reloadSurveys=v,e.loadSurveyResults=b,e.resetFilter=y,e.onPaginate=w,e.cannotDeleteItem=h,e.surveyQuestions=[],e.surveyResults=[],e.type="crud",e.formOptions={},e.filter={},e.page=1,e.limit=10,e.hospitalHasSurvey=!1,e.theme=null,e.columns={name:{name:"Survey Name",orderBy:"name"},description:{name:"Description"},status:{name:"Status"}},d.loadTheme().then(function(n){e.theme=n})["catch"](function(e){}),e.actions=[{title:"Download Results",action:"start",icon:{"zmdi-download":!0},color:"green",callback:S,shouldBeHidden:function(){return!1}}],e.$on("crud.created.survey",function(){v()}),v()}]),angular.module("ilWebClient").service("SurveyService",["Restangular",function(e){function n(e){return a.service.one().customGET(e.id+"/activate")}function t(e){return a.service.one().customGET(e.id+"/deactivate")}function o(e){return a.service.one().customGET("response/report",{reportFormat:"csv",survey:e.id})}this.service=e.service("survey/");var a=this;return{activate:n,deactivate:t,download:o}}]),angular.module("ilWebClient").controller("RoleChangeController",["$scope","$mdDialog","userIds","UserActionsService","CrudFactory","NotificationService","AutocompleteHelperService",function(e,n,t,o,a,i,r){function l(){o.bulkUpdateRole(t,e.role).then(function(t){n.hide(e.model),i.show("Users updated","success")},function(e){i.show(e.userFriendlyMessage||"Error! Please try again","error")})}function s(){new a.CrudRest("role").list().then(function(n){e.roles=n})}function c(n){var t=r.filter(e.searchText,e.roles,"name");return r.querySearch(null,null,t)}e.close=n.cancel,e.save=l,e.roles=[],e.role=null,e.searchText="",e.querySearch=c,s()}]),angular.module("ilWebClient").controller("UserController",["$scope","CrudFactory","UserActionsService","UserService","$mdDialog","NotificationService","UtilService","$window",function(e,n,t,o,a,i,r,l){function s(e){return e.isActive||!e.hasPasswordSet}function c(e){var n=JSON.parse(l.localStorage.getItem("user"));return!e.isActive||n.id===e.id}function d(e){return!e.isBlocked}function u(e){var n=R.indexOf(e);n>-1?R.splice(n,1):R.push(e)}function m(){return R.length>0}function p(e){var n={title:"Activate user",body:"Are you sure you want to activate this user?"};b(n,function(){t.setActiveStatus(e,!0).then(S)["catch"](function(e){i.show("Error! Please try again","error")})})}function f(e){o.getCurrentUser().then(function(n){if(e.id==n.id){var t={title:"Deactivate user",body:"You cannot deactivate your own account. Please contact the support team."};r.openAlertModal(t)}else g(e)})["catch"](function(e){i.show("Error! Please try again","error")})}function g(e){var n={title:"Deactivate user",body:"Are you sure you want to deactivate this user?"};b(n,function(){t.setActiveStatus(e,!1).then(C)["catch"](function(e){i.show("Error! Please try again","error")})})}function h(e){var n={title:"Unlock user",body:"Are you sure you want to unlock this user?"};b(n,function(){t.unlockUser(e).then(T)["catch"](function(e){i.show("Error! Please try again","error")})})}function v(){a.show({templateUrl:"js/user/role-change.html",controller:"RoleChangeController",parent:angular.element(document.body),locals:{userIds:R},bindToController:!0,escapeToClose:!1,fullscreen:!0}).then(function(e){w("updated"),R=[]},function(){})}function b(e,n){var t=a.confirm().title(e.title).htmlContent('<span class="modal-custom-body">'+e.body+"</span>").ariaLabel("Confirm").ok("OK").cancel("Cancel");a.show(t).then(function(){"function"==typeof n&&n()})}function y(){t.bulkSendActivationEmail(R).then(function(e){w("invited"),R=[]})["catch"](function(e){i.show(e.userFriendlyMessage||"Error! Please try again","error")})}function w(n){n&&"string"==typeof n&&i.show("User "+n,"success"),e.$broadcast("crud.reload.user")}function S(e){x(e,"activated",!0)}function C(e){x(e,"deactivated",!0)}function T(e){x(e,"unlocked",!0)}function x(n,t,o){t&&"string"==typeof t&&i.show("User "+t,"success"),o?w():e.$broadcast("crud.updated.user",n)}function E(){var t=new n.CrudRest("role");t.list().then(function(n){for(var t=[],o=0;o<n.length;o++)t.push({name:n[o].name,value:n[o].id});e.formOptions.roles=n,e.filterConfig.role.values=t})}function A(t){if(!e.PERMISSIONS||e.PERMISSIONS.ptrak){var o=new n.CrudRest("dictionary/POSITION");o.get(t).then(function(n){e.formOptions.positions=n.values})}}function k(t){if(!e.PERMISSIONS||e.PERMISSIONS.ptrak){var o=new n.CrudRest("dictionary/SPECIALIZATION");o.get(t).then(function(n){e.formOptions.specialisations=n.values})}}function I(e,n,t,o){switch(n){case"delete":N(e,t,o);break;case"create":t(e);break;case"edit":e.hospital&&(A({hospital:e.hospital.id}),k({hospital:e.hospital.id})),t(e);break;default:t(e)}}function N(e,n,t){o.getCurrentUser().then(function(t){if(e.id==t.id){var o={title:"Remove own account",body:"You cannot remove your own account. Please contact the support team."};r.openAlertModal(o)}else n([e,"user","The user will no longer be able to access the system"])})["catch"](function(e){i.show("Something went wrong! Please try again","error")})}function D(e){var n=JSON.parse(l.localStorage.getItem("user"));return e.id==n.id}e.ROLES=o.getRoles(),e.PERMISSIONS=o.getHospitalPermissions(),e.preActionHook=I,e.cannotDeleteItem=D;var R=[];e.columns={firstName:{name:"First Name",orderBy:"firstName"},lastName:{name:"Last Name",orderBy:"lastName"},email:{name:"Email"},role:{name:"Role",displayProperty:"name"},status:{name:"Status"}},e.buttons=[{name:"Send activation email",confirmation:b,callback:y,isEnabled:m,textColor:"#75A6CF",bgColor:"#ffffff",options:{title:"Send activation email",body:"Only inactive users will receive an activation email."}},{name:"Update user role",confirmation:v,isEnabled:m,textColor:"#75A6CF",bgColor:"#ffffff"}],e.userselect={name:"Select",onChange:function(e){u(e.id)}},e.actions=[{title:"Unlock",action:"start",icon:{"zmdi-lock-open":!0},color:"#75A6CF",callback:h,shouldBeHidden:d},{title:"Activate",action:"start",icon:{"zmdi-check-circle":!0},color:"green",callback:p,shouldBeHidden:s},{title:"Deactivate",action:"start",icon:{"zmdi-close-circle":!0},color:"red",callback:f,shouldBeHidden:c}],e.filterConfig={role:{type:"select",column:"role",placeholder:"by Role",allowMultipleSelection:!0,values:[]},status:{type:"select",column:"status",placeholder:"by Status",allowMultipleSelection:!0,values:[{name:"ACTIVE".toUpperCase(),value:"ACTIVE".toUpperCase()},{name:"INACTIVE".toUpperCase(),value:"INACTIVE".toUpperCase()},{name:"LOCKED".toUpperCase(),value:"LOCKED".toUpperCase()}]}},e.formOptions={users:[],roles:[],positions:[],specialisations:[]},e.$on("crud.toggledItems.user",function(e,n){R=n}),A(),k(),E()}]),angular.module("ilWebClient").service("UserActionsService",["Restangular",function(e){function n(n,t){return t=!!t,e.one("user").customPUT({},n.id+"/status",{isActive:t})}function t(n){return e.one("user").customPUT({},n.id+"/unblock")}function o(n,t){return e.one("user").customPUT({ids:n,role:t},"/role/bulk-update")}function a(n){return e.one("user").customPOST({ids:n},"/send-invitation")}function i(n,t){return e.one("beacon-allocation/notification/").customPOST(t,n.toString())}var r=this;r.service=e.service("user");var l={setActiveStatus:n,unlockUser:t,bulkUpdateRole:o,bulkSendActivationEmail:a,sendUserMessage:i};return l}]),angular.module("ilWebClient").service("UserService",["Restangular","$q","$state","$window","ROLES","SocketService","$cookies","HospitalThemeService",function(e,n,t,o,a,i,r,l){function s(){var e=o.localStorage.getItem("user");e&&(E=JSON.parse(e))}function c(n){return e.one("user").customPOST({email:n.email,password:n.password},"login")}function d(){i.disconnect(),l.clearTheme(),o.localStorage.clear(),r.remove("security-cookie"),E={},t.transitionTo("login")}function u(n){return e.one("user/resetPassword").customPUT({email:n})}function m(n,t,o){return e.one("user/"+o).customPUT({password:n,token:t})}function p(){return n(function(e,n){e(JSON.parse(o.localStorage.getItem("user")))})}function f(e){if(!e)throw new Error("User data must be present when saving it.");return n(function(n,t){e.token&&o.localStorage.setItem("token",e.token),e.user&&o.localStorage.setItem("user",JSON.stringify(e.user)),E=e.user,n(E)})}function g(){return void 0!==o.localStorage.getItem("token")}function h(e){if(!e)throw new Error("Please provide a role to check!");if(s(),E.authorities)for(var n=0;n<E.authorities.length;n++)if(E.authorities[n].authority===e)return!0;return!1}function v(){var e={};for(var n in a)a.hasOwnProperty(n)&&(e[n]=h(a[n]));return e}function b(){var e=[];s();for(var n=0;n<E.authorities.length;n++)e.push(E.authorities[n].authority);return e}function y(){return s(),void 0!=E.tenant?angular.copy(E.components):null}function w(n,t){return e.one("user/").customGET("validate-token",{token:n,tokenTypeRegister:t})}function S(){return g()&&E.checkInactivity?e.one("user/invalidate-token").customPUT({}):n.reject("Keep token.")}function C(){return e.one("user/mobileUrl/ios").customGET("")}function T(){return e.one("user/mobileUrl/android").customGET("")}var x=this;x.service=e.service("user");var E={},A={login:c,logout:d,setCurrentUser:f,getCurrentUser:p,requestPasswordReset:u,setNewPassword:m,isAuthenticated:g,hasRole:h,getRoles:v,getHospitalPermissions:y,getRolesArray:b,checkEmailToken:w,invalidateToken:S,getStoreIosURL:C,getStoreAndroidURL:T};return s(),A}]),angular.module("ilWebClient").directive("animatedCheck",function(){return{restrict:"E",replace:!0,templateUrl:"js/common/animatedCheckmark/animatedCheckmark.html",link:function(e,n,t){e.textColor=t.textColor,e.checked=!1,e.$watch(t.isChecked,function(t){t?(e.checked=!0,n.addClass("checked")):(e.checked=!1,n.removeClass("checked"))})}}}),function(){function e(){var e=this;e.state=1,e.toggle=function(n){e.state=n,e.onToggle(n)}}angular.module("ilWebClient").component("buttonToggle",{templateUrl:"js/components/button-toggle/il-button-toggle.html",controller:e,controllerAs:"buttonToggle",bindings:{onToggle:"="}})}(),function(){function e(){var e=this;e.expanded=!1,e.expandIcon="expand_more",e.$onInit=function(){e.title=e.allocation.patientViewName?e.allocation.patientViewName:e.allocation.allocationName,e.subheading=e.allocation.assetType?e.allocation.assetType:"Patient Type",e.content={titles:["Status",e.allocation.locationLabel],data:[e.allocation.allocationStatus?e.allocation.allocationStatus:"N/A",e.allocation.location.room?e.allocation.location.room:"N/A"]},e.hiddenContent={titles:["Date"],data:[e.allocation.entryDate]}},e.expand=function(){e.expanded=!e.expanded,e.expanded?e.expandIcon="expand_less":e.expandIcon="expand_more"}}angular.module("ilWebClient").component("ilCard",{templateUrl:"js/components/cards/il-card.html",controller:e,controllerAs:"card",bindings:{allocation:"<",actions:"<",iconActions:"<"}})}(),function(){function e(){}angular.module("ilWebClient").component("databar",{templateUrl:"js/components/databar/il-databar.html",controller:e,controllerAs:"databar",bindings:{freeBeacons:"<",usedBeacons:"<",onAllocate:"="}})}(),function(){function e(){console.log("Filterbar Controller JS");var e=this;e.appliedFilters={search:"",filters:{}},e.clear=function(){console.log("clear"),e.appliedFilters={search:"",filters:{}},e.onFiltersApplied(e.appliedFilters)},e.onSearchInput=function(){e.onFiltersApplied(e.appliedFilters)},e.onFilterSelected=function(){e.onFiltersApplied(e.appliedFilters)}}angular.module("ilWebClient").component("ilFilterbar",{templateUrl:"js/components/filterbar/il-filterbar.html",controller:e,controllerAs:"filterbar",bindings:{filters:"<",onFiltersApplied:"="}})}(),function(){function e(){function e(e,n){var t;t=-1===n.id?e.indexOf(n.label):e.indexOf(n.id),n.selected?-1===t&&(-1===n.id?e.push(n.label):e.push(n.id)):t>-1&&e.splice(t,1)}var n=this,t={searchContent:"",room:[],doctor:[],status:[],type:[]};n.clearAll=function(){t.room=[],t.doctor=[],t.type=[],t.status=[],angular.forEach(n.filters,function(e){angular.forEach(e.options,function(e){e.selected=!1})}),n.onFiltersApplied(t)},n.clearSection=function(e){switch(e){case"Location":t.room=[];break;case"Physician":t.doctor=[];break;case"Asset Type":t.type=[];break;case"Status":t.status=[];break;default:console.log("Filter does not exist")}angular.forEach(n.filters,function(n){n.title===e&&angular.forEach(n.options,function(e){e.selected=!1})}),n.onFiltersApplied(t)},n.onSearchInput=function(e){t.searchContent=e,n.onFiltersApplied(t)},n.onFilterSelected=function(o,a){switch(a){case"Location":e(t.room,o);break;case"Physician":e(t.doctor,o);break;case"Asset Type":e(t.type,o);break;case"Status":e(t.status,o);break;default:console.log("Filter does not exist")}n.onFiltersApplied(t)}}angular.module("ilWebClient").component("sidefilter",{templateUrl:"js/components/sidefilter/il-sidefilter.html",controller:e,controllerAs:"sidefilter",bindings:{filters:"<",onFiltersApplied:"="}}).directive("updateOnEnter",function(){return{restrict:"A",require:"ngModel",link:function(e,n,t,o){n.on("keyup",function(n){return 13!==n.keyCode?n.stopImmediatePropagation():(o.$commitViewValue(),void e.$apply(o.$setTouched))})}}})}(),function(){function e(e){function n(){t.mdSideNav&&t.mdSideNav.toggle()}var t=this;t.$onInit=function(){if(!t.list)throw new Error("IL SideNav: List not defined");if(!angular.isArray(t.list))throw new Error("IL SideNav: List is not an array");t.toggle.go=n,t.mdSideNav=null,t.selectedIndex=0},t.onNavItemClicked=function(e){t.selectedIndex=e,t.mdSideNav.close()},e.when("left").then(function(e){t.mdSideNav=e})}e.$inject=["$mdComponentRegistry"],angular.module("ilWebClient").component("sidenav",{templateUrl:"js/components/sidenav/il-sidenav.html",controller:e,controllerAs:"sideNav",bindings:{toggle:"=",list:"<"}})}(),function(){function e(e){var n=this;n.$onInit=function(){if(!n.tabs)throw new Error("IL Tabs: Tabs not defined");if(!angular.isArray(n.tabs))throw new Error("IL Tabs: Tabs is not an array")},n.onTabSelected=function(n,t){e.transitionTo(n.route)}}e.$inject=["$state"],angular.module("ilWebClient").component("tabbar",{templateUrl:"js/components/tabs/il-tabbar.html",controller:e,controllerAs:"tabbar",bindings:{tabs:"<"}})}(),function(){function e(e,n){var t=this;t.$onInit=function(){t.elevation||(t.elevation=1)},t.menu=function(){console.log("menu clicked"),t.onMenu()},t.logout=function(){console.log("logging out"),e.logout()},t.openUserMenu=function(e,n){e.open(n)}}e.$inject=["UserService","NotificationService"],angular.module("ilWebClient").component("toolbar",{templateUrl:"js/components/toolbar/il-toolbar.html",controller:e,controllerAs:"toolbar",bindings:{logo:"<",user:"<",onMenu:"&",elevation:"<"}})}(),angular.module("ilWebClient").directive("beaconCard",["UserService",function(e){return{scope:{allocation:"=",viewCallback:"=",editCallback:"=",cardType:"=",discardCallback:"=",imCallback:"=",refreshCallback:"="},restrict:"E",templateUrl:"js/dashboard/beacon/card.html",link:function(n,t,o){function a(e){var t;return t="string"==typeof e.meta?n.ROLES.GPER?e.allocationName:e.patientViewName.toUpperCase():n.ROLES.GPER?e.allocationName:e.patientViewName.toUpperCase()}function i(e){var t=e.location&&e.location.color?e.location.color:"transparent",o={};return"patient"==n.cardType.toLowerCase()&&(o["border-left"]="5px solid "+t),o}n.ROLES=e.getRoles(),n.getCardStyle=i,n.getPatientName=a}}}]),angular.module("ilWebClient").controller("AssetFormController",["$scope","$mdDialog","beacons","CrudFactory","model","NotificationService","AutocompleteHelperService","BeaconService","UtilService","GatewayService",function(e,n,t,o,a,i,r,l,s,c){function d(){e.validationErrors=null;var t=e.model.id?T.update.bind(T):T.create.bind(T);t(e.model).then(function(t){n.hide(t),e.model.id?i.show("Successfully updated","success"):i.show("Successfully allocated","success")},function(n){e.validationErrors=n.data.webErrors,i.show("Error! Please try again","error")})}function u(){a.assetType&&"LOCATION"===a.assetType.beaconProcessingType&&(a.meta.gateway=[],e.selectedGateway=null)}function m(){}function p(n){n&&(e.model.meta.gateway=[],e.model.meta.gateway.push(n.uuid))}function f(e){var n=s.getBeaconTypeFromQRCode(e);n&&"IBEACON"===n?h(e):n&&"NEARABLE"===n&&g(e)}function g(n){var t=3==n.split(":").length?n.split(":")[1].replace("UUID","").trim():3==n.split("+").length?n.split("+")[1].replace("UUID","").trim():"";e.loadingBeacon=!0,l.loadNearableByScannedData(t).then(function(n){for(var t=!1,o=0;o<e.beacons.length;o++)n.id===e.beacons[o].id&&(t=!0);t||e.beacons.push(n),e.loadingBeacon=!1,e.searchTextBeacon=n.name,i.show("Beacon found","success"),e.model.beacon=n,document.querySelector("#beaconAutoCompleteId").blur()})["catch"](function(n){e.loadingBeacon=!1,s.showErrorNotification(n,"Could not load beacon")})}function h(n){if(n&&3===n.split("/").length){for(var t=s.numToMAC(n),o=0;o<e.beacons.length;o++)if(t&&e.beacons[o].macAddr&&t.toUpperCase()===e.beacons[o].macAddr.toUpperCase())return void(e.searchTextBeacon=e.beacons[o].name);e.loadingBeacon=!0,l.loadIbeaconByScannedData(t).then(function(n){for(var t=!1,o=0;o<e.beacons.length;o++)n.id===e.beacons[o].id&&(t=!0);t||e.beacons.push(n),e.loadingBeacon=!1,e.searchTextBeacon=n.name,i.show("Beacon found","success")})["catch"](function(n){e.loadingBeacon=!1,s.showErrorNotification(n,"Could not load beacon")})}}function v(){var n=new o.CrudRest("dictionary/asset/type"),t={};a&&a.hospital&&(t.hospital=a.hospital.id),n.list(t).then(function(n){e.types=n})}function b(){c.getUnassigned().then(function(n){e.gateways=n,y()})["catch"](function(e){s.showErrorNotification(e,"Could not load gateways")})}function y(){a.meta&&a.meta.gateway&&a.meta.gateway.length>0?c.getGateway(a.meta.gateway[0]).then(function(n){e.selectedGateway=n,e.gateways.push(n)}):null==a.meta?a.meta={gateway:[]}:a.meta.gateway=[]}function w(){a.beacon&&e.beacons.push(a.beacon);for(var n=0;n<t.length;n++)a&&a.hospital?t[n].hospital.id==a.hospital.id&&e.beacons.push(t[n]):e.beacons.push(t[n])}function S(){n.cancel()}function C(e,n,t){var o=r.filter(e,n,t);return r.querySearch(null,null,o)}e.close=S,e.save=d,e.searchBeaconForQRCode=f,e.onSelectGateway=p,e.onSelectAssetType=u,e.onSelectBeacon=m,e.searchTextBeacon="",e.model=a||{},e.model.type="ASSET",e.beacons=[],e.types=[],e.gateways=[],e.validationErrors=null,e.loadingBeacon=!1,e.querySearch=C;var T=new o.CrudRest("beacon-allocation");b(),w(),v(),e.onBlur=function(){if(null===e.model.beacon){var n=r.filter(e.searchTextBeacon,t,"name");for(var o in n){var a=n[o];a.name.toUpperCase()===e.searchTextBeacon.toUpperCase()&&(console.log(e.form.autocomplete),e.model.beacon=a)}}}}]),angular.module("ilWebClient").controller("HospitalFormController",["$scope","$mdDialog","beacons","type","CrudFactory","model","AutocompleteHelperService",function(e,n,t,o,a,i,r){function l(){n.hide(e.model.hospital)}function s(){n.cancel()}function c(n){var t=r.filter(e.searchText,e.hospitals,"name");return r.querySearch(null,null,t)}e.close=s,e.proceed=l,e.model=i||{},e.beacons=t,e.querySearch=c;var d=new a.CrudRest("hospital"),u={};"asset"===o?u.atrak=!0:"patient"===o&&(u.ptrak=!0),d.list(u).then(function(n){e.hospitals=n}),e.types=[{name:"PCA PUMP"}]}]),angular.module("ilWebClient").controller("PatientFormController",["$scope","$mdDialog","beacons","CrudFactory","model","NotificationService","AutocompleteHelperService","UtilService","BeaconService",function(e,n,t,o,a,i,r,l,s){function c(e){var n=l.getBeaconTypeFromQRCode(e);n&&"IBEACON"===n?u(e):n&&"NEARABLE"===n&&d(e)}function d(n){var t=3==n.split(":").length?n.split(":")[1].replace("UUID","").trim():3==n.split("+").length?n.split("+")[1].replace("UUID","").trim():"";e.loadingBeacon=!0,s.loadNearableByScannedData(t).then(function(n){for(var t=!1,o=0;o<e.beacons.length;o++)n.id===e.beacons[o].id&&(t=!0);t||e.beacons.push(n),e.loadingBeacon=!1,e.searchTextBeacon=n.name,e.model.beacon=n,document.querySelector("#beaconAutoCompleteId").blur()})["catch"](function(n){e.loadingBeacon=!1,l.showErrorNotification(n,"Could not load beacon")})}function u(n){if(n&&3===n.split("/").length){for(var t=l.numToMAC(n),o=0;o<e.beacons.length;o++)if(t&&e.beacons[o].macAddr&&t.toUpperCase()===e.beacons[o].macAddr.toUpperCase())return void(e.searchTextBeacon=e.beacons[o].name);e.loadingBeacon=!0,s.loadIbeaconByScannedData(t).then(function(n){for(var t=!1,o=0;o<e.beacons.length;o++)n.id===e.beacons[o].id&&(t=!0);t||e.beacons.push(n),e.loadingBeacon=!1,e.searchTextBeacon=n.name,i.show("Beacon found","success")})["catch"](function(n){e.loadingBeacon=!1,l.showErrorNotification(n,"Could not load beacon")})}}function m(){e.validationErrors=null;var t=e.model.id?w.update.bind(w):w.create.bind(w);t(e.model).then(function(t){n.hide(t),e.model.id?i.show("Successfully updated","success"):i.show("Successfully allocated","success")},function(n){e.validationErrors=n.data.webErrors,i.show("Error! Please try again","error")})}function p(){a.beacon&&e.beacons.push(a.beacon);for(var n=0;n<t.length;n++)a&&a.hospital?t[n].hospital.id==a.hospital.id&&e.beacons.push(t[n]):e.beacons.push(t[n])}function f(){n.cancel()}function g(e,n,t){var o=r.filter(e,n,t);return r.querySearch(null,null,o)}function h(n,t,a){var i=new o.CrudRest(n),r={hospital:e.model.hospital?e.model.hospital.id:null},l=a===!0?i.get(r):i.list(r);l.then(function(n){n=n.plain(),e[t]=n.hasOwnProperty("values")?n.values:n})}function v(){h("user/doctor","doctors")}function b(){h("user/anesthesiologist","anesthesiologists")}function y(){h("dictionary/SURGERY","surgeryTypes",!0)}e.countryCodes=allCountries,e.close=f,e.save=m,e.searchBeaconForQRCode=c,e.model=a||{},e.model.type="PATIENT",e.validationErrors=null,e.minDate=new Date,e.loadingBeacon=!1,e.maxDatetimeLocal=new Date("9999/12/31T00:00:00"),e.phoneNumber="",e.countryCode=e.countryCodes[0],e.onAddPhoneNumber=function(){a.meta.phoneNumbers.push("("+e.countryCode[2]+")"+e.phoneNumber),e.countryCode=e.countryCodes[0],e.phoneNumber=""},e.model.meta?e.model.meta.phoneNumbers=e.model.meta.phoneNumbers||[]:e.model.meta={phoneNumbers:[]},e.model.meta.surgeryDate&&(e.model.meta.surgeryDate=new Date(e.model.meta.surgeryDate)),e.model.meta.surgeryTime&&(e.model.meta.surgeryTime=new Date(e.model.meta.surgeryTime)),e.model.meta.surgeryDateTime&&(e.model.meta.surgeryDateTime=new Date(e.model.meta.surgeryDateTime)),e.beacons=[],e.doctors=[],e.anesthesiologists=[],e.nurses=[],e.surgeryTypes=[],e.querySearch=g;var w=new o.CrudRest("beacon-allocation");e.onBlur=function(){if(null===e.model.beacon){var n=r.filter(e.searchTextBeacon,t,"name");for(var o in n){var a=n[o];a.name.toUpperCase()===e.searchTextBeacon.toUpperCase()&&(e.model.beacon=a)}}},y(),v(),b(),p()}]),angular.module("ilWebClient").directive("associateAction",["HospitalThemeService",function(e){return{scope:{type:"@",freeBeaconCount:"@",addCallback:"="},restrict:"E",templateUrl:"js/dashboard/directives/associateAction.html",link:function(n,t,o){t.addClass(""),e.loadTheme().then(function(e){n.theme=e})["catch"](function(e){})}}}]),angular.module("ilWebClient").directive("dateOffset",[function(){return{require:"ngModel",link:function(e,n,t,o){var a=function(e){return e},i=function(e){var n=e.getTimezoneOffset();return new Date(e.getTime()-60*n*1e3)};o.$formatters.unshift(a),o.$parsers.unshift(i)}}}]),angular.module("ilWebClient").directive("filterArea",["CrudFactory","UserService",function(e,n){return{scope:{type:"="},restrict:"E",templateUrl:"js/dashboard/directives/filter.html",link:function(t,o,a){function i(){t.filter={},f=null,s(),c(),u(),m(),t.$emit("dashboard.quick-filter.clear"),t.$emit("dashboard.filter")}function r(){s(),t.$emit("dashboard.quick-filter.clear"),t.$emit("dashboard.filter",t.filter,l(t.filter.assetTypeId))}function l(e){for(var n=0;n<t.filters.types.length;n++)if(t.filters.types[n].id==e)return t.filters.types[n].name}function s(){var n=new e.CrudRest("room");n.list().then(function(e){t.filters.rooms=e})}function c(){var n=new e.CrudRest("dictionary/asset/type");n.list().then(function(e){for(var n=[],o=0;o<e.length;o++)n.push({name:e[o].name,id:e[o].id});t.filters.types=n})}function d(n){var o=n?"dictionary/asset/type/"+n+"/statusObj":"dictionary/asset/type/status",a=new e.CrudRest(o);a.list().then(function(e){t.filters.statuses=e})}function u(){var n=new e.CrudRest("user/doctor");n.list().then(function(e){t.filters.doctors=e})}function m(e){t.filter.status=null,d(e)}function p(){d(),c(),s(),u()}t.resetFilters=i,t.applyFilters=r,t.reloadStatuses=m,t.showStatuses=!0,t.ROLES=n.getRoles();var f=null;t.filter={},t.filters={rooms:[],statuses:[],doctors:[],hospitals:[],surgery_types:[],types:[]},t.$on("dashboard.filter.clear",function(e,n){t.filter={},f=null}),p()}}}]),angular.module("ilWebClient").directive("freeTextSearchForm",[function(){return{scope:{},restrict:"E",templateUrl:"js/dashboard/directives/free-text-search-form.html",link:function(e,n,t){function o(n){e.$emit("dashboard.quick-filter.clear"),e.$emit("dashboard.search",{searchContent:n})}function a(){e.search.text="",e.$emit("dashboard.quick-filter.clear"),e.$emit("dashboard.search")}e.search=o,e.reset=a,e.$on("dashboard.search.clear",function(n,t){e.search.text=""})}}}]),angular.module("ilWebClient").directive("tgThermometerVertical",["$window",function(e){return{restrict:"E",scope:!0,templateUrl:"js/dashboard/directives/thermometer.html",link:function(e,n,t){e.size=t.size,e.height=t.height,e.percent=t.percent,console.log(e)}}}]),angular.module("ilWebClient").controller("IMFormController",["$scope","$mdDialog","allocation","UserActionsService","NotificationService",function(e,n,t,o,a){function i(){o.sendUserMessage(t.allocationId,e.message).then(l)["catch"](s)}function r(){n.cancel()}function l(e){a.show("Your message was sent successfully","success"),r()}function s(e){a.show("Error! Please try again","error")}e.message={},e.close=r,e.sendMessage=i}]),angular.module("ilWebClient").controller("AssetViewController",["$scope","$mdDialog","allocation","BeaconService","CrudFactory","UserService","mapOptions","mapFeatures",function(e,n,t,o,a,i,r,l){function s(){e.allocationOptions=r,e.allocationFeatures=l}function c(){if(!m){m=!0;var n={beaconAllocationId:d.allocation.id,page:e.page,limit:e.limit},t=new a.CrudRest("beacon-allocation/history/");t.list(n).then(function(n){for(var t=0;t<n.length;t++)d.allocation.history.push(n[t]);e.page+=1,0==n.length&&(u=!0),m=!1})}}var d=this;d.allocation=t,d.allocation.history=[],d.ROLES=i.getRoles();var u=!1;s();var m=!1;e.page=1,e.limit=30,d.close=function(){n.cancel()},c(),d.edit=function(){n.show({templateUrl:"js/dashboard/create/asset.html",parent:angular.element(document.body),controller:"AssetFormController",locals:{model:d.allocation,beacons:o.available()},bindToController:!0,escapeToClose:!1,fullscreen:!0}).then(function(e){},function(){getAvailableBeacons()})},d.discard=function(){BeaconAllocationService.getAllocation(d.allocation).then(function(t){var o=n.confirm().title("Would you like to discharge the selected allocation?").htmlContent('<span class="modal-custom-body">You will no longer be able to track the '+e.type+"</span>").ariaLabel("Discard allocation").ok("Yes").cancel("No");n.show(o).then(function(){BeaconAllocationService.deallocate(t).then(function(){NotificationService.show("Successfully discharged","success")})},function(){})},function(e){NotificationService.show("Error! Please try again","error")})}}]),angular.module("ilWebClient").controller("PatientViewController",["$scope","$mdDialog","allocation","CrudFactory","UserService","BeaconService","BeaconAllocationService","mapOptions","mapFeatures",function(e,n,t,o,a,i,r,l,s){function c(){e.allocationOptions=l,e.allocationFeatures=s}function d(e){return e.color?"5px solid "+e.color:"5px solid transparent"}function u(){if(!f){f=!0;var n={beaconAllocationId:m.allocation.id,page:e.page,limit:e.limit},t=new o.CrudRest("beacon-allocation/history/");t.list(n).then(function(n){for(var t=0;t<n.length;t++)m.allocation.history.push(n[t]);e.page+=1,0===n.length&&(p=!0),f=!1})}}var m=this;m.allocation=t,m.allocation.history=[],e.getRoomColor=d,e.ROLES=a.getRoles(),e.theme=null;var p=!1;c(),e.$on("leafletDirectiveGeoJson.mouseover",function(e,n){});var f=!1;e.page=1,e.limit=30,m.close=function(){n.cancel()},u(),m.edit=function(){n.show({templateUrl:"js/dashboard/create/patient.html",parent:angular.element(document.body),controller:"PatientFormController",locals:{model:m.allocation,beacons:i.available()},bindToController:!0,escapeToClose:!1,fullscreen:!0}).then(function(e){},function(){getAvailableBeacons()})},m.discard=function(){r.getAllocation(m.allocation).then(function(t){var o=n.confirm().title("Would you like to discharge the selected allocation?").htmlContent('<span class="modal-custom-body">You will no longer be able to track the '+e.type+"</span>").ariaLabel("Discard allocation").ok("Yes").cancel("No");n.show(o).then(function(){r.deallocate(t).then(function(){NotificationService.show("Successfully discharged","success")})},function(){})},function(e){
NotificationService.show("Error! Please try again","error")})}}]),function(){function e(){return{restrict:"EA",scope:{clPages:"=",clAlignModel:"=",clPageChanged:"&",clSteps:"=",clCurrentPage:"="},controller:n,controllerAs:"vm",template:['<md-button class="md-icon-button" aria-label="First" ng-click="vm.gotoFirst()" md-colors="{color: \'accent-400\'}">{{ vm.first }}</md-button>','<md-button class="md-icon-button" aria-label="Previous" ng-click="vm.gotoPrev()" ng-show="vm.index - 1 >= 0">&#8230;</md-button>','<md-button class="md-icon-button" aria-label="Go to page {{i+1}}" ng-repeat="i in vm.stepInfo"',' ng-click="vm.goto(vm.index + i)" ng-show="vm.page[vm.index + i]" '," ng-class=\"{'md-primary': vm.page[vm.index + i] == clCurrentPage}\">"," {{ vm.page[vm.index + i] }}","</md-button>",'<md-button class="md-icon-button" aria-label="Next" ng-click="vm.gotoNext()" ng-show="vm.index + vm.clSteps < clPages">&#8230;</md-button>','<md-button class="md-icon-button" aria-label="Last" ng-click="vm.gotoLast()" md-colors="{color: \'accent-400\'}">{{ vm.last }}</md-button>'].join("")}}function n(e){var n=this;n.first="<<",n.last=">>",n.index=0,n.clSteps=e.clSteps,n["goto"]=function(t){e.clCurrentPage=n.page[t]},n.gotoPrev=function(){e.clCurrentPage=n.index,n.index-=n.clSteps},n.gotoNext=function(){n.index+=n.clSteps,e.clCurrentPage=n.index+1},n.gotoFirst=function(){n.index=0,e.clCurrentPage=1},n.gotoLast=function(){n.index=parseInt(e.clPages/n.clSteps)*n.clSteps,n.index===e.clPages?n.index=n.index-n.clSteps:"",e.clCurrentPage=e.clPages},e.$watch("clCurrentPage",function(t){n.index=parseInt((t-1)/n.clSteps)*n.clSteps,e.clPageChanged()}),e.$watch("clPages",function(){n.init()}),n.init=function(){n.stepInfo=function(){for(var e=[],t=0;t<n.clSteps;t++)e.push(t);return e}(),n.page=function(){for(var n=[],t=1;t<=e.clPages;t++)n.push(t);return n}()}}angular.module("cl-paging",[]).directive("clPaging",e),e.$inject=[],n.$inject=["$scope"]}(),function(){function e(e,n,t,o,a){function i(){var e=new t.CrudRest("beacon-allocation");e.list(d.filters).then(function(e){d.cards=[],d.allocations=[],e.forEach(function(e){0===d.allocations.filter(function(n){return n.allocationId===e.allocationId}).length&&d.allocations.push(e)})})}function r(){}function l(e,n){return e.location&&(e.location.area||e.location.room)?e.location.area&&!e.location.room?e.location.area:!e.location.area&&e.location.room?e.location.room:e.location.area+", "+e.location.room:"-"}function s(e){console.log("Getting details for "+e.allocationName),d.ROLES.GPER||o.getAllocation(e).then(function(t){t.location=e.location,t.locationLabel=e.locationLabel,t.entryDate=e.entryDate;var a="asset_"+e.beaconProcessingType.toLowerCase();o.getAllocationMap(t).then(function(e){var o={mapImageUrl:e.mapUrl,height:e.height||400,width:e.width||400},i=[JSON.parse(e.roomFeature),JSON.parse(e.beaconPosition)];n.show({templateUrl:"js/dashboard/view/"+a+".html",parent:angular.element(document.body),controller:"AssetViewController",controllerAs:"assetDetails",locals:{allocation:t,mapOptions:o,mapFeatures:i,page:1},bindToController:!0,escapeToClose:!1,fullscreen:!0,clickOutsideToClose:!0}).then(function(e){},function(){})})},function(e){})}function c(e){}var d=this;d.allocations=[],d.filtersApplied=!1,d.ROLES=a.getRoles(),d.currentPage=1,d.pages=100,d.selectedItems=[],d.actions=[{icon:"gps_fixed",onAction:c},{icon:"info",onAction:s}],d.columns={allocationName:{name:"ID"},assetType:{name:"Asset type"},location:{name:"LOCATION",displayProperty:"room",hideColumn:function(e,n){return!e.location||!e.location.isCurrent},getValue:function(e,n){return"LOCATION"!==e.beaconProcessingType||this.hideColumn(e,n)?"-":l(e,n)}},lastKnownLocation:{name:"LAST KNOWN LOCATION",columnAlias:"location",displayProperty:"room",hideColumn:function(e,n){return!e.location||e.location.isCurrent},getValue:function(e,n){return"LOCATION"!==e.beaconProcessingType||this.hideColumn(e,n)?"-":l(e,n)}},allocationStatus:{name:"STATUS"},entryDate:{name:"IN",isDate:!0,getValue:function(e,n){return"LOCATION"===e.beaconProcessingType?e.entryDate:e.movementStartDate}},movementCount:{name:"COUNT"}},d.getMainContentFromAllocation=function(e){return{one:e.location.room?e.location.room:"N/A",two:e.allocationStatus?e.allocationStatus:"N/A"}},d.getHiddenContentFromAllocation=function(e){return{one:e.entryDate}},d.onNewPage=function(){console.log("New Page")},d.$onChanges=function(e){e.filters&&!angular.equals(e.filters.previousValue,{})&&(d.filtersApplied=r(),i())},i(),d.getAssetDetails=function(e){s(e)}}e.$inject=["$scope","$mdDialog","CrudFactory","BeaconAllocationService","UserService"],angular.module("ilWebClient").config(["$stateProvider",function(e){e.state("main.dashboard.assets",{url:"/assets",component:"assetsTabController",resolve:{layout:function(){return"column"},layoutFill:function(){return!0}}})}]).component("assetsTabController",{templateUrl:"js/dashboard/tabs/assets/db-assets-tab.html",controller:e,controllerAs:"assetsTab",bindings:{filters:"<",viewState:"<",layout:"@",layoutFill:"@"}})}(),function(){function e(e,n,t,o,a){function i(){var e=new t.CrudRest("beacon-allocation");e.list(m.filters).then(function(e){e.forEach(function(e){0===m.allocations.filter(function(n){return n.allocationId===e.allocationId}).length&&m.allocations.push(e)})})}function r(){}function l(e,n){return e.location&&(e.location.area||e.location.room)?e.location.area&&!e.location.room?e.location.area:!e.location.area&&e.location.room?e.location.room:e.location.area+", "+e.location.room:"-"}function s(e){console.log("Setting notification for "+e.title)}function c(e){console.log("Sending message to "+e.title)}function d(e){console.log("Getting details for "+e.allocationName),m.ROLES.GPER||a.getAllocation(e).then(function(t){t.location=e.location,t.locationLabel=e.locationLabel,t.entryDate=e.entryDate,a.getAllocationMap(t).then(function(e){var o={mapImageUrl:e.mapUrl,height:e.height||400,width:e.width||400},a=[JSON.parse(e.roomFeature),JSON.parse(e.beaconPosition)];n.show({templateUrl:"js/dashboard/view/patient_location.html",parent:angular.element(document.body),controller:"PatientViewController",controllerAs:"patientDetails",locals:{allocation:t,mapOptions:o,mapFeatures:a,page:1},bindToController:!0,escapeToClose:!1,fullscreen:!0,clickOutsideToClose:!0}).then(function(e){},function(){})})},function(e){})}function u(e){}function c(e){n.show({templateUrl:"js/dashboard/im/im.html",parent:angular.element(document.body),controller:"IMFormController",locals:{allocation:e},bindToController:!0,escapeToClose:!1,clickOutsideToClose:!0,fullscreen:!0}).then(function(e){},function(){})}var m=this;m.cards=[],m.allocations=[],m.filtersApplied=!1,m.ROLES=o.getRoles(),m.currentPage=1,m.pages=100,m.columns={allocationName:{name:"PATIENT ID"},patientViewName:{name:"PATIENT NAME",hideColumn:function(e,n){return m.ROLES.GPER}},surgeryType:{name:"PROCEDURE"},surgeryDateTime:{name:"PROCEDURE TIME",isDate:!0},physician:{name:"PHYSICIAN"},nurseName:{name:"NURSE"},anesthesologist:{name:"ANESTEHSOLOGIST"},location:{name:"LOCATION",displayProperty:"room",hideColumn:function(e,n){return!e.location||!e.location.isCurrent},getValue:function(e,n){return this.hideColumn(e,n)?"-":l(e,n)}},lastKnownLocation:{name:"LAST KNOWN LOCATION",columnAlias:"location",displayProperty:"room",hideColumn:function(e,n){return!e.location||e.location.isCurrent},getValue:function(e,n){return this.hideColumn(e,n)?"-":l(e,n)}},assetDescription:{name:"DESCRIPTION"}},m.actions=[{icon:"notifications_none",hidden:!0,onAction:s},{icon:"message",hidden:!1,onAction:c},{icon:"gps_fixed",onAction:u},{icon:"info",onAction:d}],m.onNewPage=function(){console.log("New Page")},m.$onChanges=function(e){e.filters&&!angular.equals(e.filters.previousValue,{})&&(m.filtersApplied=r(),i())},i()}e.$inject=["$scope","$mdDialog","CrudFactory","UserService","BeaconAllocationService"],angular.module("ilWebClient").config(["$stateProvider",function(e){e.state("main.dashboard.patients",{url:"/patients",component:"patientsTabController",resolve:{layout:function(){return"column"},layoutFill:function(){return!0}}})}]).component("patientsTabController",{templateUrl:"js/dashboard/tabs/patients/db-patients-tab.html",controller:e,controllerAs:"patientsTab",bindings:{filters:"<",viewState:"<",layout:"@",layoutFill:"@"}})}(),function(){function e(e){var n=this;n.saveDisabled=!0,n.area={name:"",parent:"",defaultStatus:"",description:"",settings:{notfications:!1,restricted:!1,automaticDischarged:{enabled:!1,delay:0},alarm:{enabled:!1,delay:0}}},n.close=function(){e.hide()},n.save=function(){e.hide()}}e.$inject=["$mdDialog"],angular.module("ilWebClient").controller("areaAllocation",e)}(),function(){function e(e){var n=this;n.saveDisabled=!0,n.setGateway=!1,n.asset={id:"",gateway:null,beacon:null,type:"",description:""},n.close=function(){e.hide()},n.save=function(){e.hide()}}e.$inject=["$mdDialog"],angular.module("ilWebClient").controller("assetAllocation",e)}(),function(){function e(e){var n=this;n.saveDisabled=!0,n.patient={information:{beacon:null,id:"",firstName:"",lastName:""},description:{race:"",stature:"",hairColor:"",description:"",type:"default"},procedure:{type:"",date:"",physician:"",anasthesiologist:"",nurse:""},contact:{primary:"",associated:[]}},n.phone={country:"",number:""},n.close=function(){e.hide()},n.save=function(){e.hide()}}e.$inject=["$mdDialog"],angular.module("ilWebClient").controller("patientAllocation",e)}();